{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Automated ML\n",
        "\n",
        "TODO: Import Dependencies. In the cell below, import all the dependencies that you will need to complete the project."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.core import Workspace, Dataset, Experiment\r\n",
        "from azureml.train.automl import AutoMLConfig"
      ],
      "outputs": [],
      "execution_count": 1,
      "metadata": {
        "gather": {
          "logged": 1627136772533
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Dataset\n",
        "\n",
        "### Overview\n",
        "TODO: In this markdown cell, give an overview of the dataset you are using. Also mention the task you will be performing.\n",
        "\n",
        "\n",
        "TODO: Get data. In the cell below, write code to access the data you will be using in this project. Remember that the dataset needs to be external."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "workspace = Workspace.from_config()\r\n",
        "print(workspace.name, workspace.resource_group, workspace.location, sep = '\\n')"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "udacityws\n",
            "udacitycapstone\n",
            "japaneast\n"
          ]
        }
      ],
      "execution_count": 2,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1627136773703
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# choose a name for experiment\n",
        "experiment_name = 'capstone'\n",
        "experiment=Experiment(workspace, experiment_name)\n",
        "\n",
        "dataset = Dataset.get_by_name(workspace, name='Census Income Data Set')\n",
        "df = dataset.to_pandas_dataframe()\n",
        "df.head(10)"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 3,
          "data": {
            "text/plain": "   age          workclass education_level  education-num  \\\n0   39          State-gov       Bachelors           13.0   \n1   50   Self-emp-not-inc       Bachelors           13.0   \n2   38            Private         HS-grad            9.0   \n3   53            Private            11th            7.0   \n4   28            Private       Bachelors           13.0   \n5   37            Private         Masters           14.0   \n6   49            Private             9th            5.0   \n7   52   Self-emp-not-inc         HS-grad            9.0   \n8   31            Private         Masters           14.0   \n9   42            Private       Bachelors           13.0   \n\n           marital-status          occupation    relationship    race  \\\n0           Never-married        Adm-clerical   Not-in-family   White   \n1      Married-civ-spouse     Exec-managerial         Husband   White   \n2                Divorced   Handlers-cleaners   Not-in-family   White   \n3      Married-civ-spouse   Handlers-cleaners         Husband   Black   \n4      Married-civ-spouse      Prof-specialty            Wife   Black   \n5      Married-civ-spouse     Exec-managerial            Wife   White   \n6   Married-spouse-absent       Other-service   Not-in-family   Black   \n7      Married-civ-spouse     Exec-managerial         Husband   White   \n8           Never-married      Prof-specialty   Not-in-family   White   \n9      Married-civ-spouse     Exec-managerial         Husband   White   \n\n       sex  capital-gain  capital-loss  hours-per-week  native-country income  \n0     Male        2174.0           0.0            40.0   United-States  <=50K  \n1     Male           0.0           0.0            13.0   United-States  <=50K  \n2     Male           0.0           0.0            40.0   United-States  <=50K  \n3     Male           0.0           0.0            40.0   United-States  <=50K  \n4   Female           0.0           0.0            40.0            Cuba  <=50K  \n5   Female           0.0           0.0            40.0   United-States  <=50K  \n6   Female           0.0           0.0            16.0         Jamaica  <=50K  \n7     Male           0.0           0.0            45.0   United-States   >50K  \n8   Female       14084.0           0.0            50.0   United-States   >50K  \n9     Male        5178.0           0.0            40.0   United-States   >50K  ",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>workclass</th>\n      <th>education_level</th>\n      <th>education-num</th>\n      <th>marital-status</th>\n      <th>occupation</th>\n      <th>relationship</th>\n      <th>race</th>\n      <th>sex</th>\n      <th>capital-gain</th>\n      <th>capital-loss</th>\n      <th>hours-per-week</th>\n      <th>native-country</th>\n      <th>income</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>39</td>\n      <td>State-gov</td>\n      <td>Bachelors</td>\n      <td>13.0</td>\n      <td>Never-married</td>\n      <td>Adm-clerical</td>\n      <td>Not-in-family</td>\n      <td>White</td>\n      <td>Male</td>\n      <td>2174.0</td>\n      <td>0.0</td>\n      <td>40.0</td>\n      <td>United-States</td>\n      <td>&lt;=50K</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>50</td>\n      <td>Self-emp-not-inc</td>\n      <td>Bachelors</td>\n      <td>13.0</td>\n      <td>Married-civ-spouse</td>\n      <td>Exec-managerial</td>\n      <td>Husband</td>\n      <td>White</td>\n      <td>Male</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>13.0</td>\n      <td>United-States</td>\n      <td>&lt;=50K</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>38</td>\n      <td>Private</td>\n      <td>HS-grad</td>\n      <td>9.0</td>\n      <td>Divorced</td>\n      <td>Handlers-cleaners</td>\n      <td>Not-in-family</td>\n      <td>White</td>\n      <td>Male</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>40.0</td>\n      <td>United-States</td>\n      <td>&lt;=50K</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>53</td>\n      <td>Private</td>\n      <td>11th</td>\n      <td>7.0</td>\n      <td>Married-civ-spouse</td>\n      <td>Handlers-cleaners</td>\n      <td>Husband</td>\n      <td>Black</td>\n      <td>Male</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>40.0</td>\n      <td>United-States</td>\n      <td>&lt;=50K</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>28</td>\n      <td>Private</td>\n      <td>Bachelors</td>\n      <td>13.0</td>\n      <td>Married-civ-spouse</td>\n      <td>Prof-specialty</td>\n      <td>Wife</td>\n      <td>Black</td>\n      <td>Female</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>40.0</td>\n      <td>Cuba</td>\n      <td>&lt;=50K</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>37</td>\n      <td>Private</td>\n      <td>Masters</td>\n      <td>14.0</td>\n      <td>Married-civ-spouse</td>\n      <td>Exec-managerial</td>\n      <td>Wife</td>\n      <td>White</td>\n      <td>Female</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>40.0</td>\n      <td>United-States</td>\n      <td>&lt;=50K</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>49</td>\n      <td>Private</td>\n      <td>9th</td>\n      <td>5.0</td>\n      <td>Married-spouse-absent</td>\n      <td>Other-service</td>\n      <td>Not-in-family</td>\n      <td>Black</td>\n      <td>Female</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>16.0</td>\n      <td>Jamaica</td>\n      <td>&lt;=50K</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>52</td>\n      <td>Self-emp-not-inc</td>\n      <td>HS-grad</td>\n      <td>9.0</td>\n      <td>Married-civ-spouse</td>\n      <td>Exec-managerial</td>\n      <td>Husband</td>\n      <td>White</td>\n      <td>Male</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>45.0</td>\n      <td>United-States</td>\n      <td>&gt;50K</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>31</td>\n      <td>Private</td>\n      <td>Masters</td>\n      <td>14.0</td>\n      <td>Never-married</td>\n      <td>Prof-specialty</td>\n      <td>Not-in-family</td>\n      <td>White</td>\n      <td>Female</td>\n      <td>14084.0</td>\n      <td>0.0</td>\n      <td>50.0</td>\n      <td>United-States</td>\n      <td>&gt;50K</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>42</td>\n      <td>Private</td>\n      <td>Bachelors</td>\n      <td>13.0</td>\n      <td>Married-civ-spouse</td>\n      <td>Exec-managerial</td>\n      <td>Husband</td>\n      <td>White</td>\n      <td>Male</td>\n      <td>5178.0</td>\n      <td>0.0</td>\n      <td>40.0</td>\n      <td>United-States</td>\n      <td>&gt;50K</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 3,
      "metadata": {
        "gather": {
          "logged": 1627136778620
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## AutoML Configuration\n",
        "\n",
        "TODO: Explain why you chose the automl settings and cofiguration you used below."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.core.compute import ComputeTarget, AmlCompute\r\n",
        "from azureml.core.compute_target import ComputeTargetException\r\n",
        "\r\n",
        "### YOUR CODE HERE ###\r\n",
        "cpu_cluster_name = \"cpu-cluster\"\r\n",
        "\r\n",
        "# Verify that the cluster does not exist already\r\n",
        "try:\r\n",
        "    cpu_cluster = ComputeTarget(workspace=workspace, name=cpu_cluster_name)\r\n",
        "    print('Found existing cluster, use it.')\r\n",
        "except ComputeTargetException:\r\n",
        "    compute_config = AmlCompute.provisioning_configuration(vm_size='STANDARD_D2_V2',\r\n",
        "                                                           max_nodes=6, \r\n",
        "                                                           idle_seconds_before_scaledown=2400)\r\n",
        "    cpu_cluster = ComputeTarget.create(workspace, cpu_cluster_name, compute_config)\r\n",
        "\r\n",
        "cpu_cluster.wait_for_completion(show_output=True)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Found existing cluster, use it.\n",
            "Succeeded\n",
            "AmlCompute wait for completion finished\n",
            "\n",
            "Minimum number of nodes requested have been provisioned\n"
          ]
        }
      ],
      "execution_count": 4,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1627136779855
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# TODO: Put your automl settings here\n",
        "automl_settings = {\n",
        "    \"compute_target\": cpu_cluster,\n",
        "    \"experiment_timeout_minutes\": 30,\n",
        "    \"max_concurrent_iterations\": 5,\n",
        "    \"primary_metric\" : 'accuracy'\n",
        "}\n",
        "automl_config = AutoMLConfig(\n",
        "    task = 'classification',\n",
        "    training_data = dataset,\n",
        "    #valudation_data = validation_data,\n",
        "    label_column_name = 'income',\n",
        "    n_cross_validations = 5,\n",
        "    **automl_settings)"
      ],
      "outputs": [],
      "execution_count": 5,
      "metadata": {
        "gather": {
          "logged": 1627136780347
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# TODO: Submit your experiment\n",
        "automl_run = experiment.submit(automl_config, show_output = True)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Submitting remote run.\n",
            "No run_configuration provided, running on cpu-cluster with default configuration\n",
            "Running on remote compute: cpu-cluster\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<IPython.core.display.HTML object>",
            "text/html": "<table style=\"width:100%\"><tr><th>Experiment</th><th>Id</th><th>Type</th><th>Status</th><th>Details Page</th><th>Docs Page</th></tr><tr><td>capstone</td><td>AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a</td><td>automl</td><td>NotStarted</td><td><a href=\"https://ml.azure.com/runs/AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a?wsid=/subscriptions/653662f1-95de-4498-b876-1fd625bf5d18/resourcegroups/udacitycapstone/workspaces/udacityws&amp;tid=60e63508-9cfd-4013-9a1f-7610707b07ce\" target=\"_blank\" rel=\"noopener\">Link to Azure Machine Learning studio</a></td><td><a href=\"https://docs.microsoft.com/en-us/python/api/overview/azure/ml/intro?view=azure-ml-py\" target=\"_blank\" rel=\"noopener\">Link to Documentation</a></td></tr></table>"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Current status: FeaturesGeneration. Generating features for the dataset.\n",
            "Current status: DatasetFeaturization. Beginning to fit featurizers and featurize the dataset.\n",
            "Current status: DatasetCrossValidationSplit. Generating individually featurized CV splits.\n",
            "Current status: ModelSelection. Beginning model selection.\n",
            "\n",
            "****************************************************************************************************\n",
            "DATA GUARDRAILS: \n",
            "\n",
            "TYPE:         Class balancing detection\n",
            "STATUS:       PASSED\n",
            "DESCRIPTION:  Your inputs were analyzed, and all classes are balanced in your training data.\n",
            "              Learn more about imbalanced data: https://aka.ms/AutomatedMLImbalancedData\n",
            "\n",
            "****************************************************************************************************\n",
            "\n",
            "TYPE:         Missing feature values imputation\n",
            "STATUS:       PASSED\n",
            "DESCRIPTION:  No feature missing values were detected in the training data.\n",
            "              Learn more about missing value imputation: https://aka.ms/AutomatedMLFeaturization\n",
            "\n",
            "****************************************************************************************************\n",
            "\n",
            "TYPE:         High cardinality feature detection\n",
            "STATUS:       PASSED\n",
            "DESCRIPTION:  Your inputs were analyzed, and no high cardinality features were detected.\n",
            "              Learn more about high cardinality feature handling: https://aka.ms/AutomatedMLFeaturization\n",
            "\n",
            "****************************************************************************************************\n",
            "\n",
            "****************************************************************************************************\n",
            "ITERATION: The iteration being evaluated.\n",
            "PIPELINE: A summary description of the pipeline being evaluated.\n",
            "DURATION: Time taken for the current iteration.\n",
            "METRIC: The result of computing score on the fitted pipeline.\n",
            "BEST: The best observed score thus far.\n",
            "****************************************************************************************************\n",
            "\n",
            " ITERATION   PIPELINE                                       DURATION      METRIC      BEST\n",
            "         3   MaxAbsScaler RandomForest                      0:00:47       0.7872    0.7872\n",
            "         0   MaxAbsScaler LightGBM                          0:00:56       0.8698    0.8698\n",
            "         4   MaxAbsScaler RandomForest                      0:00:46       0.7411    0.8698\n",
            "         5   MaxAbsScaler RandomForest                      0:00:40       0.7264    0.8698\n",
            "         2   MaxAbsScaler RandomForest                      0:01:44       0.8337    0.8698\n",
            "         1   MaxAbsScaler XGBoostClassifier                 0:01:57       0.8617    0.8698\n",
            "         7   SparseNormalizer XGBoostClassifier             0:01:12       0.8674    0.8698\n",
            "         8   SparseNormalizer XGBoostClassifier             0:01:03       0.8651    0.8698\n",
            "        10   SparseNormalizer XGBoostClassifier             0:00:48       0.8578    0.8698\n",
            "         6   SparseNormalizer XGBoostClassifier             0:02:44       0.8668    0.8698\n",
            "         9   SparseNormalizer XGBoostClassifier             0:01:13       0.8674    0.8698\n",
            "        11   StandardScalerWrapper RandomForest             0:00:47       0.8419    0.8698\n",
            "        12   MaxAbsScaler RandomForest                      0:00:56       0.8156    0.8698\n",
            "        13   SparseNormalizer XGBoostClassifier             0:00:48       0.8105    0.8698\n",
            "        15   MaxAbsScaler LightGBM                          0:00:42       0.8317    0.8698\n",
            "        16   MaxAbsScaler LogisticRegression                0:00:45       0.8470    0.8698\n",
            "        14   SparseNormalizer XGBoostClassifier             0:01:36       0.8675    0.8698\n",
            "        18   MaxAbsScaler LightGBM                          0:01:17       0.8333    0.8698\n",
            "        19   MaxAbsScaler LightGBM                          0:00:43       0.8221    0.8698\n",
            "        17   MaxAbsScaler ExtremeRandomTrees                0:02:00       0.8148    0.8698\n",
            "        21   StandardScalerWrapper RandomForest             0:00:53       0.8018    0.8698\n",
            "        20   SparseNormalizer XGBoostClassifier             0:01:48       0.8678    0.8698\n",
            "        22   MaxAbsScaler RandomForest                      0:01:15       0.8420    0.8698\n",
            "        23   MaxAbsScaler LogisticRegression                0:00:50       0.8472    0.8698\n",
            "        24   MaxAbsScaler LogisticRegression                0:00:49       0.8463    0.8698\n",
            "        25   MaxAbsScaler LightGBM                          0:00:42       0.7641    0.8698\n",
            "        26   SparseNormalizer XGBoostClassifier             0:01:03       0.8654    0.8698\n",
            "        27   StandardScalerWrapper LightGBM                 0:00:43       0.8113    0.8698\n",
            "        28   MaxAbsScaler LightGBM                          0:00:52       0.8472    0.8698\n",
            "        29   SparseNormalizer RandomForest                  0:01:32       0.8382    0.8698\n",
            "        30   SparseNormalizer LightGBM                      0:01:02       0.8585    0.8698\n",
            "        31   StandardScalerWrapper XGBoostClassifier        0:00:51       0.8529    0.8698\n",
            "        33   SparseNormalizer LightGBM                      0:00:45       0.8209    0.8698\n",
            "        32   SparseNormalizer XGBoostClassifier             0:01:09       0.8632    0.8698\n",
            "        34   SparseNormalizer XGBoostClassifier             0:01:06       0.8631    0.8698\n",
            "        35   StandardScalerWrapper LightGBM                 0:00:45       0.7522    0.8698\n",
            "        36   SparseNormalizer XGBoostClassifier             0:01:01       0.8643    0.8698\n",
            "        37   SparseNormalizer XGBoostClassifier             0:01:04       0.8632    0.8698\n",
            "        38   StandardScalerWrapper XGBoostClassifier        0:00:49       0.8506    0.8698\n",
            "        39   SparseNormalizer XGBoostClassifier             0:01:03       0.8629    0.8698\n",
            "        40   TruncatedSVDWrapper LightGBM                   0:01:03       0.8432    0.8698\n",
            "        41   SparseNormalizer XGBoostClassifier             0:01:00       0.8598    0.8698\n",
            "        42   SparseNormalizer XGBoostClassifier             0:01:47       0.8663    0.8698\n",
            "        43   SparseNormalizer XGBoostClassifier             0:01:34       0.8676    0.8698\n",
            "        44   StandardScalerWrapper XGBoostClassifier        0:01:20       0.8695    0.8698\n",
            "        45   MaxAbsScaler LightGBM                          0:01:16       0.8410    0.8698\n",
            "        46   MaxAbsScaler LogisticRegression                0:01:04       0.8034    0.8698\n",
            "        47   StandardScalerWrapper LogisticRegression       0:00:51       0.8068    0.8698\n",
            "        49   MaxAbsScaler LogisticRegression                0:01:00       0.8067    0.8698\n",
            "        50   SparseNormalizer LightGBM                      0:01:03       0.8614    0.8698\n",
            "        48   StandardScalerWrapper XGBoostClassifier        0:02:02       0.8697    0.8698\n",
            "        51   SparseNormalizer XGBoostClassifier             0:01:31       0.8672    0.8698\n",
            "        52   SparseNormalizer XGBoostClassifier             0:01:20       0.8666    0.8698\n",
            "        53   SparseNormalizer XGBoostClassifier             0:01:17       0.8658    0.8698\n",
            "        55   StandardScalerWrapper LightGBM                 0:01:01       0.8562    0.8698\n",
            "        54   SparseNormalizer XGBoostClassifier             0:01:35       0.8663    0.8698\n",
            "        57   SparseNormalizer XGBoostClassifier             0:00:56       0.8617    0.8698\n",
            "        56   SparseNormalizer XGBoostClassifier             0:01:55       0.8680    0.8698\n",
            "        58   StandardScalerWrapper XGBoostClassifier        0:00:48       0.8656    0.8698\n",
            "        60   MaxAbsScaler LightGBM                          0:00:41       0.7522    0.8698\n",
            "        59   SparseNormalizer XGBoostClassifier             0:01:09          nan    0.8698\n",
            "ERROR: {\n",
            "    \"additional_properties\": {},\n",
            "    \"error\": {\n",
            "        \"additional_properties\": {\n",
            "            \"debugInfo\": null\n",
            "        },\n",
            "        \"code\": \"UserError\",\n",
            "        \"severity\": null,\n",
            "        \"message\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_format\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_parameters\": {},\n",
            "        \"reference_code\": null,\n",
            "        \"details_uri\": null,\n",
            "        \"target\": null,\n",
            "        \"details\": [],\n",
            "        \"inner_error\": {\n",
            "            \"additional_properties\": {},\n",
            "            \"code\": \"ResourceExhausted\",\n",
            "            \"inner_error\": {\n",
            "                \"additional_properties\": {},\n",
            "                \"code\": \"Timeout\",\n",
            "                \"inner_error\": {\n",
            "                    \"additional_properties\": {},\n",
            "                    \"code\": \"ExperimentTimeoutForIterations\",\n",
            "                    \"inner_error\": null\n",
            "                }\n",
            "            }\n",
            "        },\n",
            "        \"additional_info\": null\n",
            "    },\n",
            "    \"correlation\": null,\n",
            "    \"environment\": null,\n",
            "    \"location\": null,\n",
            "    \"time\": {},\n",
            "    \"component_name\": null\n",
            "}\n",
            "        61   SparseNormalizer XGBoostClassifier             0:00:41          nan    0.8698\n",
            "ERROR: {\n",
            "    \"additional_properties\": {},\n",
            "    \"error\": {\n",
            "        \"additional_properties\": {\n",
            "            \"debugInfo\": null\n",
            "        },\n",
            "        \"code\": \"UserError\",\n",
            "        \"severity\": null,\n",
            "        \"message\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_format\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_parameters\": {},\n",
            "        \"reference_code\": null,\n",
            "        \"details_uri\": null,\n",
            "        \"target\": null,\n",
            "        \"details\": [],\n",
            "        \"inner_error\": {\n",
            "            \"additional_properties\": {},\n",
            "            \"code\": \"ResourceExhausted\",\n",
            "            \"inner_error\": {\n",
            "                \"additional_properties\": {},\n",
            "                \"code\": \"Timeout\",\n",
            "                \"inner_error\": {\n",
            "                    \"additional_properties\": {},\n",
            "                    \"code\": \"ExperimentTimeoutForIterations\",\n",
            "                    \"inner_error\": null\n",
            "                }\n",
            "            }\n",
            "        },\n",
            "        \"additional_info\": null\n",
            "    },\n",
            "    \"correlation\": null,\n",
            "    \"environment\": null,\n",
            "    \"location\": null,\n",
            "    \"time\": {},\n",
            "    \"component_name\": null\n",
            "}\n",
            "        62                                                  0:01:01          nan    0.8698\n",
            "ERROR: {\n",
            "    \"additional_properties\": {},\n",
            "    \"error\": {\n",
            "        \"additional_properties\": {\n",
            "            \"debugInfo\": null\n",
            "        },\n",
            "        \"code\": \"UserError\",\n",
            "        \"severity\": null,\n",
            "        \"message\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_format\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_parameters\": {},\n",
            "        \"reference_code\": null,\n",
            "        \"details_uri\": null,\n",
            "        \"target\": null,\n",
            "        \"details\": [],\n",
            "        \"inner_error\": {\n",
            "            \"additional_properties\": {},\n",
            "            \"code\": \"ResourceExhausted\",\n",
            "            \"inner_error\": {\n",
            "                \"additional_properties\": {},\n",
            "                \"code\": \"Timeout\",\n",
            "                \"inner_error\": {\n",
            "                    \"additional_properties\": {},\n",
            "                    \"code\": \"ExperimentTimeoutForIterations\",\n",
            "                    \"inner_error\": null\n",
            "                }\n",
            "            }\n",
            "        },\n",
            "        \"additional_info\": null\n",
            "    },\n",
            "    \"correlation\": null,\n",
            "    \"environment\": null,\n",
            "    \"location\": null,\n",
            "    \"time\": {},\n",
            "    \"component_name\": null\n",
            "}\n",
            "        63                                                  0:00:55          nan    0.8698\n",
            "ERROR: {\n",
            "    \"additional_properties\": {},\n",
            "    \"error\": {\n",
            "        \"additional_properties\": {\n",
            "            \"debugInfo\": null\n",
            "        },\n",
            "        \"code\": \"UserError\",\n",
            "        \"severity\": null,\n",
            "        \"message\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_format\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_parameters\": {},\n",
            "        \"reference_code\": null,\n",
            "        \"details_uri\": null,\n",
            "        \"target\": null,\n",
            "        \"details\": [],\n",
            "        \"inner_error\": {\n",
            "            \"additional_properties\": {},\n",
            "            \"code\": \"ResourceExhausted\",\n",
            "            \"inner_error\": {\n",
            "                \"additional_properties\": {},\n",
            "                \"code\": \"Timeout\",\n",
            "                \"inner_error\": {\n",
            "                    \"additional_properties\": {},\n",
            "                    \"code\": \"ExperimentTimeoutForIterations\",\n",
            "                    \"inner_error\": null\n",
            "                }\n",
            "            }\n",
            "        },\n",
            "        \"additional_info\": null\n",
            "    },\n",
            "    \"correlation\": null,\n",
            "    \"environment\": null,\n",
            "    \"location\": null,\n",
            "    \"time\": {},\n",
            "    \"component_name\": null\n",
            "}\n",
            "        64    VotingEnsemble                                0:01:45       0.8714    0.8714\n",
            "        65    StackEnsemble                                 0:02:00       0.8703    0.8714\n"
          ]
        }
      ],
      "execution_count": 6,
      "metadata": {
        "gather": {
          "logged": 1627139304980
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.widgets import RunDetails\r\n",
        "RunDetails(automl_run).show()"
      ],
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "_AutoMLWidget(widget_settings={'childWidgetDisplay': 'popup', 'send_telemetry': False, 'log_level': 'INFO', 's…",
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "b74bd061d13d45c7aa3c9d5f6f2f0403"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "application/aml.mini.widget.v1": "{\"status\": \"Completed\", \"workbench_run_details_uri\": \"https://ml.azure.com/runs/AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a?wsid=/subscriptions/653662f1-95de-4498-b876-1fd625bf5d18/resourcegroups/udacitycapstone/workspaces/udacityws&tid=60e63508-9cfd-4013-9a1f-7610707b07ce\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"run_properties\": {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"created_utc\": \"2021-07-24T14:26:24.755871Z\", \"properties\": {\"num_iterations\": \"1000\", \"training_type\": \"TrainFull\", \"acquisition_function\": \"EI\", \"primary_metric\": \"accuracy\", \"train_split\": \"0\", \"acquisition_parameter\": \"0\", \"num_cross_validation\": \"5\", \"target\": \"cpu-cluster\", \"AMLSettingsJsonString\": \"{\\\"path\\\":null,\\\"name\\\":\\\"capstone\\\",\\\"subscription_id\\\":\\\"653662f1-95de-4498-b876-1fd625bf5d18\\\",\\\"resource_group\\\":\\\"udacitycapstone\\\",\\\"workspace_name\\\":\\\"udacityws\\\",\\\"region\\\":\\\"japaneast\\\",\\\"compute_target\\\":\\\"cpu-cluster\\\",\\\"spark_service\\\":null,\\\"azure_service\\\":\\\"remote\\\",\\\"many_models\\\":false,\\\"pipeline_fetch_max_batch_size\\\":1,\\\"enable_batch_run\\\":false,\\\"enable_run_restructure\\\":false,\\\"start_auxiliary_runs_before_parent_complete\\\":false,\\\"enable_code_generation\\\":false,\\\"iterations\\\":1000,\\\"primary_metric\\\":\\\"accuracy\\\",\\\"task_type\\\":\\\"classification\\\",\\\"data_script\\\":null,\\\"test_size\\\":0.0,\\\"validation_size\\\":0.0,\\\"n_cross_validations\\\":5,\\\"y_min\\\":null,\\\"y_max\\\":null,\\\"num_classes\\\":null,\\\"featurization\\\":\\\"auto\\\",\\\"_ignore_package_version_incompatibilities\\\":false,\\\"is_timeseries\\\":false,\\\"max_cores_per_iteration\\\":1,\\\"max_concurrent_iterations\\\":5,\\\"iteration_timeout_minutes\\\":null,\\\"mem_in_mb\\\":null,\\\"enforce_time_on_windows\\\":false,\\\"experiment_timeout_minutes\\\":30,\\\"experiment_exit_score\\\":null,\\\"whitelist_models\\\":null,\\\"blacklist_algos\\\":[\\\"TensorFlowLinearClassifier\\\",\\\"TensorFlowDNN\\\"],\\\"supported_models\\\":[\\\"XGBoostClassifier\\\",\\\"AveragedPerceptronClassifier\\\",\\\"MultinomialNaiveBayes\\\",\\\"KNN\\\",\\\"LinearSVM\\\",\\\"TensorFlowDNN\\\",\\\"LightGBM\\\",\\\"BernoulliNaiveBayes\\\",\\\"ExtremeRandomTrees\\\",\\\"RandomForest\\\",\\\"TensorFlowLinearClassifier\\\",\\\"LogisticRegression\\\",\\\"DecisionTree\\\",\\\"SVM\\\",\\\"GradientBoosting\\\",\\\"SGD\\\"],\\\"private_models\\\":[],\\\"auto_blacklist\\\":true,\\\"blacklist_samples_reached\\\":false,\\\"exclude_nan_labels\\\":true,\\\"verbosity\\\":20,\\\"_debug_log\\\":\\\"azureml_automl.log\\\",\\\"show_warnings\\\":false,\\\"model_explainability\\\":true,\\\"service_url\\\":null,\\\"sdk_url\\\":null,\\\"sdk_packages\\\":null,\\\"enable_onnx_compatible_models\\\":false,\\\"enable_split_onnx_featurizer_estimator_models\\\":false,\\\"vm_type\\\":\\\"STANDARD_D2_V2\\\",\\\"telemetry_verbosity\\\":20,\\\"send_telemetry\\\":true,\\\"enable_dnn\\\":false,\\\"scenario\\\":\\\"SDK-1.13.0\\\",\\\"environment_label\\\":null,\\\"save_mlflow\\\":false,\\\"force_text_dnn\\\":false,\\\"enable_feature_sweeping\\\":true,\\\"enable_early_stopping\\\":false,\\\"early_stopping_n_iters\\\":10,\\\"metrics\\\":null,\\\"enable_metric_confidence\\\":false,\\\"enable_ensembling\\\":true,\\\"enable_stack_ensembling\\\":true,\\\"ensemble_iterations\\\":15,\\\"enable_tf\\\":false,\\\"enable_subsampling\\\":null,\\\"subsample_seed\\\":null,\\\"enable_nimbusml\\\":false,\\\"enable_streaming\\\":false,\\\"force_streaming\\\":false,\\\"track_child_runs\\\":true,\\\"allowed_private_models\\\":[],\\\"label_column_name\\\":\\\"income\\\",\\\"weight_column_name\\\":null,\\\"cv_split_column_names\\\":null,\\\"enable_local_managed\\\":false,\\\"_local_managed_run_id\\\":null,\\\"cost_mode\\\":1,\\\"lag_length\\\":0,\\\"metric_operation\\\":\\\"maximize\\\",\\\"preprocess\\\":true}\", \"DataPrepJsonString\": \"{\\\\\\\"training_data\\\\\\\": {\\\\\\\"datasetId\\\\\\\": \\\\\\\"fa0687fd-3726-4831-863a-18a8ccfd8f14\\\\\\\"}, \\\\\\\"datasets\\\\\\\": 0}\", \"EnableSubsampling\": null, \"runTemplate\": \"AutoML\", \"azureml.runsource\": \"automl\", \"display_task_type\": \"classification\", \"dependencies_versions\": \"{\\\"azureml-widgets\\\": \\\"1.31.0\\\", \\\"azureml-train\\\": \\\"1.31.0\\\", \\\"azureml-train-restclients-hyperdrive\\\": \\\"1.31.0\\\", \\\"azureml-train-core\\\": \\\"1.31.0\\\", \\\"azureml-train-automl\\\": \\\"1.31.0\\\", \\\"azureml-train-automl-runtime\\\": \\\"1.31.0\\\", \\\"azureml-train-automl-client\\\": \\\"1.31.0\\\", \\\"azureml-tensorboard\\\": \\\"1.31.0\\\", \\\"azureml-telemetry\\\": \\\"1.31.0\\\", \\\"azureml-sdk\\\": \\\"1.31.0\\\", \\\"azureml-samples\\\": \\\"0+unknown\\\", \\\"azureml-responsibleai\\\": \\\"1.31.0\\\", \\\"azureml-pipeline\\\": \\\"1.31.0\\\", \\\"azureml-pipeline-steps\\\": \\\"1.31.0\\\", \\\"azureml-pipeline-core\\\": \\\"1.31.0\\\", \\\"azureml-opendatasets\\\": \\\"1.31.0\\\", \\\"azureml-model-management-sdk\\\": \\\"1.0.1b6.post1\\\", \\\"azureml-mlflow\\\": \\\"1.31.0\\\", \\\"azureml-interpret\\\": \\\"1.31.0\\\", \\\"azureml-explain-model\\\": \\\"1.31.0\\\", \\\"azureml-defaults\\\": \\\"1.31.0\\\", \\\"azureml-dataset-runtime\\\": \\\"1.31.0\\\", \\\"azureml-dataprep\\\": \\\"2.18.0\\\", \\\"azureml-dataprep-rslex\\\": \\\"1.16.1\\\", \\\"azureml-dataprep-native\\\": \\\"36.0.0\\\", \\\"azureml-datadrift\\\": \\\"1.31.0\\\", \\\"azureml-core\\\": \\\"1.31.0\\\", \\\"azureml-contrib-services\\\": \\\"1.31.0\\\", \\\"azureml-contrib-server\\\": \\\"1.31.0\\\", \\\"azureml-contrib-reinforcementlearning\\\": \\\"1.31.0\\\", \\\"azureml-contrib-pipeline-steps\\\": \\\"1.31.0\\\", \\\"azureml-contrib-notebook\\\": \\\"1.31.0\\\", \\\"azureml-contrib-fairness\\\": \\\"1.31.0\\\", \\\"azureml-contrib-dataset\\\": \\\"1.31.0\\\", \\\"azureml-cli-common\\\": \\\"1.31.0\\\", \\\"azureml-automl-runtime\\\": \\\"1.31.0\\\", \\\"azureml-automl-dnn-nlp\\\": \\\"1.31.0\\\", \\\"azureml-automl-core\\\": \\\"1.31.0\\\", \\\"azureml-accel-models\\\": \\\"1.31.0\\\"}\", \"_aml_system_scenario_identification\": \"Remote.Parent\", \"ClientType\": \"SDK\", \"environment_cpu_name\": \"AzureML-AutoML\", \"environment_cpu_label\": \"prod\", \"environment_gpu_name\": \"AzureML-AutoML-GPU\", \"environment_gpu_label\": \"prod\", \"root_attribution\": \"automl\", \"attribution\": \"AutoML\", \"Orchestrator\": \"AutoML\", \"CancelUri\": \"https://japaneast.api.azureml.ms/jasmine/v1.0/subscriptions/653662f1-95de-4498-b876-1fd625bf5d18/resourceGroups/udacitycapstone/providers/Microsoft.MachineLearningServices/workspaces/udacityws/experimentids/71e58e51-6b4e-48f1-9863-62022f60b877/cancel/AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"ClientSdkVersion\": \"1.32.0\", \"snapshotId\": \"00000000-0000-0000-0000-000000000000\", \"SetupRunId\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_setup\", \"SetupRunContainerId\": \"dcid.AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_setup\", \"FeaturizationRunJsonPath\": \"featurizer_container.json\", \"FeaturizationRunId\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_featurize\", \"ProblemInfoJsonString\": \"{\\\"dataset_num_categorical\\\": 0, \\\"is_sparse\\\": true, \\\"subsampling\\\": false, \\\"has_extra_col\\\": true, \\\"dataset_classes\\\": 2, \\\"dataset_features\\\": 102, \\\"dataset_samples\\\": 45222, \\\"single_frequency_class_detected\\\": false}\", \"ModelExplainRunId\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_ModelExplain\", \"azureml.git.repository_uri\": \"https://github.com/HajimeK/nd00333-capstone\", \"mlflow.source.git.repoURL\": \"https://github.com/HajimeK/nd00333-capstone\", \"azureml.git.branch\": \"master\", \"mlflow.source.git.branch\": \"master\", \"azureml.git.commit\": \"bb8bb394f2d1a40e23f582b5c1b308628e329b33\", \"mlflow.source.git.commit\": \"bb8bb394f2d1a40e23f582b5c1b308628e329b33\", \"azureml.git.dirty\": \"True\"}, \"tags\": {\"model_explain_run\": \"best_run\", \"_aml_system_azureml.automlComponent\": \"AutoML\", \"pipeline_id\": \"\", \"score\": \"\", \"predicted_cost\": \"\", \"fit_time\": \"\", \"training_percent\": \"\", \"iteration\": \"\", \"run_preprocessor\": \"\", \"run_algorithm\": \"\", \"dynamic_whitelisting_iterations\": \"<25>;<30>;<35>;<40>;<45>;<50>;<55>;<60>;\", \"automl_best_child_run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_64\", \"model_explain_best_run_child_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_64\"}, \"end_time_utc\": \"2021-07-24T15:08:08.738705Z\", \"status\": \"Completed\", \"log_files\": {}, \"log_groups\": [], \"run_duration\": \"0:41:43\", \"run_number\": \"193\", \"run_queued_details\": {\"status\": \"Completed\", \"details\": null}}, \"child_runs\": [{\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_0\", \"run_number\": 197, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:36:49.306561Z\", \"end_time\": \"2021-07-24T14:37:45.695101Z\", \"created_time\": \"2021-07-24T14:35:36.541717Z\", \"created_time_dt\": \"2021-07-24T14:35:36.541717Z\", \"duration\": \"0:02:09\", \"iteration\": \"0\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.86979796, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_4\", \"run_number\": 198, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:38:01.828714Z\", \"end_time\": \"2021-07-24T14:38:47.493223Z\", \"created_time\": \"2021-07-24T14:35:36.574186Z\", \"created_time_dt\": \"2021-07-24T14:35:36.574186Z\", \"duration\": \"0:03:10\", \"iteration\": \"4\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, RandomForest\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.74109904, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_2\", \"run_number\": 199, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:38:15.415378Z\", \"end_time\": \"2021-07-24T14:39:59.255315Z\", \"created_time\": \"2021-07-24T14:35:36.575598Z\", \"created_time_dt\": \"2021-07-24T14:35:36.575598Z\", \"duration\": \"0:04:22\", \"iteration\": \"2\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, RandomForest\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.83368728, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_3\", \"run_number\": 200, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:35:46.9069Z\", \"end_time\": \"2021-07-24T14:36:34.178454Z\", \"created_time\": \"2021-07-24T14:35:36.605333Z\", \"created_time_dt\": \"2021-07-24T14:35:36.605333Z\", \"duration\": \"0:00:57\", \"iteration\": \"3\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, RandomForest\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.78724922, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_1\", \"run_number\": 201, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:38:18.91311Z\", \"end_time\": \"2021-07-24T14:40:16.051409Z\", \"created_time\": \"2021-07-24T14:35:36.579387Z\", \"created_time_dt\": \"2021-07-24T14:35:36.579387Z\", \"duration\": \"0:04:39\", \"iteration\": \"1\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, XGBoostClassifier\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.86174888, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_5\", \"run_number\": 202, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:38:59.000116Z\", \"end_time\": \"2021-07-24T14:39:39.22649Z\", \"created_time\": \"2021-07-24T14:36:37.744182Z\", \"created_time_dt\": \"2021-07-24T14:36:37.744182Z\", \"duration\": \"0:03:01\", \"iteration\": \"5\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, RandomForest\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.7264386, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_6\", \"run_number\": 203, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:39:58.665906Z\", \"end_time\": \"2021-07-24T14:42:42.71412Z\", \"created_time\": \"2021-07-24T14:37:49.910213Z\", \"created_time_dt\": \"2021-07-24T14:37:49.910213Z\", \"duration\": \"0:04:52\", \"iteration\": \"6\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='max'\", \"primary_metric\": 0.86676843, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_7\", \"run_number\": 204, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:40:13.199453Z\", \"end_time\": \"2021-07-24T14:41:24.701545Z\", \"created_time\": \"2021-07-24T14:38:50.365854Z\", \"created_time_dt\": \"2021-07-24T14:38:50.365854Z\", \"duration\": \"0:02:34\", \"iteration\": \"7\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.86736547, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_8\", \"run_number\": 205, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:40:29.113153Z\", \"end_time\": \"2021-07-24T14:41:32.133686Z\", \"created_time\": \"2021-07-24T14:39:41.843353Z\", \"created_time_dt\": \"2021-07-24T14:39:41.843353Z\", \"duration\": \"0:01:50\", \"iteration\": \"8\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.86506575, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_9\", \"run_number\": 206, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:41:40.770227Z\", \"end_time\": \"2021-07-24T14:42:53.587267Z\", \"created_time\": \"2021-07-24T14:40:01.667615Z\", \"created_time_dt\": \"2021-07-24T14:40:01.667615Z\", \"duration\": \"0:02:51\", \"iteration\": \"9\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='max'\", \"primary_metric\": 0.86736548, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_10\", \"run_number\": 207, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:41:47.228003Z\", \"end_time\": \"2021-07-24T14:42:35.389098Z\", \"created_time\": \"2021-07-24T14:40:18.462158Z\", \"created_time_dt\": \"2021-07-24T14:40:18.462158Z\", \"duration\": \"0:02:16\", \"iteration\": \"10\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.85779055, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_11\", \"run_number\": 208, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:42:49.311114Z\", \"end_time\": \"2021-07-24T14:43:35.963341Z\", \"created_time\": \"2021-07-24T14:41:27.073397Z\", \"created_time_dt\": \"2021-07-24T14:41:27.073397Z\", \"duration\": \"0:02:08\", \"iteration\": \"11\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, RandomForest\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=True\\n\", \"primary_metric\": 0.84193541, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_12\", \"run_number\": 209, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:43:00.373568Z\", \"end_time\": \"2021-07-24T14:43:55.924622Z\", \"created_time\": \"2021-07-24T14:41:34.453512Z\", \"created_time_dt\": \"2021-07-24T14:41:34.453512Z\", \"duration\": \"0:02:21\", \"iteration\": \"12\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, RandomForest\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.81562071, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_13\", \"run_number\": 210, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:43:09.517039Z\", \"end_time\": \"2021-07-24T14:43:57.373487Z\", \"created_time\": \"2021-07-24T14:42:37.672505Z\", \"created_time_dt\": \"2021-07-24T14:42:37.672505Z\", \"duration\": \"0:01:19\", \"iteration\": \"13\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='max'\", \"primary_metric\": 0.8105124, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_14\", \"run_number\": 211, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:43:51.61912Z\", \"end_time\": \"2021-07-24T14:45:27.540108Z\", \"created_time\": \"2021-07-24T14:42:45.05468Z\", \"created_time_dt\": \"2021-07-24T14:42:45.05468Z\", \"duration\": \"0:02:42\", \"iteration\": \"14\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.86745392, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_15\", \"run_number\": 212, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:44:15.229884Z\", \"end_time\": \"2021-07-24T14:44:57.412687Z\", \"created_time\": \"2021-07-24T14:42:55.86198Z\", \"created_time_dt\": \"2021-07-24T14:42:55.86198Z\", \"duration\": \"0:02:01\", \"iteration\": \"15\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.83174116, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_16\", \"run_number\": 213, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:44:11.075726Z\", \"end_time\": \"2021-07-24T14:44:56.25749Z\", \"created_time\": \"2021-07-24T14:43:38.373113Z\", \"created_time_dt\": \"2021-07-24T14:43:38.373113Z\", \"duration\": \"0:01:17\", \"iteration\": \"16\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LogisticRegression\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.84695511, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_17\", \"run_number\": 214, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:45:13.445917Z\", \"end_time\": \"2021-07-24T14:47:13.137759Z\", \"created_time\": \"2021-07-24T14:43:58.383748Z\", \"created_time_dt\": \"2021-07-24T14:43:58.383748Z\", \"duration\": \"0:03:14\", \"iteration\": \"17\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, ExtremeRandomTrees\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.8148247, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_18\", \"run_number\": 215, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:45:13.474577Z\", \"end_time\": \"2021-07-24T14:46:30.098769Z\", \"created_time\": \"2021-07-24T14:44:02.076389Z\", \"created_time_dt\": \"2021-07-24T14:44:02.076389Z\", \"duration\": \"0:02:28\", \"iteration\": \"18\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.83328911, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_19\", \"run_number\": 216, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:45:47.791711Z\", \"end_time\": \"2021-07-24T14:46:30.777313Z\", \"created_time\": \"2021-07-24T14:44:58.61364Z\", \"created_time_dt\": \"2021-07-24T14:44:58.61364Z\", \"duration\": \"0:01:32\", \"iteration\": \"19\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.82212189, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_20\", \"run_number\": 217, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:46:44.697451Z\", \"end_time\": \"2021-07-24T14:48:32.947079Z\", \"created_time\": \"2021-07-24T14:45:02.792148Z\", \"created_time_dt\": \"2021-07-24T14:45:02.792148Z\", \"duration\": \"0:03:30\", \"iteration\": \"20\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.86780783, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_21\", \"run_number\": 218, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:46:46.17668Z\", \"end_time\": \"2021-07-24T14:47:39.159354Z\", \"created_time\": \"2021-07-24T14:45:29.748388Z\", \"created_time_dt\": \"2021-07-24T14:45:29.748388Z\", \"duration\": \"0:02:09\", \"iteration\": \"21\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, RandomForest\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=False\\n\", \"primary_metric\": 0.80175559, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_22\", \"run_number\": 219, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:47:30.093038Z\", \"end_time\": \"2021-07-24T14:48:44.976698Z\", \"created_time\": \"2021-07-24T14:46:32.697432Z\", \"created_time_dt\": \"2021-07-24T14:46:32.697432Z\", \"duration\": \"0:02:12\", \"iteration\": \"22\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, RandomForest\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.84202385, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_23\", \"run_number\": 220, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:47:54.866551Z\", \"end_time\": \"2021-07-24T14:48:44.72582Z\", \"created_time\": \"2021-07-24T14:46:37.161679Z\", \"created_time_dt\": \"2021-07-24T14:46:37.161679Z\", \"duration\": \"0:02:07\", \"iteration\": \"23\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LogisticRegression\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.84717625, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_24\", \"run_number\": 221, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:48:47.541785Z\", \"end_time\": \"2021-07-24T14:49:36.663061Z\", \"created_time\": \"2021-07-24T14:47:15.392484Z\", \"created_time_dt\": \"2021-07-24T14:47:15.392484Z\", \"duration\": \"0:02:21\", \"iteration\": \"24\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LogisticRegression\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.84633589, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_25\", \"run_number\": 222, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:49:01.020285Z\", \"end_time\": \"2021-07-24T14:49:43.017716Z\", \"created_time\": \"2021-07-24T14:47:42.86666Z\", \"created_time_dt\": \"2021-07-24T14:47:42.86666Z\", \"duration\": \"0:02:00\", \"iteration\": \"25\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.76405276, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_26\", \"run_number\": 223, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:49:03.448964Z\", \"end_time\": \"2021-07-24T14:50:06.730915Z\", \"created_time\": \"2021-07-24T14:48:35.214063Z\", \"created_time_dt\": \"2021-07-24T14:48:35.214063Z\", \"duration\": \"0:01:31\", \"iteration\": \"26\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='max'\", \"primary_metric\": 0.86535319, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_27\", \"run_number\": 224, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:49:52.575691Z\", \"end_time\": \"2021-07-24T14:50:35.705375Z\", \"created_time\": \"2021-07-24T14:48:47.065623Z\", \"created_time_dt\": \"2021-07-24T14:48:47.065623Z\", \"duration\": \"0:01:48\", \"iteration\": \"27\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, LightGBM\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=False\\n\", \"primary_metric\": 0.81126436, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_28\", \"run_number\": 225, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:49:58.961314Z\", \"end_time\": \"2021-07-24T14:50:51.146583Z\", \"created_time\": \"2021-07-24T14:48:47.095277Z\", \"created_time_dt\": \"2021-07-24T14:48:47.095277Z\", \"duration\": \"0:02:04\", \"iteration\": \"28\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.84717623, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_29\", \"run_number\": 226, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:50:19.812594Z\", \"end_time\": \"2021-07-24T14:51:51.365198Z\", \"created_time\": \"2021-07-24T14:49:39.10912Z\", \"created_time_dt\": \"2021-07-24T14:49:39.10912Z\", \"duration\": \"0:02:12\", \"iteration\": \"29\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, RandomForest\", \"run_properties\": \"copy=True, norm='max'\", \"primary_metric\": 0.83817606, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_30\", \"run_number\": 227, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:50:52.091105Z\", \"end_time\": \"2021-07-24T14:51:54.366536Z\", \"created_time\": \"2021-07-24T14:49:46.867846Z\", \"created_time_dt\": \"2021-07-24T14:49:46.867846Z\", \"duration\": \"0:02:07\", \"iteration\": \"30\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, LightGBM\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.85849815, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_31\", \"run_number\": 228, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:51:03.027039Z\", \"end_time\": \"2021-07-24T14:51:54.170768Z\", \"created_time\": \"2021-07-24T14:50:09.077793Z\", \"created_time_dt\": \"2021-07-24T14:50:09.077793Z\", \"duration\": \"0:01:45\", \"iteration\": \"31\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, XGBoostClassifier\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=False\\n\", \"primary_metric\": 0.85290358, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_32\", \"run_number\": 229, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:52:05.451667Z\", \"end_time\": \"2021-07-24T14:53:14.78216Z\", \"created_time\": \"2021-07-24T14:50:37.848233Z\", \"created_time_dt\": \"2021-07-24T14:50:37.848233Z\", \"duration\": \"0:02:36\", \"iteration\": \"32\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.86318613, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_33\", \"run_number\": 230, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:52:09.145602Z\", \"end_time\": \"2021-07-24T14:52:54.552378Z\", \"created_time\": \"2021-07-24T14:50:53.301982Z\", \"created_time_dt\": \"2021-07-24T14:50:53.301982Z\", \"duration\": \"0:02:01\", \"iteration\": \"33\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, LightGBM\", \"run_properties\": \"copy=True, norm='max'\", \"primary_metric\": 0.8208836, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_34\", \"run_number\": 231, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:52:13.182792Z\", \"end_time\": \"2021-07-24T14:53:19.594292Z\", \"created_time\": \"2021-07-24T14:51:53.640958Z\", \"created_time_dt\": \"2021-07-24T14:51:53.640958Z\", \"duration\": \"0:01:25\", \"iteration\": \"34\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='max'\", \"primary_metric\": 0.8630534, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_35\", \"run_number\": 232, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:53:30.478105Z\", \"end_time\": \"2021-07-24T14:54:15.319838Z\", \"created_time\": \"2021-07-24T14:51:58.503076Z\", \"created_time_dt\": \"2021-07-24T14:51:58.503076Z\", \"duration\": \"0:02:16\", \"iteration\": \"35\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, LightGBM\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=True\\n\", \"primary_metric\": 0.75215588, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_36\", \"run_number\": 233, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:53:13.713144Z\", \"end_time\": \"2021-07-24T14:54:14.873938Z\", \"created_time\": \"2021-07-24T14:51:58.526666Z\", \"created_time_dt\": \"2021-07-24T14:51:58.526666Z\", \"duration\": \"0:02:16\", \"iteration\": \"36\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.86431388, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_37\", \"run_number\": 234, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:53:35.283632Z\", \"end_time\": \"2021-07-24T14:54:38.95357Z\", \"created_time\": \"2021-07-24T14:52:56.708156Z\", \"created_time_dt\": \"2021-07-24T14:52:56.708156Z\", \"duration\": \"0:01:42\", \"iteration\": \"37\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.86320823, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_38\", \"run_number\": 235, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:54:33.622319Z\", \"end_time\": \"2021-07-24T14:55:22.7332Z\", \"created_time\": \"2021-07-24T14:53:17.125149Z\", \"created_time_dt\": \"2021-07-24T14:53:17.125149Z\", \"duration\": \"0:02:05\", \"iteration\": \"38\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, XGBoostClassifier\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=False\\n\", \"primary_metric\": 0.85060377, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_39\", \"run_number\": 236, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:54:31.167887Z\", \"end_time\": \"2021-07-24T14:55:34.370144Z\", \"created_time\": \"2021-07-24T14:53:21.73518Z\", \"created_time_dt\": \"2021-07-24T14:53:21.73518Z\", \"duration\": \"0:02:12\", \"iteration\": \"39\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='max'\", \"primary_metric\": 0.86287653, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_40\", \"run_number\": 237, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:54:54.276292Z\", \"end_time\": \"2021-07-24T14:55:57.22708Z\", \"created_time\": \"2021-07-24T14:54:18.273096Z\", \"created_time_dt\": \"2021-07-24T14:54:18.273096Z\", \"duration\": \"0:01:38\", \"iteration\": \"40\", \"goal\": \"accuracy_max\", \"run_name\": \"TruncatedSVDWrapper, LightGBM\", \"run_properties\": \"n_components=0.2573684210526316, random_state=None\", \"primary_metric\": 0.84315165, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_41\", \"run_number\": 238, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:55:33.863677Z\", \"end_time\": \"2021-07-24T14:56:33.904724Z\", \"created_time\": \"2021-07-24T14:54:21.824668Z\", \"created_time_dt\": \"2021-07-24T14:54:21.824668Z\", \"duration\": \"0:02:12\", \"iteration\": \"41\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.859847, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_42\", \"run_number\": 239, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:55:50.360129Z\", \"end_time\": \"2021-07-24T14:57:37.052189Z\", \"created_time\": \"2021-07-24T14:54:41.076394Z\", \"created_time_dt\": \"2021-07-24T14:54:41.076394Z\", \"duration\": \"0:02:55\", \"iteration\": \"42\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.866282, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_43\", \"run_number\": 240, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:56:11.292782Z\", \"end_time\": \"2021-07-24T14:57:45.479182Z\", \"created_time\": \"2021-07-24T14:55:25.262556Z\", \"created_time_dt\": \"2021-07-24T14:55:25.262556Z\", \"duration\": \"0:02:20\", \"iteration\": \"43\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.86760878, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_44\", \"run_number\": 241, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:56:47.158846Z\", \"end_time\": \"2021-07-24T14:58:06.904146Z\", \"created_time\": \"2021-07-24T14:55:36.735358Z\", \"created_time_dt\": \"2021-07-24T14:55:36.735358Z\", \"duration\": \"0:02:30\", \"iteration\": \"44\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, XGBoostClassifier\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=False\\n\", \"primary_metric\": 0.86948843, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_45\", \"run_number\": 242, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:57:51.480896Z\", \"end_time\": \"2021-07-24T14:59:07.507127Z\", \"created_time\": \"2021-07-24T14:56:00.842713Z\", \"created_time_dt\": \"2021-07-24T14:56:00.842713Z\", \"duration\": \"0:03:06\", \"iteration\": \"45\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.84102876, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_46\", \"run_number\": 243, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:58:00.802214Z\", \"end_time\": \"2021-07-24T14:59:04.66657Z\", \"created_time\": \"2021-07-24T14:56:36.371119Z\", \"created_time_dt\": \"2021-07-24T14:56:36.371119Z\", \"duration\": \"0:02:28\", \"iteration\": \"46\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LogisticRegression\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.80341426, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_47\", \"run_number\": 244, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:58:20.702806Z\", \"end_time\": \"2021-07-24T14:59:11.366735Z\", \"created_time\": \"2021-07-24T14:57:39.394865Z\", \"created_time_dt\": \"2021-07-24T14:57:39.394865Z\", \"duration\": \"0:01:31\", \"iteration\": \"47\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, LogisticRegression\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=True\\n\", \"primary_metric\": 0.8068197, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_48\", \"run_number\": 245, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:59:15.124043Z\", \"end_time\": \"2021-07-24T15:01:17.12743Z\", \"created_time\": \"2021-07-24T14:57:47.603045Z\", \"created_time_dt\": \"2021-07-24T14:57:47.603045Z\", \"duration\": \"0:03:29\", \"iteration\": \"48\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, XGBoostClassifier\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=False\\n\", \"primary_metric\": 0.86968741, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_49\", \"run_number\": 246, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:59:21.003738Z\", \"end_time\": \"2021-07-24T15:00:21.10643Z\", \"created_time\": \"2021-07-24T14:58:09.139441Z\", \"created_time_dt\": \"2021-07-24T14:58:09.139441Z\", \"duration\": \"0:02:11\", \"iteration\": \"49\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LogisticRegression\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.80673125, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_50\", \"run_number\": 247, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T14:59:27.571831Z\", \"end_time\": \"2021-07-24T15:00:30.309695Z\", \"created_time\": \"2021-07-24T14:59:08.654422Z\", \"created_time_dt\": \"2021-07-24T14:59:08.654422Z\", \"duration\": \"0:01:21\", \"iteration\": \"50\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, LightGBM\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.8613507, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_51\", \"run_number\": 248, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T15:00:37.21139Z\", \"end_time\": \"2021-07-24T15:02:08.108807Z\", \"created_time\": \"2021-07-24T14:59:12.519808Z\", \"created_time_dt\": \"2021-07-24T14:59:12.519808Z\", \"duration\": \"0:02:55\", \"iteration\": \"51\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.86716652, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_52\", \"run_number\": 249, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T15:00:47.02172Z\", \"end_time\": \"2021-07-24T15:02:06.534238Z\", \"created_time\": \"2021-07-24T14:59:16.106597Z\", \"created_time_dt\": \"2021-07-24T14:59:16.106597Z\", \"duration\": \"0:02:50\", \"iteration\": \"52\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.86656942, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_53\", \"run_number\": 250, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T15:01:27.397748Z\", \"end_time\": \"2021-07-24T15:02:44.708634Z\", \"created_time\": \"2021-07-24T15:00:23.631331Z\", \"created_time_dt\": \"2021-07-24T15:00:23.631331Z\", \"duration\": \"0:02:21\", \"iteration\": \"53\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.86577337, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_54\", \"run_number\": 251, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T15:02:20.053626Z\", \"end_time\": \"2021-07-24T15:03:55.052341Z\", \"created_time\": \"2021-07-24T15:00:32.464194Z\", \"created_time_dt\": \"2021-07-24T15:00:32.464194Z\", \"duration\": \"0:03:22\", \"iteration\": \"54\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.86632619, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_55\", \"run_number\": 252, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T15:02:23.893064Z\", \"end_time\": \"2021-07-24T15:03:25.271808Z\", \"created_time\": \"2021-07-24T15:01:20.657505Z\", \"created_time_dt\": \"2021-07-24T15:01:20.657505Z\", \"duration\": \"0:02:04\", \"iteration\": \"55\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, LightGBM\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=True\\n\", \"primary_metric\": 0.85624264, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_56\", \"run_number\": 253, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T15:03:00.286074Z\", \"end_time\": \"2021-07-24T15:04:54.940855Z\", \"created_time\": \"2021-07-24T15:02:08.987969Z\", \"created_time_dt\": \"2021-07-24T15:02:08.987969Z\", \"duration\": \"0:02:45\", \"iteration\": \"56\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.86800681, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_57\", \"run_number\": 254, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T15:03:39.073638Z\", \"end_time\": \"2021-07-24T15:04:34.586676Z\", \"created_time\": \"2021-07-24T15:02:12.986378Z\", \"created_time_dt\": \"2021-07-24T15:02:12.986378Z\", \"duration\": \"0:02:21\", \"iteration\": \"57\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.86172667, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_58\", \"run_number\": 255, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T15:04:13.093381Z\", \"end_time\": \"2021-07-24T15:05:00.751976Z\", \"created_time\": \"2021-07-24T15:02:46.92368Z\", \"created_time_dt\": \"2021-07-24T15:02:46.92368Z\", \"duration\": \"0:02:13\", \"iteration\": \"58\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, XGBoostClassifier\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=False\\n\", \"primary_metric\": 0.86557443, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_59\", \"run_number\": 256, \"metric\": null, \"status\": \"Canceled\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T15:04:48.959217Z\", \"end_time\": \"2021-07-24T15:05:57.915186Z\", \"created_time\": \"2021-07-24T15:03:27.762222Z\", \"created_time_dt\": \"2021-07-24T15:03:27.762222Z\", \"duration\": \"0:02:30\", \"iteration\": \"59\", \"goal\": null, \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": null}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_60\", \"run_number\": 257, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T15:05:10.680843Z\", \"end_time\": \"2021-07-24T15:05:51.499266Z\", \"created_time\": \"2021-07-24T15:03:58.923387Z\", \"created_time_dt\": \"2021-07-24T15:03:58.923387Z\", \"duration\": \"0:01:52\", \"iteration\": \"60\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.75215588, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_61\", \"run_number\": 258, \"metric\": null, \"status\": \"Canceled\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T15:05:17.197522Z\", \"end_time\": \"2021-07-24T15:05:57.879109Z\", \"created_time\": \"2021-07-24T15:04:36.922771Z\", \"created_time_dt\": \"2021-07-24T15:04:36.922771Z\", \"duration\": \"0:01:20\", \"iteration\": \"61\", \"goal\": null, \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": null}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_62\", \"run_number\": 259, \"metric\": null, \"status\": \"Canceled\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T15:04:57.241243Z\", \"end_time\": \"2021-07-24T15:05:57.935086Z\", \"created_time\": \"2021-07-24T15:04:57.241243Z\", \"created_time_dt\": \"2021-07-24T15:04:57.241243Z\", \"duration\": \"0:01:00\", \"iteration\": \"62\", \"goal\": null, \"run_name\": \"Canceled\", \"run_properties\": null}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_63\", \"run_number\": 260, \"metric\": null, \"status\": \"Canceled\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T15:05:03.077238Z\", \"end_time\": \"2021-07-24T15:05:57.845606Z\", \"created_time\": \"2021-07-24T15:05:03.077238Z\", \"created_time_dt\": \"2021-07-24T15:05:03.077238Z\", \"duration\": \"0:00:54\", \"iteration\": \"63\", \"goal\": null, \"run_name\": \"Canceled\", \"run_properties\": null}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_65\", \"run_number\": 261, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T15:06:06.568443Z\", \"end_time\": \"2021-07-24T15:08:06.608431Z\", \"created_time\": \"2021-07-24T15:05:58.942034Z\", \"created_time_dt\": \"2021-07-24T15:05:58.942034Z\", \"duration\": \"0:02:07\", \"iteration\": \"65\", \"goal\": \"accuracy_max\", \"run_name\": \"StackEnsemble\", \"run_properties\": \"\\n    base_learners=[('0', Pipeline(memory=None,\\n             steps=[('maxabsscaler', MaxAbsScaler(copy=True\", \"primary_metric\": 0.87026234, \"best_metric\": 0.87141225}, {\"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_64\", \"run_number\": 262, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-24T15:06:06.737647Z\", \"end_time\": \"2021-07-24T15:07:51.522778Z\", \"created_time\": \"2021-07-24T15:05:58.970916Z\", \"created_time_dt\": \"2021-07-24T15:05:58.970916Z\", \"duration\": \"0:01:52\", \"iteration\": \"64\", \"goal\": \"accuracy_max\", \"run_name\": \"VotingEnsemble\", \"run_properties\": \"\\n    estimators=[('0', Pipeline(memory=None,\\n             steps=[('maxabsscaler', MaxAbsScaler(copy=True\", \"primary_metric\": 0.87141225, \"best_metric\": 0.87141225}], \"children_metrics\": {\"categories\": [0], \"series\": {\"f1_score_macro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"f1_score_macro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8153371110609997, 0.7962450703537736, 0.737686541181317, 0.5793649715756742, 0.7126012444242977, 0.6989484790617887, 0.8109972822325358, 0.8082742828406257, 0.8035649688894247, 0.80911205033402, 0.7868768359773, 0.7612119199230841, 0.7124852230734368, 0.65820756347025, 0.8113641766998263, 0.7309409543742061, 0.7809255795557085, 0.7059792829095974, 0.7304798045460407, 0.708846181490352, 0.8112015316368705, 0.6145079448964081, 0.767083410780278, 0.7814208753583411, 0.7793536462333528, 0.4795338927868051, 0.8041691548709234, 0.6857321164396085, 0.781672559106744, 0.7680560980827318, 0.7959860101598373, 0.77928448674029, 0.7995491277887692, 0.7263571778206204, 0.8003056901659459, 0.42927235469408276, 0.8047637301730376, 0.7982901443687981, 0.7790585486167488, 0.7989327053261649, 0.7769691431806353, 0.7914160666023344, 0.809379620812664, 0.8107463299599498, 0.8149314388862756, 0.772314388108825, 0.7692238156584317, 0.7723048555459606, 0.815753944537744, 0.7722278397174036, 0.8023072145999425, 0.8095002132160503, 0.8085888200381296, 0.8078591482916628, 0.8083920188239606, 0.7869118792554973, 0.811382617157682, 0.7967281177734309, 0.8054676058951757, 0.42927235469408276, 0.8170870506918302, 0.8159387464771388]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"f1_score_macro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.8170870506918302, 0.8170870506918302]}], \"accuracy\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"accuracy\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.861748880053025, 0.83368728376399, 0.7872492224610889, 0.7410990357563991, 0.7264385991806167, 0.8667684282406338, 0.8673654749496901, 0.8650657543282654, 0.8673654798394874, 0.8577905450388238, 0.8419354087100495, 0.8156207145509858, 0.8105124018709343, 0.8674539240501996, 0.8317411615078083, 0.8469551060364793, 0.8148246995402857, 0.8332891051157304, 0.8221218933588972, 0.8678078280277809, 0.8017555912999746, 0.8420238529207615, 0.8471762544591895, 0.8463358914308501, 0.7640527594471497, 0.8653531888447097, 0.8112643598069411, 0.847176227565304, 0.8381760640015804, 0.858498147622495, 0.8529035812631764, 0.8631861333169036, 0.8208835961721688, 0.8630534046559184, 0.7521558823407167, 0.8643138819637134, 0.8632082254216167, 0.850603765290702, 0.8628765284589877, 0.843151652910444, 0.8598469957940408, 0.8662819960837613, 0.8676087814893785, 0.8694884269497273, 0.8410287595879758, 0.8034142619254213, 0.8068197002114104, 0.8696874099207633, 0.8067312462211035, 0.8613506989598667, 0.8671665237623373, 0.8665694159308133, 0.8657733740262273, 0.8663261876278835, 0.8562426405492808, 0.868006810998817, 0.8617266730380727, 0.8655744326184693, 0.7521558823407167, 0.8714122517297047, 0.8702623449659169]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"accuracy_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8714122517297047, 0.8714122517297047]}], \"log_loss\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"log_loss\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.28275920092224316, 0.2993455196460976, 0.3659469245450698, 0.42730155063117536, 0.48952935741266196, 0.4976173585450974, 0.288972592480903, 0.29125058943791216, 0.30952412558985276, 0.2914830144767442, 0.40627983365101494, 0.34756484456673586, 0.395975713122876, 0.46047770283587175, 0.2882540082349735, 0.3828487467957327, 0.32746417572613123, 0.4076426075703279, 0.37436202144059977, 0.39457065308252953, 0.2876439416977134, 0.4056650373472916, 0.3423611333174805, 0.32691541082757497, 0.33009692506215865, 0.4472809875604928, 0.3092718518484607, 0.4064677337663028, 0.3265913415097864, 0.3593018142988275, 0.30753007104996244, 0.3176926226524365, 0.3008830007780536, 0.38456081181947405, 0.30019354803612086, 0.5593756030019486, 0.29462838433904315, 0.301252852327084, 0.3223622088229411, 0.30182487513616485, 0.33494893116710966, 0.30793513113498605, 0.28840452144764017, 0.2887648765504231, 0.28331816265042664, 0.3350705986508841, 0.39885983962219473, 0.3953516818489533, 0.28192824191741606, 0.3952272665112053, 0.3009893908753669, 0.2890205074975914, 0.2899561442608255, 0.2921198386685815, 0.2921425236993175, 0.30951114218129455, 0.290183591427671, 0.3024851162725911, 0.29170692040352986, 0.5378776494286648, 0.28254563761452145, 0.29816005708106397]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"log_loss_min\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606]}], \"recall_score_micro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"recall_score_micro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.861748880053025, 0.83368728376399, 0.7872492224610889, 0.7410990357563991, 0.7264385991806167, 0.8667684282406338, 0.8673654749496901, 0.8650657543282654, 0.8673654798394874, 0.8577905450388238, 0.8419354087100495, 0.8156207145509858, 0.8105124018709343, 0.8674539240501996, 0.8317411615078083, 0.8469551060364793, 0.8148246995402857, 0.8332891051157304, 0.8221218933588972, 0.8678078280277809, 0.8017555912999746, 0.8420238529207615, 0.8471762544591895, 0.8463358914308501, 0.7640527594471497, 0.8653531888447097, 0.8112643598069411, 0.847176227565304, 0.8381760640015804, 0.858498147622495, 0.8529035812631764, 0.8631861333169036, 0.8208835961721688, 0.8630534046559184, 0.7521558823407167, 0.8643138819637134, 0.8632082254216167, 0.850603765290702, 0.8628765284589877, 0.843151652910444, 0.8598469957940408, 0.8662819960837613, 0.8676087814893785, 0.8694884269497273, 0.8410287595879758, 0.8034142619254213, 0.8068197002114104, 0.8696874099207633, 0.8067312462211035, 0.8613506989598667, 0.8671665237623373, 0.8665694159308133, 0.8657733740262273, 0.8663261876278835, 0.8562426405492808, 0.868006810998817, 0.8617266730380727, 0.8655744326184693, 0.7521558823407167, 0.8714122517297047, 0.8702623449659169]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"recall_score_micro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8714122517297047, 0.8714122517297047]}], \"precision_score_weighted\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"precision_score_weighted\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8655067207486846, 0.8566907003679635, 0.8270247886998886, 0.8021757519499729, 0.8264787769437744, 0.8204119525236614, 0.8622429817767164, 0.8626306125936736, 0.8601630484354921, 0.8626613156301979, 0.8528535042455815, 0.8348088907970466, 0.8035405632184374, 0.8165208729921627, 0.8629015124487927, 0.8258059929273921, 0.8406513088736158, 0.8030200380678408, 0.8291956418617389, 0.8153790548454077, 0.8632278697717606, 0.8316630631982802, 0.8344022308713118, 0.8409228089657752, 0.8398343514674019, 0.8109845385785348, 0.8605140849837054, 0.8018384157932209, 0.8409557560654213, 0.8310646977226123, 0.8529570861471051, 0.8472200265908203, 0.8581699040347383, 0.809859817875464, 0.8579605604429317, 0.565750145941529, 0.859346634396748, 0.8583774993728133, 0.8441598101245852, 0.8578622557220402, 0.8368821497259127, 0.854912757215868, 0.86159601679482, 0.8629745708355031, 0.8651743739523556, 0.8342172506285607, 0.8475227750353074, 0.848620992593305, 0.8654666964610269, 0.8485982064554467, 0.8562945961772682, 0.8624620886302363, 0.8618313143707393, 0.8609592785998897, 0.8615506671289939, 0.8506056997026097, 0.8634286067106419, 0.8566531789810783, 0.8606763184746933, 0.565750145941529, 0.8671615631277078, 0.8660062805426483]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"precision_score_weighted_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8671615631277078, 0.8671615631277078]}], \"average_precision_score_macro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"average_precision_score_macro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9031958892227223, 0.8940978845437929, 0.8552704047658943, 0.808272344280879, 0.8357920384819064, 0.8245470512010712, 0.8993090693323994, 0.8987750954911504, 0.8958268673866095, 0.8981803663583495, 0.8849115312385043, 0.8624187586430789, 0.7692786437153475, 0.8109870984651781, 0.8993388268678857, 0.8504546406035729, 0.8661277630913146, 0.7880651687342786, 0.8567118073265624, 0.837184829544927, 0.9002350776776208, 0.8512293989018535, 0.8582606320047997, 0.8672741564710668, 0.8632248386162396, 0.8293997630952937, 0.8959611122285448, 0.8021352286129358, 0.8642770674226593, 0.8453713519080784, 0.8862606095634717, 0.8811075592351308, 0.8940814696382242, 0.8238004447936218, 0.8931582968989696, 0.7945936813784409, 0.8966852093532927, 0.8939166368853393, 0.8773473326902202, 0.8925743465410308, 0.8568625860363215, 0.8901214635846824, 0.8995561176593523, 0.8995254692167244, 0.9027520144774899, 0.8553452510515542, 0.8619428842852809, 0.8664632499371537, 0.9035391718139092, 0.8664895216708206, 0.8906598391337102, 0.8994735750677825, 0.898418427862157, 0.8972696774563085, 0.8972293406559146, 0.8863987124082936, 0.8986244774308245, 0.8925130229505962, 0.8982173946248032, 0.8111192645993974, 0.9037991723581393, 0.9042175518421416]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"average_precision_score_macro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9037991723581393, 0.9042175518421416]}], \"f1_score_micro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"f1_score_micro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.861748880053025, 0.83368728376399, 0.7872492224610889, 0.7410990357563991, 0.7264385991806167, 0.8667684282406338, 0.8673654749496901, 0.8650657543282654, 0.8673654798394876, 0.8577905450388238, 0.8419354087100495, 0.8156207145509858, 0.8105124018709343, 0.8674539240501996, 0.8317411615078083, 0.8469551060364793, 0.8148246995402857, 0.8332891051157304, 0.8221218933588972, 0.8678078280277809, 0.8017555912999746, 0.8420238529207615, 0.8471762544591895, 0.8463358914308501, 0.7640527594471497, 0.8653531888447097, 0.8112643598069409, 0.8471762275653039, 0.8381760640015804, 0.858498147622495, 0.8529035812631764, 0.8631861333169036, 0.8208835961721688, 0.8630534046559184, 0.7521558823407167, 0.8643138819637134, 0.8632082254216167, 0.850603765290702, 0.8628765284589877, 0.843151652910444, 0.8598469957940408, 0.8662819960837613, 0.8676087814893785, 0.8694884269497273, 0.8410287595879758, 0.8034142619254213, 0.8068197002114104, 0.8696874099207633, 0.8067312462211035, 0.8613506989598667, 0.8671665237623373, 0.8665694159308133, 0.8657733740262273, 0.8663261876278835, 0.8562426405492808, 0.868006810998817, 0.8617266730380727, 0.8655744326184693, 0.7521558823407167, 0.8714122517297047, 0.8702623449659169]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"f1_score_micro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8714122517297047, 0.8714122517297047]}], \"weighted_accuracy\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"weighted_accuracy\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.911716660903056, 0.9148887323854231, 0.9077891056780187, 0.908032020479491, 0.7174398653475078, 0.7005912717693078, 0.9093755466049835, 0.9146744160690439, 0.9145882843528307, 0.9135387373333496, 0.9157225634655196, 0.9047925292775236, 0.8910208867237104, 0.9144827965438278, 0.9107830698228057, 0.9091624189765962, 0.8959242098756931, 0.8941495549740269, 0.9126137106888089, 0.9061808425384446, 0.9119402048021253, 0.918972628829659, 0.8993014744540263, 0.8958709197636227, 0.8962119216160642, 0.9063393929848488, 0.9145584882720146, 0.9008499273832431, 0.8955858903024436, 0.8892844885774073, 0.9069460669847732, 0.9120625721107765, 0.9146772764887009, 0.8906800212327051, 0.913394411407614, 0.9020238243834158, 0.9110862740441465, 0.9162530826173615, 0.9068671516276403, 0.9145953865196645, 0.8911875141744117, 0.9157750622934403, 0.9102509922082949, 0.9120218924560313, 0.9114164022972988, 0.8913129648944205, 0.7952572263444635, 0.7997532134660134, 0.910806459160673, 0.7996296213825372, 0.9063844105819632, 0.9124882741641687, 0.9121042024939701, 0.9109264273743344, 0.9117078430257335, 0.9118897538932078, 0.9122501111702872, 0.9143171441382416, 0.9134836270946127, 0.9020238243834158, 0.9137777683968288, 0.9121835329059694]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"weighted_accuracy_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.911716660903056, 0.9148887323854231, 0.9148887323854231, 0.9148887323854231, 0.9148887323854231, 0.9148887323854231, 0.9148887323854231, 0.9148887323854231, 0.9148887323854231, 0.9148887323854231, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659, 0.918972628829659]}], \"f1_score_weighted\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"f1_score_weighted\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8659221752333192, 0.8545252831335584, 0.8177468071666422, 0.7282922764515092, 0.7582220051064532, 0.7447815991058987, 0.8627781281668861, 0.8619521268119124, 0.8589994245230826, 0.8622926825052233, 0.8488890950419676, 0.8312000613925539, 0.7993308706364717, 0.7732780672007505, 0.8632416657242912, 0.8139953915084102, 0.8415860604763236, 0.796211252248846, 0.8144233059345822, 0.8004136856818007, 0.8633456899041398, 0.7499297218451833, 0.8337258665413708, 0.8418881859855947, 0.8406666111936506, 0.6735626985060343, 0.8593726331216027, 0.7858942196030158, 0.8419879253140026, 0.8323673609910422, 0.8529465718783259, 0.8435807232640082, 0.8565102001101668, 0.8074602338604124, 0.8567560234059233, 0.6457670552932678, 0.8591426518610836, 0.8560020785850174, 0.8424720164771047, 0.8561201636147919, 0.8382475827666056, 0.8516671145632968, 0.8619093189073741, 0.8630704401576079, 0.8656174643611818, 0.8354021543926716, 0.8140207862946113, 0.817014802635138, 0.8660401500696062, 0.8169380461961003, 0.8568024627301432, 0.8623651676982886, 0.8617201109179135, 0.8610664114365925, 0.8615309917432775, 0.8482216698905306, 0.8635094523254601, 0.8547022259744577, 0.860016763709908, 0.6457670552932678, 0.8673709147547928, 0.866377382005912]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"f1_score_weighted_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8673709147547928, 0.8673709147547928]}], \"balanced_accuracy\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"balanced_accuracy\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.7992651069427531, 0.7723210134778931, 0.7089664470170656, 0.5840847100878997, 0.7809006740170253, 0.7699777427620942, 0.7950831413304401, 0.7877746060823896, 0.7817407145527818, 0.7896820633791831, 0.7602959618130872, 0.7362614987262803, 0.6887697452855444, 0.6355708227375829, 0.7945578823068069, 0.7014865678565, 0.7645776682388381, 0.6813364165115026, 0.6998458732317576, 0.6807318472678081, 0.7935599378560023, 0.6046007889115066, 0.7456362253960408, 0.7652575624837106, 0.7624298307690817, 0.5246809748176918, 0.7825633769563742, 0.6605519609831141, 0.7657341173964346, 0.7521952481786073, 0.7769783480829553, 0.7533552602826992, 0.7765600071661426, 0.7034662466355421, 0.7783688056298483, 0.5, 0.7856302147287246, 0.7739570775915643, 0.755925198434827, 0.7758513987379491, 0.7623363360929634, 0.765749894800812, 0.7923085370067339, 0.7928834223031759, 0.7989423174998179, 0.7564146641808637, 0.8171503290148866, 0.8187193173876622, 0.800489037368948, 0.818688755266329, 0.7855809919990392, 0.7909062331538015, 0.7899661638221394, 0.789788928204318, 0.7899736579056132, 0.7626011503084071, 0.7935696505175173, 0.7732458668334837, 0.7849521076350122, 0.5, 0.8001282746792657, 0.799729581274187]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"balanced_accuracy_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.8171503290148866, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622]}], \"AUC_weighted\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"AUC_weighted\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9274889336889851, 0.9198681527105746, 0.893617030409429, 0.8596849928207144, 0.8792203245454335, 0.870185691108024, 0.9245945416883986, 0.9234328112937437, 0.9212446905392436, 0.9232109904740303, 0.9117609695952196, 0.8985494461986295, 0.8505556088026797, 0.8607520430362383, 0.9246881634337086, 0.8906485597156237, 0.9037848509716697, 0.8518785892685059, 0.8971091706786861, 0.8838588806516352, 0.9249276401039964, 0.8857461784241071, 0.8955496536046427, 0.9040600892240056, 0.9024197905974377, 0.8769202957005955, 0.9210822256713754, 0.8616114896114029, 0.9050974214082503, 0.8828146696605212, 0.9135730021822182, 0.9103727381963178, 0.9195634356149357, 0.8676469794489616, 0.9185837550230207, 0.8595820306435658, 0.9225355610334297, 0.9192841650987968, 0.9084072848812481, 0.9178495135579621, 0.8994127601618935, 0.9159053111742118, 0.9245445559813321, 0.9244370606252907, 0.9272065074583153, 0.899794933207715, 0.9022643291405531, 0.90396352535866, 0.9278588667617738, 0.9039953724851397, 0.9174285506505331, 0.9242966293312131, 0.9237947461056282, 0.923046725195815, 0.9229274737214135, 0.9138515696673087, 0.9237332821485115, 0.9187045231435608, 0.9237244708786783, 0.8644210670342739, 0.927894205744837, 0.9283740584153405]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"AUC_weighted_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.927894205744837, 0.9283740584153405]}], \"norm_macro_recall\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"norm_macro_recall\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.5985302138855063, 0.5446420269557863, 0.41793289403413125, 0.16816942017579942, 0.5618013480340508, 0.5399554855241885, 0.5901662826608803, 0.575549212164779, 0.5634814291055636, 0.5793641267583663, 0.5205919236261745, 0.47252299745256077, 0.3775394905710886, 0.2711416454751659, 0.5891157646136138, 0.4029731357130002, 0.5291553364776764, 0.362672833023005, 0.3996917464635153, 0.36146369453561616, 0.5871198757120046, 0.20920157782301319, 0.49127245079208165, 0.530515124967421, 0.5248596615381633, 0.04936194963538374, 0.5651267539127485, 0.32110392196622817, 0.5314682347928692, 0.5043904963572146, 0.5539566961659104, 0.5067105205653986, 0.5531200143322851, 0.406932493271084, 0.5567376112596969, 0.0, 0.5712604294574493, 0.5479141551831286, 0.511850396869654, 0.5517027974758982, 0.5246726721859268, 0.531499789601624, 0.584617074013468, 0.5857668446063518, 0.5978846349996358, 0.5128293283617273, 0.6343006580297732, 0.6374386347753243, 0.6009780747378961, 0.637377510532658, 0.5711619839980784, 0.5818124663076031, 0.5799323276442788, 0.579577856408636, 0.5799473158112265, 0.5252023006168143, 0.5871393010350344, 0.5464917336669675, 0.5699042152700244, 0.0, 0.6002565493585313, 0.5994591625483741]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"norm_macro_recall_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.6343006580297732, 0.6374386347753243, 0.6374386347753243, 0.6374386347753243, 0.6374386347753243, 0.6374386347753243, 0.6374386347753243, 0.6374386347753243, 0.6374386347753243, 0.6374386347753243, 0.6374386347753243, 0.6374386347753243, 0.6374386347753243, 0.6374386347753243, 0.6374386347753243, 0.6374386347753243]}], \"average_precision_score_micro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"average_precision_score_micro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9521538878137544, 0.9471828494064807, 0.9247476103141705, 0.8952600190183849, 0.8745149814216016, 0.8638827440429028, 0.9499485312485456, 0.9493902059982068, 0.9476744978825883, 0.9492044014103485, 0.9414035869944183, 0.930553092556248, 0.8910350905955748, 0.89885413129719, 0.9501111725279395, 0.9203609529127617, 0.9350515818605905, 0.9004277830693654, 0.9244213838900013, 0.9151203773921708, 0.9503221092195042, 0.9084618089541845, 0.929829560228816, 0.9352388862402335, 0.9340504817126021, 0.8998281232975234, 0.9478442260972745, 0.9040565578446612, 0.9355448688336903, 0.9217100007912012, 0.9431936217535712, 0.940633156507608, 0.9467632996264864, 0.9112655300362972, 0.9463897446157408, 0.8899878774612396, 0.9485573614571157, 0.9465954506009948, 0.939063575214405, 0.9459013955146551, 0.9318563062039091, 0.9445622269405923, 0.950128064496834, 0.9500452538076972, 0.9519699381553931, 0.9318861813786874, 0.9015708488722437, 0.90381600655494, 0.952405170970208, 0.9038507884758513, 0.9454905051558959, 0.9499190748868862, 0.9495004147440493, 0.9490107662655903, 0.9487760317365039, 0.9433291754979983, 0.9494688712204983, 0.946145123704542, 0.949565835836214, 0.8945400854513489, 0.9523172642994137, 0.9527403492988537]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"average_precision_score_micro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.9527403492988537]}], \"matthews_correlation\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"matthews_correlation\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.6353202455207431, 0.6050902531055435, 0.5090856428461688, 0.3134009817140475, 0.48899645118159657, 0.4687521500821698, 0.626635024611857, 0.624726764987515, 0.6168362511160635, 0.6255300363076675, 0.5910053792468755, 0.5416144255241844, 0.45250781257206485, 0.4202170886901354, 0.6279274608283145, 0.5012913584190806, 0.5678079468617636, 0.44606211103339344, 0.5056734251119812, 0.4664508496636442, 0.628233601517744, 0.39151269661771804, 0.5462344236298066, 0.568648819499104, 0.5652073123531056, 0.1874355463399116, 0.617898693552184, 0.42639045735768055, 0.5689302536432029, 0.5421737978551617, 0.5994450111111401, 0.5759515228097214, 0.6102827644739789, 0.4739806350101297, 0.6106777807395821, 0.0, 0.6167428676233021, 0.609435948530057, 0.5713081847872644, 0.6092732416333241, 0.5586946077633217, 0.5981530481302291, 0.6242092652190349, 0.6274573974252871, 0.6344647197866512, 0.5506046428142779, 0.568101303843469, 0.572395849184715, 0.635637206578914, 0.5722948947422951, 0.610040802127196, 0.6255790740043076, 0.6238357184495156, 0.6218995520199917, 0.6232492412879949, 0.5877890874395729, 0.6286937757471449, 0.6054969222073454, 0.6192837215458121, 0.0, 0.6393181493773549, 0.6365941270360791]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"matthews_correlation_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.6393181493773549, 0.6393181493773549]}], \"AUC_micro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"AUC_micro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9502846739450476, 0.9451870817634556, 0.9222261999292722, 0.891103887872922, 0.8663004076201803, 0.8541751893506468, 0.9482709503912001, 0.9477386372369411, 0.9463537070187373, 0.9475517949117458, 0.9403996742992977, 0.9283236912234984, 0.8980396149526213, 0.905830794571038, 0.9483305116978752, 0.9171483643962404, 0.9328699443989752, 0.8968601705984559, 0.9211700194604715, 0.9113913808224912, 0.9486748238300459, 0.9036733951194403, 0.9275054654401437, 0.9332098041203263, 0.9317360951432635, 0.8932270640905406, 0.9463010501213247, 0.9003548377301825, 0.9331899422008938, 0.9200825091794291, 0.9412136282871207, 0.9386241483775863, 0.945096135136661, 0.9088993144539923, 0.9446913927881215, 0.8862050528540253, 0.9468471446598562, 0.9449416932786336, 0.9369851030699408, 0.9442617671919127, 0.9294339026701669, 0.9427691913501397, 0.9483712132694316, 0.9483276649582407, 0.9500402366195614, 0.9292429828871258, 0.89820524873428, 0.9009100093646822, 0.950469956393569, 0.9009212444545833, 0.9436530072919901, 0.9482377777661813, 0.9477918761135093, 0.947260924749186, 0.9471687934163657, 0.9411936243977218, 0.9478333984419185, 0.9443612087256185, 0.9476494746394575, 0.8880082651951454, 0.9505217692716382, 0.9508283294711852]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"AUC_micro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.9505217692716382, 0.9508283294711852]}], \"recall_score_weighted\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"recall_score_weighted\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.861748880053025, 0.83368728376399, 0.7872492224610889, 0.7410990357563991, 0.7264385991806167, 0.8667684282406338, 0.8673654749496901, 0.8650657543282654, 0.8673654798394874, 0.8577905450388238, 0.8419354087100495, 0.8156207145509858, 0.8105124018709343, 0.8674539240501996, 0.8317411615078083, 0.8469551060364793, 0.8148246995402857, 0.8332891051157304, 0.8221218933588972, 0.8678078280277809, 0.8017555912999746, 0.8420238529207615, 0.8471762544591895, 0.8463358914308501, 0.7640527594471497, 0.8653531888447097, 0.8112643598069411, 0.847176227565304, 0.8381760640015804, 0.858498147622495, 0.8529035812631764, 0.8631861333169036, 0.8208835961721688, 0.8630534046559184, 0.7521558823407167, 0.8643138819637134, 0.8632082254216167, 0.850603765290702, 0.8628765284589877, 0.843151652910444, 0.8598469957940408, 0.8662819960837613, 0.8676087814893785, 0.8694884269497273, 0.8410287595879758, 0.8034142619254213, 0.8068197002114104, 0.8696874099207633, 0.8067312462211035, 0.8613506989598667, 0.8671665237623373, 0.8665694159308133, 0.8657733740262273, 0.8663261876278835, 0.8562426405492808, 0.868006810998817, 0.8617266730380727, 0.8655744326184693, 0.7521558823407167, 0.8714122517297047, 0.8702623449659169]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"recall_score_weighted_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8714122517297047, 0.8714122517297047]}], \"AUC_macro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"AUC_macro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9274889336889851, 0.9198681527105748, 0.893617030409429, 0.8596849928207145, 0.8792203245454335, 0.8701856911080241, 0.9245945450615682, 0.923432811339947, 0.9212446923067432, 0.9232109888689504, 0.9117609728434518, 0.8985494461986295, 0.8505556088026797, 0.8607520430362383, 0.9246881634337086, 0.8906485597156237, 0.9037848509716699, 0.8518785892685059, 0.8971091706786861, 0.8838588806516352, 0.9249276484427291, 0.8857461784241071, 0.8955496536046429, 0.9040600892240056, 0.9024197905974376, 0.8769202957005955, 0.9210822207282294, 0.8616114896114027, 0.9050974214082503, 0.8828146696605212, 0.9135730021822182, 0.9103727365912381, 0.9195634339471891, 0.8676469794489616, 0.9185837565573027, 0.8595820306435659, 0.9225355643714959, 0.9192841634395773, 0.9084072848812482, 0.9178495119338459, 0.8994127601618935, 0.9159053111742118, 0.9245445543572159, 0.9244370622303707, 0.927206507520982, 0.8997949332077149, 0.9022643291405531, 0.90396352535866, 0.9278588650478238, 0.9039953724851397, 0.9174285506505331, 0.9242966260121831, 0.9237947461056283, 0.9230467235280683, 0.922927462106875, 0.9138515696673088, 0.9237332821485115, 0.9187045247486406, 0.9237244709685124, 0.864421067034274, 0.9278942090632765, 0.9283740584153405]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"AUC_macro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278942090632765, 0.9283740584153405]}], \"average_precision_score_weighted\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"average_precision_score_weighted\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9390440746669853, 0.9331021556844338, 0.9090262688533128, 0.8788586168359395, 0.897009436995764, 0.8888979608438705, 0.9364814699630915, 0.9359193379076164, 0.9338545263959734, 0.9355789308825146, 0.9263877059929639, 0.91349147734225, 0.8534665023973534, 0.8752133158025324, 0.9365428097829291, 0.9063173203369551, 0.9164675269558856, 0.8681393016235306, 0.910736568024545, 0.8986454904313608, 0.9369413342169054, 0.9056344656866802, 0.9108823969453834, 0.9170066964877123, 0.91482218168427, 0.8935044796993431, 0.9339607920062644, 0.8769413051104238, 0.9159484394686268, 0.9012567621558117, 0.9279886857191018, 0.9248176099998553, 0.932837414511934, 0.8882373089743906, 0.9321880874305494, 0.871569361854764, 0.9347821409072262, 0.9326824597261691, 0.922650971618228, 0.9316848156895933, 0.9111735805673165, 0.9302087979410517, 0.9365969778813575, 0.9365396542409086, 0.9388227644285969, 0.9106734639372434, 0.9142374288702758, 0.9166038195791024, 0.9393490377269409, 0.9166381841852578, 0.9308614020567851, 0.936459382834818, 0.9358549042335698, 0.9351741667589902, 0.9350459461098206, 0.9281714430592789, 0.9359013508613693, 0.931974948917434, 0.9359113896692905, 0.8820661541692761, 0.9394062782140582, 0.9397303965111241]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"average_precision_score_weighted_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9394062782140582, 0.9397303965111241]}], \"precision_score_micro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"precision_score_micro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.861748880053025, 0.83368728376399, 0.7872492224610889, 0.7410990357563991, 0.7264385991806167, 0.8667684282406338, 0.8673654749496901, 0.8650657543282654, 0.8673654798394874, 0.8577905450388238, 0.8419354087100495, 0.8156207145509858, 0.8105124018709343, 0.8674539240501996, 0.8317411615078083, 0.8469551060364793, 0.8148246995402857, 0.8332891051157304, 0.8221218933588972, 0.8678078280277809, 0.8017555912999746, 0.8420238529207615, 0.8471762544591895, 0.8463358914308501, 0.7640527594471497, 0.8653531888447097, 0.8112643598069411, 0.847176227565304, 0.8381760640015804, 0.858498147622495, 0.8529035812631764, 0.8631861333169036, 0.8208835961721688, 0.8630534046559184, 0.7521558823407167, 0.8643138819637134, 0.8632082254216167, 0.850603765290702, 0.8628765284589877, 0.843151652910444, 0.8598469957940408, 0.8662819960837613, 0.8676087814893785, 0.8694884269497273, 0.8410287595879758, 0.8034142619254213, 0.8068197002114104, 0.8696874099207633, 0.8067312462211035, 0.8613506989598667, 0.8671665237623373, 0.8665694159308133, 0.8657733740262273, 0.8663261876278835, 0.8562426405492808, 0.868006810998817, 0.8617266730380727, 0.8655744326184693, 0.7521558823407167, 0.8714122517297047, 0.8702623449659169]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"precision_score_micro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8714122517297047, 0.8714122517297047]}], \"recall_score_macro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"recall_score_macro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.7992651069427531, 0.7723210134778931, 0.7089664470170656, 0.5840847100878997, 0.7809006740170253, 0.7699777427620942, 0.7950831413304401, 0.7877746060823896, 0.7817407145527818, 0.7896820633791831, 0.7602959618130872, 0.7362614987262803, 0.6887697452855444, 0.6355708227375829, 0.7945578823068069, 0.7014865678565, 0.7645776682388381, 0.6813364165115026, 0.6998458732317576, 0.6807318472678081, 0.7935599378560023, 0.6046007889115066, 0.7456362253960408, 0.7652575624837106, 0.7624298307690817, 0.5246809748176918, 0.7825633769563742, 0.6605519609831141, 0.7657341173964346, 0.7521952481786073, 0.7769783480829553, 0.7533552602826992, 0.7765600071661426, 0.7034662466355421, 0.7783688056298483, 0.5, 0.7856302147287246, 0.7739570775915643, 0.755925198434827, 0.7758513987379491, 0.7623363360929634, 0.765749894800812, 0.7923085370067339, 0.7928834223031759, 0.7989423174998179, 0.7564146641808637, 0.8171503290148866, 0.8187193173876622, 0.800489037368948, 0.818688755266329, 0.7855809919990392, 0.7909062331538015, 0.7899661638221394, 0.789788928204318, 0.7899736579056132, 0.7626011503084071, 0.7935696505175173, 0.7732458668334837, 0.7849521076350122, 0.5, 0.8001282746792657, 0.799729581274187]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"recall_score_macro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.8171503290148866, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622, 0.8187193173876622]}], \"precision_score_macro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"markers\", \"name\": \"precision_score_macro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8372032804339561, 0.8361462778756132, 0.810118921714803, 0.8186737485552402, 0.7128153452889161, 0.7034770102857213, 0.8326907616879172, 0.8390616414651401, 0.8376358159481363, 0.8377158968640843, 0.8355011525565802, 0.8106044676317282, 0.7711966100668164, 0.8257932950777747, 0.8346588355923548, 0.8118130719646282, 0.8046623458339999, 0.7743586507242858, 0.8199188040999204, 0.8010076657055272, 0.8361342893150233, 0.8703187446616762, 0.8036851891190706, 0.8047849030730123, 0.8043500203212941, 0.861307965595931, 0.8378408226169185, 0.7831258974654902, 0.8045312988468222, 0.7914109815415751, 0.8243474573120896, 0.827381672430328, 0.8366810506384571, 0.7761217774465922, 0.8349412045958186, 0.37607794117035837, 0.8329430130935865, 0.8389420576004525, 0.81886475265719, 0.8364532943567589, 0.7974707058232331, 0.836599622142784, 0.83325291474362, 0.8360697652024612, 0.8366569854780858, 0.7956132125012875, 0.7544095277934927, 0.7569996282373961, 0.8361600124485593, 0.7569333386614968, 0.8257934921220302, 0.8363379127603263, 0.8355537597660486, 0.8336623342523841, 0.8349046514071565, 0.8289392172394502, 0.8366120327749964, 0.835461213505823, 0.8364842926998932, 0.37607794117035837, 0.8404738999787036, 0.8380324943322233]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"64\", \"65\"], \"mode\": \"lines\", \"name\": \"precision_score_macro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8372032804339561, 0.8372032804339561, 0.8372032804339561, 0.8372032804339561, 0.8372032804339561, 0.8372032804339561, 0.8372032804339561, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762, 0.8703187446616762]}]}, \"metricName\": null, \"primaryMetricName\": \"accuracy\", \"showLegend\": false}, \"run_metrics\": [{\"name\": \"experiment_status\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], \"series\": [{\"data\": [\"DatasetEvaluation\", \"FeaturesGeneration\", \"DatasetFeaturization\", \"DatasetFeaturizationCompleted\", \"DatasetCrossValidationSplit\", \"ModelSelection\", \"BestRunExplainModel\", \"ModelExplanationDataSetSetup\", \"PickSurrogateModel\", \"EngineeredFeatureExplanations\", \"EngineeredFeatureExplanations\", \"RawFeaturesExplanations\", \"RawFeaturesExplanations\", \"BestRunExplainModel\"]}]}, {\"name\": \"experiment_status_description\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], \"series\": [{\"data\": [\"Gathering dataset statistics.\", \"Generating features for the dataset.\", \"Beginning to fit featurizers and featurize the dataset.\", \"Completed fit featurizers and featurizing the dataset.\", \"Generating individually featurized CV splits.\", \"Beginning model selection.\", \"Best run model explanations started\", \"Model explanations data setup completed\", \"Choosing LightGBM as the surrogate model for explanations\", \"Computation of engineered features started\", \"Computation of engineered features completed\", \"Computation of raw features started\", \"Computation of raw features completed\", \"Best run model explanations completed\"]}]}, {\"name\": \"accuracy\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.8714122517297047]}]}, {\"name\": \"weighted_accuracy\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.9137777683968288]}]}, {\"name\": \"average_precision_score_macro\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.9037991723581393]}]}, {\"name\": \"f1_score_weighted\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.8673709147547928]}]}, {\"name\": \"average_precision_score_micro\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.9523172642994137]}]}, {\"name\": \"recall_score_micro\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.8714122517297047]}]}, {\"name\": \"precision_score_macro\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.8404738999787036]}]}, {\"name\": \"average_precision_score_weighted\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.9394062782140582]}]}, {\"name\": \"matthews_correlation\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.6393181493773549]}]}, {\"name\": \"f1_score_macro\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.8170870506918302]}]}, {\"name\": \"f1_score_micro\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.8714122517297047]}]}, {\"name\": \"balanced_accuracy\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.8001282746792657]}]}, {\"name\": \"AUC_macro\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.9278942090632765]}]}, {\"name\": \"AUC_weighted\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.927894205744837]}]}, {\"name\": \"recall_score_macro\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.8001282746792657]}]}, {\"name\": \"AUC_micro\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.9505217692716382]}]}, {\"name\": \"norm_macro_recall\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.6002565493585313]}]}, {\"name\": \"precision_score_micro\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.8714122517297047]}]}, {\"name\": \"log_loss\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.28254563761452145]}]}, {\"name\": \"recall_score_weighted\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.8714122517297047]}]}, {\"name\": \"precision_score_weighted\", \"run_id\": \"AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a\", \"categories\": [0], \"series\": [{\"data\": [0.8671615631277078]}]}], \"run_logs\": \"\\nRun is completed.\", \"graph\": {}, \"widget_settings\": {\"childWidgetDisplay\": \"popup\", \"send_telemetry\": false, \"log_level\": \"INFO\", \"sdk_version\": \"1.31.0\"}, \"loading\": false}"
          },
          "metadata": {}
        }
      ],
      "execution_count": 7,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1627139305823
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "automl_run.wait_for_completion(show_output=True)"
      ],
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<IPython.core.display.HTML object>",
            "text/html": "<table style=\"width:100%\"><tr><th>Experiment</th><th>Id</th><th>Type</th><th>Status</th><th>Details Page</th><th>Docs Page</th></tr><tr><td>capstone</td><td>AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a</td><td>automl</td><td>Completed</td><td><a href=\"https://ml.azure.com/runs/AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a?wsid=/subscriptions/653662f1-95de-4498-b876-1fd625bf5d18/resourcegroups/udacitycapstone/workspaces/udacityws&amp;tid=60e63508-9cfd-4013-9a1f-7610707b07ce\" target=\"_blank\" rel=\"noopener\">Link to Azure Machine Learning studio</a></td><td><a href=\"https://docs.microsoft.com/en-us/python/api/overview/azure/ml/intro?view=azure-ml-py\" target=\"_blank\" rel=\"noopener\">Link to Documentation</a></td></tr></table>"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "\n",
            "****************************************************************************************************\n",
            "DATA GUARDRAILS: \n",
            "\n",
            "TYPE:         Class balancing detection\n",
            "STATUS:       PASSED\n",
            "DESCRIPTION:  Your inputs were analyzed, and all classes are balanced in your training data.\n",
            "              Learn more about imbalanced data: https://aka.ms/AutomatedMLImbalancedData\n",
            "\n",
            "****************************************************************************************************\n",
            "\n",
            "TYPE:         Missing feature values imputation\n",
            "STATUS:       PASSED\n",
            "DESCRIPTION:  No feature missing values were detected in the training data.\n",
            "              Learn more about missing value imputation: https://aka.ms/AutomatedMLFeaturization\n",
            "\n",
            "****************************************************************************************************\n",
            "\n",
            "TYPE:         High cardinality feature detection\n",
            "STATUS:       PASSED\n",
            "DESCRIPTION:  Your inputs were analyzed, and no high cardinality features were detected.\n",
            "              Learn more about high cardinality feature handling: https://aka.ms/AutomatedMLFeaturization\n",
            "\n",
            "****************************************************************************************************\n",
            "\n",
            "****************************************************************************************************\n",
            "ITERATION: The iteration being evaluated.\n",
            "PIPELINE: A summary description of the pipeline being evaluated.\n",
            "DURATION: Time taken for the current iteration.\n",
            "METRIC: The result of computing score on the fitted pipeline.\n",
            "BEST: The best observed score thus far.\n",
            "****************************************************************************************************\n",
            "\n",
            " ITERATION   PIPELINE                                       DURATION      METRIC      BEST\n",
            "         0   MaxAbsScaler LightGBM                          0:00:56       0.8698    0.8698\n",
            "         1   MaxAbsScaler XGBoostClassifier                 0:01:57       0.8617    0.8698\n",
            "         2   MaxAbsScaler RandomForest                      0:01:44       0.8337    0.8698\n",
            "         3   MaxAbsScaler RandomForest                      0:00:47       0.7872    0.8698\n",
            "         4   MaxAbsScaler RandomForest                      0:00:46       0.7411    0.8698\n",
            "         5   MaxAbsScaler RandomForest                      0:00:40       0.7264    0.8698\n",
            "         6   SparseNormalizer XGBoostClassifier             0:02:44       0.8668    0.8698\n",
            "         7   SparseNormalizer XGBoostClassifier             0:01:12       0.8674    0.8698\n",
            "         8   SparseNormalizer XGBoostClassifier             0:01:03       0.8651    0.8698\n",
            "         9   SparseNormalizer XGBoostClassifier             0:01:13       0.8674    0.8698\n",
            "        10   SparseNormalizer XGBoostClassifier             0:00:48       0.8578    0.8698\n",
            "        11   StandardScalerWrapper RandomForest             0:00:47       0.8419    0.8698\n",
            "        12   MaxAbsScaler RandomForest                      0:00:56       0.8156    0.8698\n",
            "        13   SparseNormalizer XGBoostClassifier             0:00:48       0.8105    0.8698\n",
            "        14   SparseNormalizer XGBoostClassifier             0:01:36       0.8675    0.8698\n",
            "        15   MaxAbsScaler LightGBM                          0:00:42       0.8317    0.8698\n",
            "        16   MaxAbsScaler LogisticRegression                0:00:45       0.8470    0.8698\n",
            "        17   MaxAbsScaler ExtremeRandomTrees                0:02:00       0.8148    0.8698\n",
            "        18   MaxAbsScaler LightGBM                          0:01:17       0.8333    0.8698\n",
            "        19   MaxAbsScaler LightGBM                          0:00:43       0.8221    0.8698\n",
            "        20   SparseNormalizer XGBoostClassifier             0:01:48       0.8678    0.8698\n",
            "        21   StandardScalerWrapper RandomForest             0:00:53       0.8018    0.8698\n",
            "        22   MaxAbsScaler RandomForest                      0:01:15       0.8420    0.8698\n",
            "        23   MaxAbsScaler LogisticRegression                0:00:50       0.8472    0.8698\n",
            "        24   MaxAbsScaler LogisticRegression                0:00:49       0.8463    0.8698\n",
            "        25   MaxAbsScaler LightGBM                          0:00:42       0.7641    0.8698\n",
            "        26   SparseNormalizer XGBoostClassifier             0:01:03       0.8654    0.8698\n",
            "        27   StandardScalerWrapper LightGBM                 0:00:43       0.8113    0.8698\n",
            "        28   MaxAbsScaler LightGBM                          0:00:52       0.8472    0.8698\n",
            "        29   SparseNormalizer RandomForest                  0:01:32       0.8382    0.8698\n",
            "        30   SparseNormalizer LightGBM                      0:01:02       0.8585    0.8698\n",
            "        31   StandardScalerWrapper XGBoostClassifier        0:00:51       0.8529    0.8698\n",
            "        32   SparseNormalizer XGBoostClassifier             0:01:09       0.8632    0.8698\n",
            "        33   SparseNormalizer LightGBM                      0:00:45       0.8209    0.8698\n",
            "        34   SparseNormalizer XGBoostClassifier             0:01:06       0.8631    0.8698\n",
            "        35   StandardScalerWrapper LightGBM                 0:00:45       0.7522    0.8698\n",
            "        36   SparseNormalizer XGBoostClassifier             0:01:01       0.8643    0.8698\n",
            "        37   SparseNormalizer XGBoostClassifier             0:01:04       0.8632    0.8698\n",
            "        38   StandardScalerWrapper XGBoostClassifier        0:00:49       0.8506    0.8698\n",
            "        39   SparseNormalizer XGBoostClassifier             0:01:03       0.8629    0.8698\n",
            "        40   TruncatedSVDWrapper LightGBM                   0:01:03       0.8432    0.8698\n",
            "        41   SparseNormalizer XGBoostClassifier             0:01:00       0.8598    0.8698\n",
            "        42   SparseNormalizer XGBoostClassifier             0:01:47       0.8663    0.8698\n",
            "        43   SparseNormalizer XGBoostClassifier             0:01:34       0.8676    0.8698\n",
            "        44   StandardScalerWrapper XGBoostClassifier        0:01:20       0.8695    0.8698\n",
            "        45   MaxAbsScaler LightGBM                          0:01:16       0.8410    0.8698\n",
            "        46   MaxAbsScaler LogisticRegression                0:01:04       0.8034    0.8698\n",
            "        47   StandardScalerWrapper LogisticRegression       0:00:51       0.8068    0.8698\n",
            "        48   StandardScalerWrapper XGBoostClassifier        0:02:02       0.8697    0.8698\n",
            "        49   MaxAbsScaler LogisticRegression                0:01:00       0.8067    0.8698\n",
            "        50   SparseNormalizer LightGBM                      0:01:03       0.8614    0.8698\n",
            "        51   SparseNormalizer XGBoostClassifier             0:01:31       0.8672    0.8698\n",
            "        52   SparseNormalizer XGBoostClassifier             0:01:20       0.8666    0.8698\n",
            "        53   SparseNormalizer XGBoostClassifier             0:01:17       0.8658    0.8698\n",
            "        54   SparseNormalizer XGBoostClassifier             0:01:35       0.8663    0.8698\n",
            "        55   StandardScalerWrapper LightGBM                 0:01:01       0.8562    0.8698\n",
            "        56   SparseNormalizer XGBoostClassifier             0:01:55       0.8680    0.8698\n",
            "        57   SparseNormalizer XGBoostClassifier             0:00:56       0.8617    0.8698\n",
            "        58   StandardScalerWrapper XGBoostClassifier        0:00:48       0.8656    0.8698\n",
            "        59   SparseNormalizer XGBoostClassifier             0:01:09          nan    0.8698\n",
            "ERROR: {\n",
            "    \"additional_properties\": {},\n",
            "    \"error\": {\n",
            "        \"additional_properties\": {\n",
            "            \"debugInfo\": null\n",
            "        },\n",
            "        \"code\": \"UserError\",\n",
            "        \"severity\": null,\n",
            "        \"message\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_format\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_parameters\": {},\n",
            "        \"reference_code\": null,\n",
            "        \"details_uri\": null,\n",
            "        \"target\": null,\n",
            "        \"details\": [],\n",
            "        \"inner_error\": {\n",
            "            \"additional_properties\": {},\n",
            "            \"code\": \"ResourceExhausted\",\n",
            "            \"inner_error\": {\n",
            "                \"additional_properties\": {},\n",
            "                \"code\": \"Timeout\",\n",
            "                \"inner_error\": {\n",
            "                    \"additional_properties\": {},\n",
            "                    \"code\": \"ExperimentTimeoutForIterations\",\n",
            "                    \"inner_error\": null\n",
            "                }\n",
            "            }\n",
            "        },\n",
            "        \"additional_info\": null\n",
            "    },\n",
            "    \"correlation\": null,\n",
            "    \"environment\": null,\n",
            "    \"location\": null,\n",
            "    \"time\": {},\n",
            "    \"component_name\": null\n",
            "}\n",
            "        60   MaxAbsScaler LightGBM                          0:00:41       0.7522    0.8698\n",
            "        61   SparseNormalizer XGBoostClassifier             0:00:41          nan    0.8698\n",
            "ERROR: {\n",
            "    \"additional_properties\": {},\n",
            "    \"error\": {\n",
            "        \"additional_properties\": {\n",
            "            \"debugInfo\": null\n",
            "        },\n",
            "        \"code\": \"UserError\",\n",
            "        \"severity\": null,\n",
            "        \"message\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_format\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_parameters\": {},\n",
            "        \"reference_code\": null,\n",
            "        \"details_uri\": null,\n",
            "        \"target\": null,\n",
            "        \"details\": [],\n",
            "        \"inner_error\": {\n",
            "            \"additional_properties\": {},\n",
            "            \"code\": \"ResourceExhausted\",\n",
            "            \"inner_error\": {\n",
            "                \"additional_properties\": {},\n",
            "                \"code\": \"Timeout\",\n",
            "                \"inner_error\": {\n",
            "                    \"additional_properties\": {},\n",
            "                    \"code\": \"ExperimentTimeoutForIterations\",\n",
            "                    \"inner_error\": null\n",
            "                }\n",
            "            }\n",
            "        },\n",
            "        \"additional_info\": null\n",
            "    },\n",
            "    \"correlation\": null,\n",
            "    \"environment\": null,\n",
            "    \"location\": null,\n",
            "    \"time\": {},\n",
            "    \"component_name\": null\n",
            "}\n",
            "        62                                                  0:01:01          nan    0.8698\n",
            "ERROR: {\n",
            "    \"additional_properties\": {},\n",
            "    \"error\": {\n",
            "        \"additional_properties\": {\n",
            "            \"debugInfo\": null\n",
            "        },\n",
            "        \"code\": \"UserError\",\n",
            "        \"severity\": null,\n",
            "        \"message\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_format\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_parameters\": {},\n",
            "        \"reference_code\": null,\n",
            "        \"details_uri\": null,\n",
            "        \"target\": null,\n",
            "        \"details\": [],\n",
            "        \"inner_error\": {\n",
            "            \"additional_properties\": {},\n",
            "            \"code\": \"ResourceExhausted\",\n",
            "            \"inner_error\": {\n",
            "                \"additional_properties\": {},\n",
            "                \"code\": \"Timeout\",\n",
            "                \"inner_error\": {\n",
            "                    \"additional_properties\": {},\n",
            "                    \"code\": \"ExperimentTimeoutForIterations\",\n",
            "                    \"inner_error\": null\n",
            "                }\n",
            "            }\n",
            "        },\n",
            "        \"additional_info\": null\n",
            "    },\n",
            "    \"correlation\": null,\n",
            "    \"environment\": null,\n",
            "    \"location\": null,\n",
            "    \"time\": {},\n",
            "    \"component_name\": null\n",
            "}\n",
            "        63                                                  0:00:55          nan    0.8698\n",
            "ERROR: {\n",
            "    \"additional_properties\": {},\n",
            "    \"error\": {\n",
            "        \"additional_properties\": {\n",
            "            \"debugInfo\": null\n",
            "        },\n",
            "        \"code\": \"UserError\",\n",
            "        \"severity\": null,\n",
            "        \"message\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_format\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_parameters\": {},\n",
            "        \"reference_code\": null,\n",
            "        \"details_uri\": null,\n",
            "        \"target\": null,\n",
            "        \"details\": [],\n",
            "        \"inner_error\": {\n",
            "            \"additional_properties\": {},\n",
            "            \"code\": \"ResourceExhausted\",\n",
            "            \"inner_error\": {\n",
            "                \"additional_properties\": {},\n",
            "                \"code\": \"Timeout\",\n",
            "                \"inner_error\": {\n",
            "                    \"additional_properties\": {},\n",
            "                    \"code\": \"ExperimentTimeoutForIterations\",\n",
            "                    \"inner_error\": null\n",
            "                }\n",
            "            }\n",
            "        },\n",
            "        \"additional_info\": null\n",
            "    },\n",
            "    \"correlation\": null,\n",
            "    \"environment\": null,\n",
            "    \"location\": null,\n",
            "    \"time\": {},\n",
            "    \"component_name\": null\n",
            "}\n",
            "        64    VotingEnsemble                                0:01:45       0.8714    0.8714\n",
            "        65    StackEnsemble                                 0:02:00       0.8703    0.8714\n"
          ]
        },
        {
          "output_type": "execute_result",
          "execution_count": 8,
          "data": {
            "text/plain": "{'runId': 'AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a',\n 'target': 'cpu-cluster',\n 'status': 'Completed',\n 'startTimeUtc': '2021-07-24T14:26:41.004815Z',\n 'endTimeUtc': '2021-07-24T15:08:08.738705Z',\n 'properties': {'num_iterations': '1000',\n  'training_type': 'TrainFull',\n  'acquisition_function': 'EI',\n  'primary_metric': 'accuracy',\n  'train_split': '0',\n  'acquisition_parameter': '0',\n  'num_cross_validation': '5',\n  'target': 'cpu-cluster',\n  'AMLSettingsJsonString': '{\"path\":null,\"name\":\"capstone\",\"subscription_id\":\"653662f1-95de-4498-b876-1fd625bf5d18\",\"resource_group\":\"udacitycapstone\",\"workspace_name\":\"udacityws\",\"region\":\"japaneast\",\"compute_target\":\"cpu-cluster\",\"spark_service\":null,\"azure_service\":\"remote\",\"many_models\":false,\"pipeline_fetch_max_batch_size\":1,\"enable_batch_run\":false,\"enable_run_restructure\":false,\"start_auxiliary_runs_before_parent_complete\":false,\"enable_code_generation\":false,\"iterations\":1000,\"primary_metric\":\"accuracy\",\"task_type\":\"classification\",\"data_script\":null,\"test_size\":0.0,\"validation_size\":0.0,\"n_cross_validations\":5,\"y_min\":null,\"y_max\":null,\"num_classes\":null,\"featurization\":\"auto\",\"_ignore_package_version_incompatibilities\":false,\"is_timeseries\":false,\"max_cores_per_iteration\":1,\"max_concurrent_iterations\":5,\"iteration_timeout_minutes\":null,\"mem_in_mb\":null,\"enforce_time_on_windows\":false,\"experiment_timeout_minutes\":30,\"experiment_exit_score\":null,\"whitelist_models\":null,\"blacklist_algos\":[\"TensorFlowLinearClassifier\",\"TensorFlowDNN\"],\"supported_models\":[\"XGBoostClassifier\",\"AveragedPerceptronClassifier\",\"MultinomialNaiveBayes\",\"KNN\",\"LinearSVM\",\"TensorFlowDNN\",\"LightGBM\",\"BernoulliNaiveBayes\",\"ExtremeRandomTrees\",\"RandomForest\",\"TensorFlowLinearClassifier\",\"LogisticRegression\",\"DecisionTree\",\"SVM\",\"GradientBoosting\",\"SGD\"],\"private_models\":[],\"auto_blacklist\":true,\"blacklist_samples_reached\":false,\"exclude_nan_labels\":true,\"verbosity\":20,\"_debug_log\":\"azureml_automl.log\",\"show_warnings\":false,\"model_explainability\":true,\"service_url\":null,\"sdk_url\":null,\"sdk_packages\":null,\"enable_onnx_compatible_models\":false,\"enable_split_onnx_featurizer_estimator_models\":false,\"vm_type\":\"STANDARD_D2_V2\",\"telemetry_verbosity\":20,\"send_telemetry\":true,\"enable_dnn\":false,\"scenario\":\"SDK-1.13.0\",\"environment_label\":null,\"save_mlflow\":false,\"force_text_dnn\":false,\"enable_feature_sweeping\":true,\"enable_early_stopping\":false,\"early_stopping_n_iters\":10,\"metrics\":null,\"enable_metric_confidence\":false,\"enable_ensembling\":true,\"enable_stack_ensembling\":true,\"ensemble_iterations\":15,\"enable_tf\":false,\"enable_subsampling\":null,\"subsample_seed\":null,\"enable_nimbusml\":false,\"enable_streaming\":false,\"force_streaming\":false,\"track_child_runs\":true,\"allowed_private_models\":[],\"label_column_name\":\"income\",\"weight_column_name\":null,\"cv_split_column_names\":null,\"enable_local_managed\":false,\"_local_managed_run_id\":null,\"cost_mode\":1,\"lag_length\":0,\"metric_operation\":\"maximize\",\"preprocess\":true}',\n  'DataPrepJsonString': '{\\\\\"training_data\\\\\": {\\\\\"datasetId\\\\\": \\\\\"fa0687fd-3726-4831-863a-18a8ccfd8f14\\\\\"}, \\\\\"datasets\\\\\": 0}',\n  'EnableSubsampling': None,\n  'runTemplate': 'AutoML',\n  'azureml.runsource': 'automl',\n  'display_task_type': 'classification',\n  'dependencies_versions': '{\"azureml-widgets\": \"1.31.0\", \"azureml-train\": \"1.31.0\", \"azureml-train-restclients-hyperdrive\": \"1.31.0\", \"azureml-train-core\": \"1.31.0\", \"azureml-train-automl\": \"1.31.0\", \"azureml-train-automl-runtime\": \"1.31.0\", \"azureml-train-automl-client\": \"1.31.0\", \"azureml-tensorboard\": \"1.31.0\", \"azureml-telemetry\": \"1.31.0\", \"azureml-sdk\": \"1.31.0\", \"azureml-samples\": \"0+unknown\", \"azureml-responsibleai\": \"1.31.0\", \"azureml-pipeline\": \"1.31.0\", \"azureml-pipeline-steps\": \"1.31.0\", \"azureml-pipeline-core\": \"1.31.0\", \"azureml-opendatasets\": \"1.31.0\", \"azureml-model-management-sdk\": \"1.0.1b6.post1\", \"azureml-mlflow\": \"1.31.0\", \"azureml-interpret\": \"1.31.0\", \"azureml-explain-model\": \"1.31.0\", \"azureml-defaults\": \"1.31.0\", \"azureml-dataset-runtime\": \"1.31.0\", \"azureml-dataprep\": \"2.18.0\", \"azureml-dataprep-rslex\": \"1.16.1\", \"azureml-dataprep-native\": \"36.0.0\", \"azureml-datadrift\": \"1.31.0\", \"azureml-core\": \"1.31.0\", \"azureml-contrib-services\": \"1.31.0\", \"azureml-contrib-server\": \"1.31.0\", \"azureml-contrib-reinforcementlearning\": \"1.31.0\", \"azureml-contrib-pipeline-steps\": \"1.31.0\", \"azureml-contrib-notebook\": \"1.31.0\", \"azureml-contrib-fairness\": \"1.31.0\", \"azureml-contrib-dataset\": \"1.31.0\", \"azureml-cli-common\": \"1.31.0\", \"azureml-automl-runtime\": \"1.31.0\", \"azureml-automl-dnn-nlp\": \"1.31.0\", \"azureml-automl-core\": \"1.31.0\", \"azureml-accel-models\": \"1.31.0\"}',\n  '_aml_system_scenario_identification': 'Remote.Parent',\n  'ClientType': 'SDK',\n  'environment_cpu_name': 'AzureML-AutoML',\n  'environment_cpu_label': 'prod',\n  'environment_gpu_name': 'AzureML-AutoML-GPU',\n  'environment_gpu_label': 'prod',\n  'root_attribution': 'automl',\n  'attribution': 'AutoML',\n  'Orchestrator': 'AutoML',\n  'CancelUri': 'https://japaneast.api.azureml.ms/jasmine/v1.0/subscriptions/653662f1-95de-4498-b876-1fd625bf5d18/resourceGroups/udacitycapstone/providers/Microsoft.MachineLearningServices/workspaces/udacityws/experimentids/71e58e51-6b4e-48f1-9863-62022f60b877/cancel/AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a',\n  'ClientSdkVersion': '1.32.0',\n  'snapshotId': '00000000-0000-0000-0000-000000000000',\n  'SetupRunId': 'AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_setup',\n  'SetupRunContainerId': 'dcid.AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_setup',\n  'FeaturizationRunJsonPath': 'featurizer_container.json',\n  'FeaturizationRunId': 'AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_featurize',\n  'ProblemInfoJsonString': '{\"dataset_num_categorical\": 0, \"is_sparse\": true, \"subsampling\": false, \"has_extra_col\": true, \"dataset_classes\": 2, \"dataset_features\": 102, \"dataset_samples\": 45222, \"single_frequency_class_detected\": false}',\n  'ModelExplainRunId': 'AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_ModelExplain',\n  'azureml.git.repository_uri': 'https://github.com/HajimeK/nd00333-capstone',\n  'mlflow.source.git.repoURL': 'https://github.com/HajimeK/nd00333-capstone',\n  'azureml.git.branch': 'master',\n  'mlflow.source.git.branch': 'master',\n  'azureml.git.commit': 'bb8bb394f2d1a40e23f582b5c1b308628e329b33',\n  'mlflow.source.git.commit': 'bb8bb394f2d1a40e23f582b5c1b308628e329b33',\n  'azureml.git.dirty': 'True'},\n 'inputDatasets': [{'dataset': {'id': 'fa0687fd-3726-4831-863a-18a8ccfd8f14'}, 'consumptionDetails': {'type': 'RunInput', 'inputName': 'training_data', 'mechanism': 'Direct'}}],\n 'outputDatasets': [],\n 'logFiles': {},\n 'submittedBy': '創 川田'}"
          },
          "metadata": {}
        }
      ],
      "execution_count": 8,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1627139624760
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Run Details\n",
        "\n",
        "OPTIONAL: Write about the different models trained and their performance. Why do you think some models did better than others?\n",
        "\n",
        "TODO: In the cell below, use the `RunDetails` widget to show the different experiments."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "best_automl_run, fitted_automl_model = automl_run.get_output()\r\n",
        "\r\n",
        "print(fitted_automl_model)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:root:The version of the SDK does not match the version the model was trained on.\n",
            "WARNING:root:The consistency in the result may not be guaranteed.\n",
            "WARNING:root:Package:azureml-automl-core, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-automl-runtime, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-core, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-dataset-runtime, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-defaults, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-interpret, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-mlflow, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-pipeline-core, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-telemetry, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-train-automl-client, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-train-automl-runtime, training version:1.32.0, current version:1.31.0\n",
            "WARNING:root:Please ensure the version of your local conda dependencies match the version on which your model was trained in order to properly retrieve your model.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Pipeline(memory=None,\n",
            "         steps=[('datatransformer',\n",
            "                 DataTransformer(enable_dnn=False, enable_feature_sweeping=True, feature_sweeping_config={}, feature_sweeping_timeout=86400, featurization_config=None, force_text_dnn=False, is_cross_validation=True, is_onnx_compatible=False, observer=None, task='classification', working_dir='/mnt/batch/tasks/shared/LS_root/mount...\n",
            "), random_state=0, reg_alpha=0, reg_lambda=1.6666666666666667, subsample=0.9, tree_method='auto'))], verbose=False)), ('23', Pipeline(memory=None, steps=[('maxabsscaler', MaxAbsScaler(copy=True)), ('logisticregression', LogisticRegression(C=24.420530945486497, class_weight=None, dual=False, fit_intercept=True, intercept_scaling=1, l1_ratio=None, max_iter=100, multi_class='ovr', n_jobs=1, penalty='l2', random_state=None, solver='saga', tol=0.0001, verbose=0, warm_start=False))], verbose=False))], flatten_transform=None, weights=[0.26666666666666666, 0.3333333333333333, 0.2, 0.06666666666666667, 0.06666666666666667, 0.06666666666666667]))],\n",
            "         verbose=False)\n",
            "Y_transformer(['LabelEncoder', LabelEncoder()])\n"
          ]
        }
      ],
      "execution_count": 9,
      "metadata": {
        "gather": {
          "logged": 1627139661197
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "fitted_automl_model._final_estimator"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 10,
          "data": {
            "text/plain": "PreFittedSoftVotingClassifier(\n    estimators=[('0', Pipeline(memory=None,\n             steps=[('maxabsscaler', MaxAbsScaler(copy=True)),\n                    ('lightgbmclassifier',\n                     LightGBMClassifier(min_data_in_leaf=20, n_jobs=1, problem_info=ProblemInfo(\n        dataset_samples=45222,\n        dataset_features=102,\n        dataset_classes=None,\n        dataset_num_categorical=0,\n        dataset_categoricals=None,\n        pipeline_categoricals=None,\n        dataset_y_std=None,\n        dataset_uid=None,\n        subsamp...\n        subsampling_schedule='hyperband_clip',\n        cost_mode_param=None,\n        iteration_timeout_mode=0,\n        iteration_timeout_param=None,\n        feature_column_names=None,\n        label_column_name=None,\n        weight_column_name=None,\n        cv_split_column_names=None,\n        enable_streaming=None,\n        timeseries_param_dict=None,\n        gpu_training_param_dict={'processing_unit_type': 'cpu'}\n    ), random_state=None))],\n             verbose=False)), ('48', Pipeline(memory=None,\n             steps=[('standardscalerwrapper',\n                     StandardScalerWrapper(\n        copy=True,\n        with_mean=False,\n        with_std=False\n    )),\n                    ('xgboostclassifier',\n                     XGBoostClassifier(booster='gbtree', colsample_bytree=0.8, eta=0.3, max_depth=4, max_leaves=0, n_estimators=600, n_jobs=1, objective='reg:logistic', problem_info=ProblemInfo(\n        dataset_samples=45222,\n        dataset_features=102,\n        dat...\n        iteration_timeout_mode=0,\n        iteration_timeout_param=None,\n        feature_column_names=None,\n        label_column_name=None,\n        weight_column_name=None,\n        cv_split_column_names=None,\n        enable_streaming=None,\n        timeseries_param_dict=None,\n        gpu_training_param_dict={'processing_unit_type': 'cpu'}\n    ), random_state=0, reg_alpha=2.1875, reg_lambda=2.0833333333333335, subsample=0.8, tree_method='auto'))],\n             verbose=False)), ('44', Pipeline(memory=None,\n             steps=[('standardscalerwrapper',\n                     StandardScalerWrapper(\n        copy=True,\n        with_mean=False,\n        with_std=False\n    )),\n                    ('xgboostclassifier',\n                     XGBoostClassifier(booster='gbtree', colsample_bytree=1, eta=0.1, gamma=0, max_depth=9, max_leaves=0, n_estimators=100, n_jobs=1, objective='reg:logistic', problem_info=ProblemInfo(\n        dataset_samples=45222,\n        dataset_features=1...\n        iteration_timeout_mode=0,\n        iteration_timeout_param=None,\n        feature_column_names=None,\n        label_column_name=None,\n        weight_column_name=None,\n        cv_split_column_names=None,\n        enable_streaming=None,\n        timeseries_param_dict=None,\n        gpu_training_param_dict={'processing_unit_type': 'cpu'}\n    ), random_state=0, reg_alpha=1.875, reg_lambda=0.625, subsample=0.7, tree_method='auto'))],\n             verbose=False)), ('56', Pipeline(memory=None,\n             steps=[('sparsenormalizer', Normalizer(copy=True, norm='l1')),\n                    ('xgboostclassifier',\n                     XGBoostClassifier(booster='gbtree', colsample_bytree=1, eta=0.1, max_depth=3, max_leaves=0, n_estimators=400, n_jobs=1, objective='reg:logistic', problem_info=ProblemInfo(\n        dataset_samples=45222,\n        dataset_features=102,\n        dataset_classes=None,\n        dataset_num_categoric...\n        iteration_timeout_mode=0,\n        iteration_timeout_param=None,\n        feature_column_names=None,\n        label_column_name=None,\n        weight_column_name=None,\n        cv_split_column_names=None,\n        enable_streaming=None,\n        timeseries_param_dict=None,\n        gpu_training_param_dict={'processing_unit_type': 'cpu'}\n    ), random_state=0, reg_alpha=0.3125, reg_lambda=0.9375, subsample=0.8, tree_method='auto'))],\n             verbose=False)), ('20', Pipeline(memory=None,\n             steps=[('sparsenormalizer', Normalizer(copy=True, norm='l2')),\n                    ('xgboostclassifier',\n                     XGBoostClassifier(booster='gbtree', colsample_bytree=0.6, eta=0.3, gamma=1, max_depth=6, max_leaves=31, n_estimators=200, n_jobs=1, objective='reg:logistic', problem_info=ProblemInfo(\n        dataset_samples=45222,\n        dataset_features=102,\n        dataset_classes=None,\n        dataset_nu...\n        iteration_timeout_mode=0,\n        iteration_timeout_param=None,\n        feature_column_names=None,\n        label_column_name=None,\n        weight_column_name=None,\n        cv_split_column_names=None,\n        enable_streaming=None,\n        timeseries_param_dict=None,\n        gpu_training_param_dict={'processing_unit_type': 'cpu'}\n    ), random_state=0, reg_alpha=0, reg_lambda=1.6666666666666667, subsample=0.9, tree_method='auto'))],\n             verbose=False)), ('23', Pipeline(memory=None,\n             steps=[('maxabsscaler', MaxAbsScaler(copy=True)),\n                    ('logisticregression',\n                     LogisticRegression(C=24.420530945486497, class_weight=None,\n                                        dual=False, fit_intercept=True,\n                                        intercept_scaling=1, l1_ratio=None,\n                                        max_iter=100, multi_class='ovr', n_jobs=1,\n                                        penalty='l2', random_state=None,\n                                        solver='saga', tol=0.0001, verbose=0,\n                                        warm_start=False))],\n             verbose=False))],\n    weights=[0.26666666666666666, 0.3333333333333333, 0.2, 0.06666666666666667, 0.06666666666666667, 0.06666666666666667],\n    flatten_transform=None,\n    classification_labels=array([0, 1])\n)"
          },
          "metadata": {}
        }
      ],
      "execution_count": 10,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1627139662168
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Best Model\n",
        "\n",
        "TODO: In the cell below, get the best model from the automl experiments and display all the properties of the model.\n",
        "\n"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "print(best_automl_run)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Run(Experiment: capstone,\n",
            "Id: AutoML_6510da9c-eb20-4d0c-bdad-a5eb8210b07a_64,\n",
            "Type: azureml.scriptrun,\n",
            "Status: Completed)\n"
          ]
        }
      ],
      "execution_count": 11,
      "metadata": {
        "gather": {
          "logged": 1627139662961
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#TODO: Save the best model\r\n",
        "import joblib\r\n",
        "joblib.dump(fitted_automl_model, './automl_best_model.joblib', compress = 3)"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 12,
          "data": {
            "text/plain": "['./automl_best_model.joblib']"
          },
          "metadata": {}
        }
      ],
      "execution_count": 12,
      "metadata": {
        "gather": {
          "logged": 1627139663686
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Model Deployment\n",
        "\n",
        "Remember you have to deploy only one of the two models you trained.. Perform the steps in the rest of this notebook only if you wish to deploy this model.\n",
        "\n",
        "TODO: In the cell below, register the model, create an inference config and deploy the model as a web service."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.core.model import InferenceConfig\r\n",
        "from azureml.core.environment import Environment\r\n",
        "\r\n",
        "# Register the model to deploy\r\n",
        "model = automl_run.register_model(description = 'Census Income Data Set')\r\n",
        "print(f'model ID {automl_run.model_id}')\r\n",
        "# Combine scoring script & environment in Inference configuration\r\n",
        "env = best_automl_run.get_environment().save_to_directory(path='environments')\r\n",
        "script_file= 'score.py'\r\n",
        "best_automl_run.download_file('outputs/scoring_file_v_1_0_0.py', script_file)\r\n",
        "inference_config = InferenceConfig(entry_script=script_file, environment=env)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "model ID AutoML6510da9ce64\n"
          ]
        }
      ],
      "execution_count": 14,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1627140210430
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.core.webservice import AciWebservice, Webservice\r\n",
        "\r\n",
        "# Set deployment configuration\r\n",
        "deployment_config = AciWebservice.deploy_configuration(cpu_cores = 1, memory_gb = 1)"
      ],
      "outputs": [],
      "execution_count": 15,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1627140219273
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.core.model import Model\r\n",
        "# Define the model, inference, & deployment configuration and web service name and location to deploy\r\n",
        "service = Model.deploy(\r\n",
        "    workspace = workspace,\r\n",
        "    name = \"capstone-model\",\r\n",
        "    models = [model],\r\n",
        "    inference_config = inference_config,\r\n",
        "    deployment_config = deployment_config,\r\n",
        "    overwrite = True)\r\n",
        "service.wait_for_deployment(show_output=True)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Tips: You can try get_logs(): https://aka.ms/debugimage#dockerlog or local deployment: https://aka.ms/debugimage#debug-locally to debug if deployment takes longer than 10 minutes.\n",
            "Running\n",
            "2021-07-24 15:23:54+00:00 Creating Container Registry if not exists.\n",
            "2021-07-24 15:23:56+00:00 Use the existing image.\n",
            "2021-07-24 15:23:57+00:00 Generating deployment configuration.\n",
            "2021-07-24 15:23:58+00:00 Submitting deployment to compute..\n",
            "2021-07-24 15:24:05+00:00 Checking the status of deployment capstone-model..\n",
            "2021-07-24 15:28:54+00:00 Checking the status of inference endpoint capstone-model.\n",
            "Succeeded\n",
            "ACI service creation operation finished, operation \"Succeeded\"\n"
          ]
        }
      ],
      "execution_count": 16,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1627140538286
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(service.state)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Healthy\n"
          ]
        }
      ],
      "execution_count": 17,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1627140539106
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "TODO: In the cell below, send a request to the web service you deployed to test it."
      ],
      "metadata": {
        "collapsed": true,
        "gather": {
          "logged": 1598431657736
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import json\r\n",
        "\r\n",
        "input_payload = json.dumps({\r\n",
        "    'data': json.loads(df.drop('income', axis = 1)[10:13].to_json(orient='records'))\r\n",
        "})\r\n",
        "print(f'input : f{input_payload}')\r\n",
        "print(f\"expected: {df['income'][10:13]}\")\r\n",
        "output = service.run(input_payload)\r\n",
        "\r\n",
        "print(f'output: {output}')"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "input : f{\"data\": [{\"age\": 37, \"workclass\": \" Private\", \"education_level\": \" Some-college\", \"education-num\": 10.0, \"marital-status\": \" Married-civ-spouse\", \"occupation\": \" Exec-managerial\", \"relationship\": \" Husband\", \"race\": \" Black\", \"sex\": \" Male\", \"capital-gain\": 0.0, \"capital-loss\": 0.0, \"hours-per-week\": 80.0, \"native-country\": \" United-States\"}, {\"age\": 30, \"workclass\": \" State-gov\", \"education_level\": \" Bachelors\", \"education-num\": 13.0, \"marital-status\": \" Married-civ-spouse\", \"occupation\": \" Prof-specialty\", \"relationship\": \" Husband\", \"race\": \" Asian-Pac-Islander\", \"sex\": \" Male\", \"capital-gain\": 0.0, \"capital-loss\": 0.0, \"hours-per-week\": 40.0, \"native-country\": \" India\"}, {\"age\": 23, \"workclass\": \" Private\", \"education_level\": \" Bachelors\", \"education-num\": 13.0, \"marital-status\": \" Never-married\", \"occupation\": \" Adm-clerical\", \"relationship\": \" Own-child\", \"race\": \" White\", \"sex\": \" Female\", \"capital-gain\": 0.0, \"capital-loss\": 0.0, \"hours-per-week\": 30.0, \"native-country\": \" United-States\"}]}\n",
            "expected: 10     >50K\n",
            "11     >50K\n",
            "12    <=50K\n",
            "Name: income, dtype: object\n",
            "output: {\"result\": [\">50K\", \"<=50K\", \"<=50K\"]}\n"
          ]
        }
      ],
      "execution_count": 18,
      "metadata": {
        "gather": {
          "logged": 1627140539600
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "service.get_logs()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 19,
          "data": {
            "text/plain": "'2021-07-24T15:28:46,686229900+00:00 - gunicorn/run \\nDynamic Python package installation is disabled.\\nStarting HTTP server\\n2021-07-24T15:28:46,691416100+00:00 - iot-server/run \\n2021-07-24T15:28:46,704301500+00:00 - rsyslog/run \\n2021-07-24T15:28:46,834411900+00:00 - nginx/run \\nrsyslogd: /azureml-envs/azureml_fc92eee9a5613508afa12283dd0b27d8/lib/libuuid.so.1: no version information available (required by rsyslogd)\\nEdgeHubConnectionString and IOTEDGE_IOTHUBHOSTNAME are not set. Exiting...\\n2021-07-24T15:28:48,312601400+00:00 - iot-server/finish 1 0\\n2021-07-24T15:28:48,314420100+00:00 - Exit code 1 is normal. Not restarting iot-server.\\nStarting gunicorn 20.1.0\\nListening at: http://127.0.0.1:31311 (62)\\nUsing worker: sync\\nworker timeout is set to 300\\nBooting worker with pid: 96\\nSPARK_HOME not set. Skipping PySpark Initialization.\\nGenerating new fontManager, this may take some time...\\nInitializing logger\\n2021-07-24 15:28:51,146 | root | INFO | Starting up app insights client\\nlogging socket was found. logging is available.\\nlogging socket was found. logging is available.\\n2021-07-24 15:28:51,149 | root | INFO | Starting up request id generator\\n2021-07-24 15:28:51,149 | root | INFO | Starting up app insight hooks\\n2021-07-24 15:28:51,150 | root | INFO | Invoking user\\'s init function\\n2021-07-24 15:28:56,400 | azureml.core | WARNING | Failure while loading azureml_run_type_providers. Failed to load entrypoint automl = azureml.train.automl.run:AutoMLRun._from_run_dto with exception cannot import name \\'RunType\\'.\\nFailure while loading azureml_run_type_providers. Failed to load entrypoint automl = azureml.train.automl.run:AutoMLRun._from_run_dto with exception cannot import name \\'RunType\\'.\\n2021-07-24 15:28:57,019 | root | INFO | Users\\'s init has completed successfully\\n2021-07-24 15:28:57,025 | root | INFO | Skipping middleware: dbg_model_info as it\\'s not enabled.\\n2021-07-24 15:28:57,026 | root | INFO | Skipping middleware: dbg_resource_usage as it\\'s not enabled.\\nGenerating swagger file: /tmp/tmpvia3566z\\n2021-07-24 15:28:57,033 | root | INFO | Scoring timeout is found from os.environ: 60000 ms\\n2021-07-24 15:28:57,063 | root | INFO | 200\\n127.0.0.1 - - [24/Jul/2021:15:28:57 +0000] \"GET /swagger.json HTTP/1.0\" 200 3058 \"-\" \"Go-http-client/1.1\"\\n2021-07-24 15:29:00,096 | root | INFO | 200\\n127.0.0.1 - - [24/Jul/2021:15:29:00 +0000] \"GET /swagger.json HTTP/1.0\" 200 3058 \"-\" \"Go-http-client/1.1\"\\n2021-07-24 15:29:00,459 | root | INFO | Validation Request Content-Type\\n2021-07-24 15:29:00,460 | root | INFO | Scoring Timer is set to 60.0 seconds\\n2021-07-24 15:29:00,596 | root | INFO | 200\\n127.0.0.1 - - [24/Jul/2021:15:29:00 +0000] \"POST /score HTTP/1.0\" 200 48 \"-\" \"python-requests/2.25.1\"\\n'"
          },
          "metadata": {}
        }
      ],
      "execution_count": 19,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1627140540203
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "TODO: In the cell below, print the logs of the web service and delete the service"
      ],
      "metadata": {
        "collapsed": true,
        "gather": {
          "logged": 1598432765711
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "service.delete()"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    }
  ],
  "metadata": {
    "kernel_info": {
      "name": "python3"
    },
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python",
      "version": "3.6.9",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "nteract": {
      "version": "nteract-front-end@1.0.0"
    },
    "microsoft": {
      "host": {
        "AzureML": {
          "notebookHasBeenCompleted": true
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}