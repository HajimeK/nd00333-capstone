{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Automated ML\n",
        "\n",
        "TODO: Import Dependencies. In the cell below, import all the dependencies that you will need to complete the project."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.core import Workspace, Dataset, Experiment\r\n",
        "from azureml.train.automl import AutoMLConfig"
      ],
      "outputs": [],
      "execution_count": 1,
      "metadata": {
        "gather": {
          "logged": 1626662944661
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Dataset\n",
        "\n",
        "### Overview\n",
        "TODO: In this markdown cell, give an overview of the dataset you are using. Also mention the task you will be performing.\n",
        "\n",
        "\n",
        "TODO: Get data. In the cell below, write code to access the data you will be using in this project. Remember that the dataset needs to be external."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "workspace = Workspace.from_config()\r\n",
        "print(workspace.name, workspace.resource_group, workspace.location, sep = '\\n')"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "udacityws\n",
            "udacitycapstone\n",
            "japaneast\n"
          ]
        }
      ],
      "execution_count": 2,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1626662945282
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# choose a name for experiment\n",
        "experiment_name = 'capstone'\n",
        "experiment=Experiment(workspace, experiment_name)\n",
        "\n",
        "dataset = Dataset.get_by_name(workspace, name='Census Income Data Set')\n",
        "df = dataset.to_pandas_dataframe()\n",
        "df.head(10)"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 3,
          "data": {
            "text/plain": "   age          workclass education_level  education-num  \\\n0   39          State-gov       Bachelors           13.0   \n1   50   Self-emp-not-inc       Bachelors           13.0   \n2   38            Private         HS-grad            9.0   \n3   53            Private            11th            7.0   \n4   28            Private       Bachelors           13.0   \n5   37            Private         Masters           14.0   \n6   49            Private             9th            5.0   \n7   52   Self-emp-not-inc         HS-grad            9.0   \n8   31            Private         Masters           14.0   \n9   42            Private       Bachelors           13.0   \n\n           marital-status          occupation    relationship    race  \\\n0           Never-married        Adm-clerical   Not-in-family   White   \n1      Married-civ-spouse     Exec-managerial         Husband   White   \n2                Divorced   Handlers-cleaners   Not-in-family   White   \n3      Married-civ-spouse   Handlers-cleaners         Husband   Black   \n4      Married-civ-spouse      Prof-specialty            Wife   Black   \n5      Married-civ-spouse     Exec-managerial            Wife   White   \n6   Married-spouse-absent       Other-service   Not-in-family   Black   \n7      Married-civ-spouse     Exec-managerial         Husband   White   \n8           Never-married      Prof-specialty   Not-in-family   White   \n9      Married-civ-spouse     Exec-managerial         Husband   White   \n\n       sex  capital-gain  capital-loss  hours-per-week  native-country income  \n0     Male        2174.0           0.0            40.0   United-States  <=50K  \n1     Male           0.0           0.0            13.0   United-States  <=50K  \n2     Male           0.0           0.0            40.0   United-States  <=50K  \n3     Male           0.0           0.0            40.0   United-States  <=50K  \n4   Female           0.0           0.0            40.0            Cuba  <=50K  \n5   Female           0.0           0.0            40.0   United-States  <=50K  \n6   Female           0.0           0.0            16.0         Jamaica  <=50K  \n7     Male           0.0           0.0            45.0   United-States   >50K  \n8   Female       14084.0           0.0            50.0   United-States   >50K  \n9     Male        5178.0           0.0            40.0   United-States   >50K  ",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>workclass</th>\n      <th>education_level</th>\n      <th>education-num</th>\n      <th>marital-status</th>\n      <th>occupation</th>\n      <th>relationship</th>\n      <th>race</th>\n      <th>sex</th>\n      <th>capital-gain</th>\n      <th>capital-loss</th>\n      <th>hours-per-week</th>\n      <th>native-country</th>\n      <th>income</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>39</td>\n      <td>State-gov</td>\n      <td>Bachelors</td>\n      <td>13.0</td>\n      <td>Never-married</td>\n      <td>Adm-clerical</td>\n      <td>Not-in-family</td>\n      <td>White</td>\n      <td>Male</td>\n      <td>2174.0</td>\n      <td>0.0</td>\n      <td>40.0</td>\n      <td>United-States</td>\n      <td>&lt;=50K</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>50</td>\n      <td>Self-emp-not-inc</td>\n      <td>Bachelors</td>\n      <td>13.0</td>\n      <td>Married-civ-spouse</td>\n      <td>Exec-managerial</td>\n      <td>Husband</td>\n      <td>White</td>\n      <td>Male</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>13.0</td>\n      <td>United-States</td>\n      <td>&lt;=50K</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>38</td>\n      <td>Private</td>\n      <td>HS-grad</td>\n      <td>9.0</td>\n      <td>Divorced</td>\n      <td>Handlers-cleaners</td>\n      <td>Not-in-family</td>\n      <td>White</td>\n      <td>Male</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>40.0</td>\n      <td>United-States</td>\n      <td>&lt;=50K</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>53</td>\n      <td>Private</td>\n      <td>11th</td>\n      <td>7.0</td>\n      <td>Married-civ-spouse</td>\n      <td>Handlers-cleaners</td>\n      <td>Husband</td>\n      <td>Black</td>\n      <td>Male</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>40.0</td>\n      <td>United-States</td>\n      <td>&lt;=50K</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>28</td>\n      <td>Private</td>\n      <td>Bachelors</td>\n      <td>13.0</td>\n      <td>Married-civ-spouse</td>\n      <td>Prof-specialty</td>\n      <td>Wife</td>\n      <td>Black</td>\n      <td>Female</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>40.0</td>\n      <td>Cuba</td>\n      <td>&lt;=50K</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>37</td>\n      <td>Private</td>\n      <td>Masters</td>\n      <td>14.0</td>\n      <td>Married-civ-spouse</td>\n      <td>Exec-managerial</td>\n      <td>Wife</td>\n      <td>White</td>\n      <td>Female</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>40.0</td>\n      <td>United-States</td>\n      <td>&lt;=50K</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>49</td>\n      <td>Private</td>\n      <td>9th</td>\n      <td>5.0</td>\n      <td>Married-spouse-absent</td>\n      <td>Other-service</td>\n      <td>Not-in-family</td>\n      <td>Black</td>\n      <td>Female</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>16.0</td>\n      <td>Jamaica</td>\n      <td>&lt;=50K</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>52</td>\n      <td>Self-emp-not-inc</td>\n      <td>HS-grad</td>\n      <td>9.0</td>\n      <td>Married-civ-spouse</td>\n      <td>Exec-managerial</td>\n      <td>Husband</td>\n      <td>White</td>\n      <td>Male</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>45.0</td>\n      <td>United-States</td>\n      <td>&gt;50K</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>31</td>\n      <td>Private</td>\n      <td>Masters</td>\n      <td>14.0</td>\n      <td>Never-married</td>\n      <td>Prof-specialty</td>\n      <td>Not-in-family</td>\n      <td>White</td>\n      <td>Female</td>\n      <td>14084.0</td>\n      <td>0.0</td>\n      <td>50.0</td>\n      <td>United-States</td>\n      <td>&gt;50K</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>42</td>\n      <td>Private</td>\n      <td>Bachelors</td>\n      <td>13.0</td>\n      <td>Married-civ-spouse</td>\n      <td>Exec-managerial</td>\n      <td>Husband</td>\n      <td>White</td>\n      <td>Male</td>\n      <td>5178.0</td>\n      <td>0.0</td>\n      <td>40.0</td>\n      <td>United-States</td>\n      <td>&gt;50K</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 3,
      "metadata": {
        "gather": {
          "logged": 1626662964909
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## AutoML Configuration\n",
        "\n",
        "TODO: Explain why you chose the automl settings and cofiguration you used below."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.core.compute import ComputeTarget, AmlCompute\r\n",
        "from azureml.core.compute_target import ComputeTargetException\r\n",
        "\r\n",
        "### YOUR CODE HERE ###\r\n",
        "cpu_cluster_name = \"cpu-cluster\"\r\n",
        "\r\n",
        "# Verify that the cluster does not exist already\r\n",
        "try:\r\n",
        "    cpu_cluster = ComputeTarget(workspace=workspace, name=cpu_cluster_name)\r\n",
        "    print('Found existing cluster, use it.')\r\n",
        "except ComputeTargetException:\r\n",
        "    compute_config = AmlCompute.provisioning_configuration(vm_size='STANDARD_D2_V2',\r\n",
        "                                                           max_nodes=6, \r\n",
        "                                                           idle_seconds_before_scaledown=2400)\r\n",
        "    cpu_cluster = ComputeTarget.create(workspace, cpu_cluster_name, compute_config)\r\n",
        "\r\n",
        "cpu_cluster.wait_for_completion(show_output=True)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Creating......\n",
            "SucceededProvisioning operation finished, operation \"Succeeded\"\n",
            "Succeeded\n",
            "AmlCompute wait for completion finished\n",
            "\n",
            "Minimum number of nodes requested have been provisioned\n"
          ]
        }
      ],
      "execution_count": 4,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1626662997112
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# TODO: Put your automl settings here\n",
        "automl_settings = {\n",
        "    \"compute_target\": cpu_cluster,\n",
        "    \"experiment_timeout_minutes\": 30,\n",
        "    \"max_concurrent_iterations\": 5,\n",
        "    \"primary_metric\" : 'accuracy'\n",
        "}\n",
        "automl_config = AutoMLConfig(\n",
        "    task = 'classification',\n",
        "    training_data = dataset,\n",
        "    #valudation_data = validation_data,\n",
        "    label_column_name = 'income',\n",
        "    n_cross_validations = 5,\n",
        "    **automl_settings)"
      ],
      "outputs": [],
      "execution_count": 5,
      "metadata": {
        "gather": {
          "logged": 1626662997457
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# TODO: Submit your experiment\n",
        "automl_run = experiment.submit(automl_config, show_output = True)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Submitting remote run.\n",
            "No run_configuration provided, running on cpu-cluster with default configuration\n",
            "Running on remote compute: cpu-cluster\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<IPython.core.display.HTML object>",
            "text/html": "<table style=\"width:100%\"><tr><th>Experiment</th><th>Id</th><th>Type</th><th>Status</th><th>Details Page</th><th>Docs Page</th></tr><tr><td>capstone</td><td>AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420</td><td>automl</td><td>NotStarted</td><td><a href=\"https://ml.azure.com/runs/AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420?wsid=/subscriptions/653662f1-95de-4498-b876-1fd625bf5d18/resourcegroups/udacitycapstone/workspaces/udacityws&amp;tid=60e63508-9cfd-4013-9a1f-7610707b07ce\" target=\"_blank\" rel=\"noopener\">Link to Azure Machine Learning studio</a></td><td><a href=\"https://docs.microsoft.com/en-us/python/api/overview/azure/ml/intro?view=azure-ml-py\" target=\"_blank\" rel=\"noopener\">Link to Documentation</a></td></tr></table>"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Current status: FeaturesGeneration. Generating features for the dataset.\n",
            "Current status: DatasetFeaturization. Beginning to fit featurizers and featurize the dataset.\n",
            "Current status: DatasetCrossValidationSplit. Generating individually featurized CV splits.\n",
            "Current status: ModelSelection. Beginning model selection.\n",
            "\n",
            "****************************************************************************************************\n",
            "DATA GUARDRAILS: \n",
            "\n",
            "TYPE:         Class balancing detection\n",
            "STATUS:       PASSED\n",
            "DESCRIPTION:  Your inputs were analyzed, and all classes are balanced in your training data.\n",
            "              Learn more about imbalanced data: https://aka.ms/AutomatedMLImbalancedData\n",
            "\n",
            "****************************************************************************************************\n",
            "\n",
            "TYPE:         Missing feature values imputation\n",
            "STATUS:       PASSED\n",
            "DESCRIPTION:  No feature missing values were detected in the training data.\n",
            "              Learn more about missing value imputation: https://aka.ms/AutomatedMLFeaturization\n",
            "\n",
            "****************************************************************************************************\n",
            "\n",
            "TYPE:         High cardinality feature detection\n",
            "STATUS:       PASSED\n",
            "DESCRIPTION:  Your inputs were analyzed, and no high cardinality features were detected.\n",
            "              Learn more about high cardinality feature handling: https://aka.ms/AutomatedMLFeaturization\n",
            "\n",
            "****************************************************************************************************\n",
            "\n",
            "****************************************************************************************************\n",
            "ITERATION: The iteration being evaluated.\n",
            "PIPELINE: A summary description of the pipeline being evaluated.\n",
            "DURATION: Time taken for the current iteration.\n",
            "METRIC: The result of computing score on the fitted pipeline.\n",
            "BEST: The best observed score thus far.\n",
            "****************************************************************************************************\n",
            "\n",
            " ITERATION   PIPELINE                                       DURATION      METRIC      BEST\n",
            "         3   MaxAbsScaler RandomForest                      0:00:37       0.7968    0.7968\n",
            "         2   MaxAbsScaler RandomForest                      0:00:54       0.8348    0.8348\n",
            "         0   MaxAbsScaler LightGBM                          0:00:41       0.8698    0.8698\n",
            "         5   MaxAbsScaler RandomForest                      0:00:41       0.7329    0.8698\n",
            "         1   MaxAbsScaler XGBoostClassifier                 0:01:38       0.8617    0.8698\n",
            "         4   MaxAbsScaler RandomForest                      0:01:37       0.7453    0.8698\n",
            "         6   SparseNormalizer XGBoostClassifier             0:00:56       0.8674    0.8698\n",
            "         7   SparseNormalizer XGBoostClassifier             0:00:54       0.8651    0.8698\n",
            "         8   SparseNormalizer XGBoostClassifier             0:01:06       0.8674    0.8698\n",
            "         9   SparseNormalizer XGBoostClassifier             0:00:42       0.8578    0.8698\n",
            "        10   SparseNormalizer XGBoostClassifier             0:00:52       0.8626    0.8698\n",
            "        12   MaxAbsScaler RandomForest                      0:00:41       0.8154    0.8698\n",
            "        11   StandardScalerWrapper RandomForest             0:01:10       0.8412    0.8698\n",
            "        13   SparseNormalizer XGBoostClassifier             0:00:39       0.8105    0.8698\n",
            "        14   MaxAbsScaler LogisticRegression                0:00:36       0.8469    0.8698\n",
            "        16   MaxAbsScaler LightGBM                          0:00:38       0.8275    0.8698\n",
            "        17   StandardScalerWrapper LightGBM                 0:00:36       0.8407    0.8698\n",
            "        15   MaxAbsScaler ExtremeRandomTrees                0:01:41       0.8144    0.8698\n",
            "        18   MaxAbsScaler LightGBM                          0:00:40       0.8221    0.8698\n",
            "        19   SparseNormalizer LightGBM                      0:00:39       0.8230    0.8698\n",
            "        20   MaxAbsScaler LightGBM                          0:01:01       0.8087    0.8698\n",
            "        21   MaxAbsScaler LightGBM                          0:00:47       0.8186    0.8698\n",
            "        22   SparseNormalizer XGBoostClassifier             0:01:21       0.8513    0.8698\n",
            "        23   TruncatedSVDWrapper XGBoostClassifier          0:01:05       0.8604    0.8698\n",
            "        25   SparseNormalizer LightGBM                      0:00:37       0.7522    0.8698\n",
            "        24   MaxAbsScaler ExtremeRandomTrees                0:02:12       0.8199    0.8698\n",
            "        26   MaxAbsScaler LogisticRegression                0:01:15       0.8471    0.8698\n",
            "        27   MaxAbsScaler LightGBM                          0:00:39       0.8307    0.8698\n",
            "        28   SparseNormalizer XGBoostClassifier             0:00:46       0.8586    0.8698\n",
            "        30   SparseNormalizer LightGBM                      0:00:39       0.7892    0.8698\n",
            "        29   SparseNormalizer XGBoostClassifier             0:00:57       0.8662    0.8698\n",
            "        32   StandardScalerWrapper XGBoostClassifier        0:00:39       0.8506    0.8698\n",
            "        33   StandardScalerWrapper LightGBM                 0:00:39       0.7698    0.8698\n",
            "        34   MaxAbsScaler ExtremeRandomTrees                0:00:54       0.7813    0.8698\n",
            "        35   StandardScalerWrapper LightGBM                 0:00:47       0.8476    0.8698\n",
            "        31   SparseNormalizer XGBoostClassifier             0:02:16       0.8663    0.8698\n",
            "        38   MaxAbsScaler LightGBM                          0:00:40       0.8440    0.8698\n",
            "        37   SparseNormalizer XGBoostClassifier             0:00:49       0.8629    0.8698\n",
            "        36   SparseNormalizer XGBoostClassifier             0:01:16       0.8672    0.8698\n",
            "        40   MaxAbsScaler LightGBM                          0:00:48       0.8467    0.8698\n",
            "        39   SparseNormalizer XGBoostClassifier             0:01:33       0.8643    0.8698\n",
            "        41   SparseNormalizer XGBoostClassifier             0:01:30       0.8663    0.8698\n",
            "        43   StandardScalerWrapper XGBoostClassifier        0:00:46       0.8686    0.8698\n",
            "        42   StandardScalerWrapper LogisticRegression       0:01:31       0.8472    0.8698\n",
            "        44   SparseNormalizer XGBoostClassifier             0:01:11       0.8664    0.8698\n",
            "        45   SparseNormalizer LightGBM                      0:00:41       0.8590    0.8698\n",
            "        46   MaxAbsScaler LogisticRegression                0:00:47       0.8067    0.8698\n",
            "        49   StandardScalerWrapper XGBoostClassifier        0:01:42       0.8697    0.8698\n",
            "        47   SparseNormalizer XGBoostClassifier             0:02:26       0.8639    0.8698\n",
            "        48   SparseNormalizer XGBoostClassifier             0:02:29       0.8676    0.8698\n",
            "        50   SparseNormalizer LightGBM                      0:00:48       0.8620    0.8698\n",
            "        51   SparseNormalizer XGBoostClassifier             0:01:30       0.8652    0.8698\n",
            "        53   SparseNormalizer LightGBM                      0:01:10       0.8585    0.8698\n",
            "        55   SparseNormalizer LightGBM                      0:00:50       0.8398    0.8698\n",
            "        52   SparseNormalizer XGBoostClassifier             0:02:50       0.8670    0.8698\n",
            "        54   SparseNormalizer XGBoostClassifier             0:01:13       0.8663    0.8698\n",
            "        56   SparseNormalizer XGBoostClassifier             0:01:08       0.8592    0.8698\n",
            "        58   SparseNormalizer XGBoostClassifier             0:01:02       0.8631    0.8698\n",
            "        57   SparseNormalizer XGBoostClassifier             0:01:37       0.8418    0.8698\n",
            "        60   MaxAbsScaler LightGBM                          0:00:40       0.7522    0.8698\n",
            "        59   SparseNormalizer XGBoostClassifier             0:02:37          nan    0.8698\n",
            "ERROR: {\n",
            "    \"additional_properties\": {},\n",
            "    \"error\": {\n",
            "        \"additional_properties\": {\n",
            "            \"debugInfo\": null\n",
            "        },\n",
            "        \"code\": \"UserError\",\n",
            "        \"severity\": null,\n",
            "        \"message\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_format\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_parameters\": {},\n",
            "        \"reference_code\": null,\n",
            "        \"details_uri\": null,\n",
            "        \"target\": null,\n",
            "        \"details\": [],\n",
            "        \"inner_error\": {\n",
            "            \"additional_properties\": {},\n",
            "            \"code\": \"ResourceExhausted\",\n",
            "            \"inner_error\": {\n",
            "                \"additional_properties\": {},\n",
            "                \"code\": \"Timeout\",\n",
            "                \"inner_error\": {\n",
            "                    \"additional_properties\": {},\n",
            "                    \"code\": \"ExperimentTimeoutForIterations\",\n",
            "                    \"inner_error\": null\n",
            "                }\n",
            "            }\n",
            "        },\n",
            "        \"additional_info\": null\n",
            "    },\n",
            "    \"correlation\": null,\n",
            "    \"environment\": null,\n",
            "    \"location\": null,\n",
            "    \"time\": {},\n",
            "    \"component_name\": null\n",
            "}\n",
            "        61   SparseNormalizer XGBoostClassifier             0:02:01          nan    0.8698\n",
            "ERROR: {\n",
            "    \"additional_properties\": {},\n",
            "    \"error\": {\n",
            "        \"additional_properties\": {\n",
            "            \"debugInfo\": null\n",
            "        },\n",
            "        \"code\": \"UserError\",\n",
            "        \"severity\": null,\n",
            "        \"message\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_format\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_parameters\": {},\n",
            "        \"reference_code\": null,\n",
            "        \"details_uri\": null,\n",
            "        \"target\": null,\n",
            "        \"details\": [],\n",
            "        \"inner_error\": {\n",
            "            \"additional_properties\": {},\n",
            "            \"code\": \"ResourceExhausted\",\n",
            "            \"inner_error\": {\n",
            "                \"additional_properties\": {},\n",
            "                \"code\": \"Timeout\",\n",
            "                \"inner_error\": {\n",
            "                    \"additional_properties\": {},\n",
            "                    \"code\": \"ExperimentTimeoutForIterations\",\n",
            "                    \"inner_error\": null\n",
            "                }\n",
            "            }\n",
            "        },\n",
            "        \"additional_info\": null\n",
            "    },\n",
            "    \"correlation\": null,\n",
            "    \"environment\": null,\n",
            "    \"location\": null,\n",
            "    \"time\": {},\n",
            "    \"component_name\": null\n",
            "}\n",
            "        62   SparseNormalizer XGBoostClassifier             0:01:31       0.8669    0.8698\n",
            "        63                                                  0:02:14          nan    0.8698\n",
            "ERROR: {\n",
            "    \"additional_properties\": {},\n",
            "    \"error\": {\n",
            "        \"additional_properties\": {\n",
            "            \"debugInfo\": null\n",
            "        },\n",
            "        \"code\": \"UserError\",\n",
            "        \"severity\": null,\n",
            "        \"message\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_format\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_parameters\": {},\n",
            "        \"reference_code\": null,\n",
            "        \"details_uri\": null,\n",
            "        \"target\": null,\n",
            "        \"details\": [],\n",
            "        \"inner_error\": {\n",
            "            \"additional_properties\": {},\n",
            "            \"code\": \"ResourceExhausted\",\n",
            "            \"inner_error\": {\n",
            "                \"additional_properties\": {},\n",
            "                \"code\": \"Timeout\",\n",
            "                \"inner_error\": {\n",
            "                    \"additional_properties\": {},\n",
            "                    \"code\": \"ExperimentTimeoutForIterations\",\n",
            "                    \"inner_error\": null\n",
            "                }\n",
            "            }\n",
            "        },\n",
            "        \"additional_info\": null\n",
            "    },\n",
            "    \"correlation\": null,\n",
            "    \"environment\": null,\n",
            "    \"location\": null,\n",
            "    \"time\": {},\n",
            "    \"component_name\": null\n",
            "}\n",
            "        64                                                  0:01:49          nan    0.8698\n",
            "ERROR: {\n",
            "    \"additional_properties\": {},\n",
            "    \"error\": {\n",
            "        \"additional_properties\": {\n",
            "            \"debugInfo\": null\n",
            "        },\n",
            "        \"code\": \"UserError\",\n",
            "        \"severity\": null,\n",
            "        \"message\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_format\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_parameters\": {},\n",
            "        \"reference_code\": null,\n",
            "        \"details_uri\": null,\n",
            "        \"target\": null,\n",
            "        \"details\": [],\n",
            "        \"inner_error\": {\n",
            "            \"additional_properties\": {},\n",
            "            \"code\": \"ResourceExhausted\",\n",
            "            \"inner_error\": {\n",
            "                \"additional_properties\": {},\n",
            "                \"code\": \"Timeout\",\n",
            "                \"inner_error\": {\n",
            "                    \"additional_properties\": {},\n",
            "                    \"code\": \"ExperimentTimeoutForIterations\",\n",
            "                    \"inner_error\": null\n",
            "                }\n",
            "            }\n",
            "        },\n",
            "        \"additional_info\": null\n",
            "    },\n",
            "    \"correlation\": null,\n",
            "    \"environment\": null,\n",
            "    \"location\": null,\n",
            "    \"time\": {},\n",
            "    \"component_name\": null\n",
            "}\n",
            "        65    VotingEnsemble                                0:01:38       0.8708    0.8708\n",
            "        66    StackEnsemble                                 0:01:49       0.8700    0.8708\n"
          ]
        }
      ],
      "execution_count": 6,
      "metadata": {
        "gather": {
          "logged": 1626665504841
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.widgets import RunDetails\r\n",
        "RunDetails(automl_run).show()"
      ],
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "_AutoMLWidget(widget_settings={'childWidgetDisplay': 'popup', 'send_telemetry': False, 'log_level': 'INFO', 's…",
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "ad55d6918f6646de87b6da5943c0b701"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "application/aml.mini.widget.v1": "{\"status\": \"Completed\", \"workbench_run_details_uri\": \"https://ml.azure.com/runs/AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420?wsid=/subscriptions/653662f1-95de-4498-b876-1fd625bf5d18/resourcegroups/udacitycapstone/workspaces/udacityws&tid=60e63508-9cfd-4013-9a1f-7610707b07ce\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"run_properties\": {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"created_utc\": \"2021-07-19T02:50:04.458592Z\", \"properties\": {\"num_iterations\": \"1000\", \"training_type\": \"TrainFull\", \"acquisition_function\": \"EI\", \"primary_metric\": \"accuracy\", \"train_split\": \"0\", \"acquisition_parameter\": \"0\", \"num_cross_validation\": \"5\", \"target\": \"cpu-cluster\", \"AMLSettingsJsonString\": \"{\\\"path\\\":null,\\\"name\\\":\\\"capstone\\\",\\\"subscription_id\\\":\\\"653662f1-95de-4498-b876-1fd625bf5d18\\\",\\\"resource_group\\\":\\\"udacitycapstone\\\",\\\"workspace_name\\\":\\\"udacityws\\\",\\\"region\\\":\\\"japaneast\\\",\\\"compute_target\\\":\\\"cpu-cluster\\\",\\\"spark_service\\\":null,\\\"azure_service\\\":\\\"remote\\\",\\\"many_models\\\":false,\\\"pipeline_fetch_max_batch_size\\\":1,\\\"enable_batch_run\\\":false,\\\"enable_run_restructure\\\":false,\\\"start_auxiliary_runs_before_parent_complete\\\":false,\\\"enable_code_generation\\\":false,\\\"iterations\\\":1000,\\\"primary_metric\\\":\\\"accuracy\\\",\\\"task_type\\\":\\\"classification\\\",\\\"data_script\\\":null,\\\"test_size\\\":0.0,\\\"validation_size\\\":0.0,\\\"n_cross_validations\\\":5,\\\"y_min\\\":null,\\\"y_max\\\":null,\\\"num_classes\\\":null,\\\"featurization\\\":\\\"auto\\\",\\\"_ignore_package_version_incompatibilities\\\":false,\\\"is_timeseries\\\":false,\\\"max_cores_per_iteration\\\":1,\\\"max_concurrent_iterations\\\":5,\\\"iteration_timeout_minutes\\\":null,\\\"mem_in_mb\\\":null,\\\"enforce_time_on_windows\\\":false,\\\"experiment_timeout_minutes\\\":30,\\\"experiment_exit_score\\\":null,\\\"whitelist_models\\\":null,\\\"blacklist_algos\\\":[\\\"TensorFlowLinearClassifier\\\",\\\"TensorFlowDNN\\\"],\\\"supported_models\\\":[\\\"TensorFlowLinearClassifier\\\",\\\"TensorFlowDNN\\\",\\\"KNN\\\",\\\"LogisticRegression\\\",\\\"GradientBoosting\\\",\\\"MultinomialNaiveBayes\\\",\\\"BernoulliNaiveBayes\\\",\\\"RandomForest\\\",\\\"SVM\\\",\\\"LinearSVM\\\",\\\"LightGBM\\\",\\\"XGBoostClassifier\\\",\\\"AveragedPerceptronClassifier\\\",\\\"SGD\\\",\\\"DecisionTree\\\",\\\"ExtremeRandomTrees\\\"],\\\"private_models\\\":[],\\\"auto_blacklist\\\":true,\\\"blacklist_samples_reached\\\":false,\\\"exclude_nan_labels\\\":true,\\\"verbosity\\\":20,\\\"_debug_log\\\":\\\"azureml_automl.log\\\",\\\"show_warnings\\\":false,\\\"model_explainability\\\":true,\\\"service_url\\\":null,\\\"sdk_url\\\":null,\\\"sdk_packages\\\":null,\\\"enable_onnx_compatible_models\\\":false,\\\"enable_split_onnx_featurizer_estimator_models\\\":false,\\\"vm_type\\\":\\\"STANDARD_D2_V2\\\",\\\"telemetry_verbosity\\\":20,\\\"send_telemetry\\\":true,\\\"enable_dnn\\\":false,\\\"scenario\\\":\\\"SDK-1.13.0\\\",\\\"environment_label\\\":null,\\\"save_mlflow\\\":false,\\\"force_text_dnn\\\":false,\\\"enable_feature_sweeping\\\":true,\\\"enable_early_stopping\\\":false,\\\"early_stopping_n_iters\\\":10,\\\"metrics\\\":null,\\\"enable_metric_confidence\\\":false,\\\"enable_ensembling\\\":true,\\\"enable_stack_ensembling\\\":true,\\\"ensemble_iterations\\\":15,\\\"enable_tf\\\":false,\\\"enable_subsampling\\\":null,\\\"subsample_seed\\\":null,\\\"enable_nimbusml\\\":false,\\\"enable_streaming\\\":false,\\\"force_streaming\\\":false,\\\"track_child_runs\\\":true,\\\"allowed_private_models\\\":[],\\\"label_column_name\\\":\\\"income\\\",\\\"weight_column_name\\\":null,\\\"cv_split_column_names\\\":null,\\\"enable_local_managed\\\":false,\\\"_local_managed_run_id\\\":null,\\\"cost_mode\\\":1,\\\"lag_length\\\":0,\\\"metric_operation\\\":\\\"maximize\\\",\\\"preprocess\\\":true}\", \"DataPrepJsonString\": \"{\\\\\\\"training_data\\\\\\\": {\\\\\\\"datasetId\\\\\\\": \\\\\\\"fa0687fd-3726-4831-863a-18a8ccfd8f14\\\\\\\"}, \\\\\\\"datasets\\\\\\\": 0}\", \"EnableSubsampling\": null, \"runTemplate\": \"AutoML\", \"azureml.runsource\": \"automl\", \"display_task_type\": \"classification\", \"dependencies_versions\": \"{\\\"azureml-widgets\\\": \\\"1.31.0\\\", \\\"azureml-train\\\": \\\"1.31.0\\\", \\\"azureml-train-restclients-hyperdrive\\\": \\\"1.31.0\\\", \\\"azureml-train-core\\\": \\\"1.31.0\\\", \\\"azureml-train-automl\\\": \\\"1.31.0\\\", \\\"azureml-train-automl-runtime\\\": \\\"1.31.0\\\", \\\"azureml-train-automl-client\\\": \\\"1.31.0\\\", \\\"azureml-tensorboard\\\": \\\"1.31.0\\\", \\\"azureml-telemetry\\\": \\\"1.31.0\\\", \\\"azureml-sdk\\\": \\\"1.31.0\\\", \\\"azureml-samples\\\": \\\"0+unknown\\\", \\\"azureml-responsibleai\\\": \\\"1.31.0\\\", \\\"azureml-pipeline\\\": \\\"1.31.0\\\", \\\"azureml-pipeline-steps\\\": \\\"1.31.0\\\", \\\"azureml-pipeline-core\\\": \\\"1.31.0\\\", \\\"azureml-opendatasets\\\": \\\"1.31.0\\\", \\\"azureml-model-management-sdk\\\": \\\"1.0.1b6.post1\\\", \\\"azureml-mlflow\\\": \\\"1.31.0\\\", \\\"azureml-interpret\\\": \\\"1.31.0\\\", \\\"azureml-explain-model\\\": \\\"1.31.0\\\", \\\"azureml-defaults\\\": \\\"1.31.0\\\", \\\"azureml-dataset-runtime\\\": \\\"1.31.0\\\", \\\"azureml-dataprep\\\": \\\"2.18.0\\\", \\\"azureml-dataprep-rslex\\\": \\\"1.16.1\\\", \\\"azureml-dataprep-native\\\": \\\"36.0.0\\\", \\\"azureml-datadrift\\\": \\\"1.31.0\\\", \\\"azureml-core\\\": \\\"1.31.0\\\", \\\"azureml-contrib-services\\\": \\\"1.31.0\\\", \\\"azureml-contrib-server\\\": \\\"1.31.0\\\", \\\"azureml-contrib-reinforcementlearning\\\": \\\"1.31.0\\\", \\\"azureml-contrib-pipeline-steps\\\": \\\"1.31.0\\\", \\\"azureml-contrib-notebook\\\": \\\"1.31.0\\\", \\\"azureml-contrib-fairness\\\": \\\"1.31.0\\\", \\\"azureml-contrib-dataset\\\": \\\"1.31.0\\\", \\\"azureml-cli-common\\\": \\\"1.31.0\\\", \\\"azureml-automl-runtime\\\": \\\"1.31.0\\\", \\\"azureml-automl-dnn-nlp\\\": \\\"1.31.0\\\", \\\"azureml-automl-core\\\": \\\"1.31.0\\\", \\\"azureml-accel-models\\\": \\\"1.31.0\\\"}\", \"_aml_system_scenario_identification\": \"Remote.Parent\", \"ClientType\": \"SDK\", \"environment_cpu_name\": \"AzureML-AutoML\", \"environment_cpu_label\": \"prod\", \"environment_gpu_name\": \"AzureML-AutoML-GPU\", \"environment_gpu_label\": \"prod\", \"root_attribution\": \"automl\", \"attribution\": \"AutoML\", \"Orchestrator\": \"AutoML\", \"CancelUri\": \"https://japaneast.api.azureml.ms/jasmine/v1.0/subscriptions/653662f1-95de-4498-b876-1fd625bf5d18/resourceGroups/udacitycapstone/providers/Microsoft.MachineLearningServices/workspaces/udacityws/experimentids/71e58e51-6b4e-48f1-9863-62022f60b877/cancel/AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"ClientSdkVersion\": \"1.32.0\", \"snapshotId\": \"00000000-0000-0000-0000-000000000000\", \"SetupRunId\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_setup\", \"SetupRunContainerId\": \"dcid.AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_setup\", \"FeaturizationRunJsonPath\": \"featurizer_container.json\", \"FeaturizationRunId\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_featurize\", \"ProblemInfoJsonString\": \"{\\\"dataset_num_categorical\\\": 0, \\\"is_sparse\\\": true, \\\"subsampling\\\": false, \\\"has_extra_col\\\": true, \\\"dataset_classes\\\": 2, \\\"dataset_features\\\": 102, \\\"dataset_samples\\\": 45222, \\\"single_frequency_class_detected\\\": false}\", \"ModelExplainRunId\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_ModelExplain\", \"azureml.git.repository_uri\": \"https://github.com/HajimeK/nd00333-capstone\", \"mlflow.source.git.repoURL\": \"https://github.com/HajimeK/nd00333-capstone\", \"azureml.git.branch\": \"master\", \"mlflow.source.git.branch\": \"master\", \"azureml.git.commit\": \"bb8bb394f2d1a40e23f582b5c1b308628e329b33\", \"mlflow.source.git.commit\": \"bb8bb394f2d1a40e23f582b5c1b308628e329b33\", \"azureml.git.dirty\": \"True\"}, \"tags\": {\"model_explain_run\": \"best_run\", \"_aml_system_azureml.automlComponent\": \"AutoML\", \"pipeline_id\": \"\", \"score\": \"\", \"predicted_cost\": \"\", \"fit_time\": \"\", \"training_percent\": \"\", \"iteration\": \"\", \"run_preprocessor\": \"\", \"run_algorithm\": \"\", \"dynamic_whitelisting_iterations\": \"<25>;<30>;<35>;<40>;<45>;<50>;<55>;<60>;\", \"automl_best_child_run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_65\", \"model_explain_best_run_child_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_65\"}, \"end_time_utc\": \"2021-07-19T03:31:16.886912Z\", \"status\": \"Completed\", \"log_files\": {}, \"log_groups\": [], \"run_duration\": \"0:41:12\", \"run_number\": \"121\", \"run_queued_details\": {\"status\": \"Completed\", \"details\": null}}, \"child_runs\": [{\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_0\", \"run_number\": 125, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:00:20.234568Z\", \"end_time\": \"2021-07-19T03:01:01.570781Z\", \"created_time\": \"2021-07-19T02:57:50.294104Z\", \"created_time_dt\": \"2021-07-19T02:57:50.294104Z\", \"duration\": \"0:03:11\", \"iteration\": \"0\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.86979796, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_3\", \"run_number\": 126, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T02:58:05.41726Z\", \"end_time\": \"2021-07-19T02:58:42.652303Z\", \"created_time\": \"2021-07-19T02:57:50.301494Z\", \"created_time_dt\": \"2021-07-19T02:57:50.301494Z\", \"duration\": \"0:00:52\", \"iteration\": \"3\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, RandomForest\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.79675879, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_2\", \"run_number\": 127, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T02:59:09.555936Z\", \"end_time\": \"2021-07-19T03:00:03.587008Z\", \"created_time\": \"2021-07-19T02:57:50.319681Z\", \"created_time_dt\": \"2021-07-19T02:57:50.319681Z\", \"duration\": \"0:02:13\", \"iteration\": \"2\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, RandomForest\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.834771, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_1\", \"run_number\": 128, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:01:11.370244Z\", \"end_time\": \"2021-07-19T03:02:49.822254Z\", \"created_time\": \"2021-07-19T02:57:50.31091Z\", \"created_time_dt\": \"2021-07-19T02:57:50.31091Z\", \"duration\": \"0:04:59\", \"iteration\": \"1\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, XGBoostClassifier\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.86174888, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_4\", \"run_number\": 129, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:01:09.134682Z\", \"end_time\": \"2021-07-19T03:02:46.320354Z\", \"created_time\": \"2021-07-19T02:57:50.302729Z\", \"created_time_dt\": \"2021-07-19T02:57:50.302729Z\", \"duration\": \"0:04:56\", \"iteration\": \"4\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, RandomForest\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.74532309, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_5\", \"run_number\": 130, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:01:14.377497Z\", \"end_time\": \"2021-07-19T03:01:55.760409Z\", \"created_time\": \"2021-07-19T02:58:45.858547Z\", \"created_time_dt\": \"2021-07-19T02:58:45.858547Z\", \"duration\": \"0:03:09\", \"iteration\": \"5\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, RandomForest\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.73291788, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_6\", \"run_number\": 131, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:02:12.011983Z\", \"end_time\": \"2021-07-19T03:03:08.382704Z\", \"created_time\": \"2021-07-19T03:00:06.411497Z\", \"created_time_dt\": \"2021-07-19T03:00:06.411497Z\", \"duration\": \"0:03:01\", \"iteration\": \"6\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.86736547, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_7\", \"run_number\": 132, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:02:58.345322Z\", \"end_time\": \"2021-07-19T03:03:51.93509Z\", \"created_time\": \"2021-07-19T03:01:03.908127Z\", \"created_time_dt\": \"2021-07-19T03:01:03.908127Z\", \"duration\": \"0:02:48\", \"iteration\": \"7\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.86506575, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_8\", \"run_number\": 133, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:03:04.413781Z\", \"end_time\": \"2021-07-19T03:04:10.62043Z\", \"created_time\": \"2021-07-19T03:01:57.945413Z\", \"created_time_dt\": \"2021-07-19T03:01:57.945413Z\", \"duration\": \"0:02:12\", \"iteration\": \"8\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='max'\", \"primary_metric\": 0.86736548, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_9\", \"run_number\": 134, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:03:21.310559Z\", \"end_time\": \"2021-07-19T03:04:03.417Z\", \"created_time\": \"2021-07-19T03:02:48.318238Z\", \"created_time_dt\": \"2021-07-19T03:02:48.318238Z\", \"duration\": \"0:01:15\", \"iteration\": \"9\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.85779055, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_10\", \"run_number\": 135, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:04:03.695084Z\", \"end_time\": \"2021-07-19T03:04:55.888582Z\", \"created_time\": \"2021-07-19T03:02:52.296404Z\", \"created_time_dt\": \"2021-07-19T03:02:52.296404Z\", \"duration\": \"0:02:03\", \"iteration\": \"10\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='max'\", \"primary_metric\": 0.86256693, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_11\", \"run_number\": 136, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:04:17.003683Z\", \"end_time\": \"2021-07-19T03:05:27.220388Z\", \"created_time\": \"2021-07-19T03:03:10.319721Z\", \"created_time_dt\": \"2021-07-19T03:03:10.319721Z\", \"duration\": \"0:02:16\", \"iteration\": \"11\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, RandomForest\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=True\\n\", \"primary_metric\": 0.84118363, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_12\", \"run_number\": 137, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:04:24.337762Z\", \"end_time\": \"2021-07-19T03:05:05.699945Z\", \"created_time\": \"2021-07-19T03:03:53.849563Z\", \"created_time_dt\": \"2021-07-19T03:03:53.849563Z\", \"duration\": \"0:01:11\", \"iteration\": \"12\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, RandomForest\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.81544382, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_13\", \"run_number\": 138, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:05:08.083741Z\", \"end_time\": \"2021-07-19T03:05:46.9833Z\", \"created_time\": \"2021-07-19T03:04:05.31179Z\", \"created_time_dt\": \"2021-07-19T03:04:05.31179Z\", \"duration\": \"0:01:41\", \"iteration\": \"13\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='max'\", \"primary_metric\": 0.8105124, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_14\", \"run_number\": 139, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:05:41.111075Z\", \"end_time\": \"2021-07-19T03:06:17.390315Z\", \"created_time\": \"2021-07-19T03:04:12.608837Z\", \"created_time_dt\": \"2021-07-19T03:04:12.608837Z\", \"duration\": \"0:02:04\", \"iteration\": \"14\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LogisticRegression\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.84693299, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_15\", \"run_number\": 140, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:05:41.449766Z\", \"end_time\": \"2021-07-19T03:07:22.664932Z\", \"created_time\": \"2021-07-19T03:04:57.750531Z\", \"created_time_dt\": \"2021-07-19T03:04:57.750531Z\", \"duration\": \"0:02:24\", \"iteration\": \"15\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, ExtremeRandomTrees\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.81442663, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_16\", \"run_number\": 141, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:06:05.375835Z\", \"end_time\": \"2021-07-19T03:06:43.213479Z\", \"created_time\": \"2021-07-19T03:05:07.569491Z\", \"created_time_dt\": \"2021-07-19T03:05:07.569491Z\", \"duration\": \"0:01:35\", \"iteration\": \"16\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.82745124, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_17\", \"run_number\": 142, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:06:31.938113Z\", \"end_time\": \"2021-07-19T03:07:07.993028Z\", \"created_time\": \"2021-07-19T03:05:29.192249Z\", \"created_time_dt\": \"2021-07-19T03:05:29.192249Z\", \"duration\": \"0:01:38\", \"iteration\": \"17\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, LightGBM\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=False\\n\", \"primary_metric\": 0.8406749, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_18\", \"run_number\": 143, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:06:54.539572Z\", \"end_time\": \"2021-07-19T03:07:34.18575Z\", \"created_time\": \"2021-07-19T03:05:48.817026Z\", \"created_time_dt\": \"2021-07-19T03:05:48.817026Z\", \"duration\": \"0:01:45\", \"iteration\": \"18\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.82212189, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_19\", \"run_number\": 144, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:07:22.597899Z\", \"end_time\": \"2021-07-19T03:08:01.589264Z\", \"created_time\": \"2021-07-19T03:06:19.161007Z\", \"created_time_dt\": \"2021-07-19T03:06:19.161007Z\", \"duration\": \"0:01:42\", \"iteration\": \"19\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, LightGBM\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.82302853, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_20\", \"run_number\": 145, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:07:37.058537Z\", \"end_time\": \"2021-07-19T03:08:38.341505Z\", \"created_time\": \"2021-07-19T03:06:45.021551Z\", \"created_time_dt\": \"2021-07-19T03:06:45.021551Z\", \"duration\": \"0:01:53\", \"iteration\": \"20\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.80865509, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_21\", \"run_number\": 146, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:07:50.570727Z\", \"end_time\": \"2021-07-19T03:08:37.936638Z\", \"created_time\": \"2021-07-19T03:07:09.839605Z\", \"created_time_dt\": \"2021-07-19T03:07:09.839605Z\", \"duration\": \"0:01:28\", \"iteration\": \"21\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.81856172, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_22\", \"run_number\": 147, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:08:15.579584Z\", \"end_time\": \"2021-07-19T03:09:36.266868Z\", \"created_time\": \"2021-07-19T03:07:24.522668Z\", \"created_time_dt\": \"2021-07-19T03:07:24.522668Z\", \"duration\": \"0:02:11\", \"iteration\": \"22\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.85131131, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_23\", \"run_number\": 148, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:08:51.134448Z\", \"end_time\": \"2021-07-19T03:09:56.317765Z\", \"created_time\": \"2021-07-19T03:07:36.166761Z\", \"created_time_dt\": \"2021-07-19T03:07:36.166761Z\", \"duration\": \"0:02:20\", \"iteration\": \"23\", \"goal\": \"accuracy_max\", \"run_name\": \"TruncatedSVDWrapper, XGBoostClassifier\", \"run_properties\": \"n_components=0.3068421052631579, random_state=None\", \"primary_metric\": 0.86037776, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_24\", \"run_number\": 149, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:08:51.893315Z\", \"end_time\": \"2021-07-19T03:11:03.412386Z\", \"created_time\": \"2021-07-19T03:08:03.424186Z\", \"created_time_dt\": \"2021-07-19T03:08:03.424186Z\", \"duration\": \"0:02:59\", \"iteration\": \"24\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, ExtremeRandomTrees\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.81986647, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_25\", \"run_number\": 150, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:09:50.689929Z\", \"end_time\": \"2021-07-19T03:10:27.475164Z\", \"created_time\": \"2021-07-19T03:08:40.748617Z\", \"created_time_dt\": \"2021-07-19T03:08:40.748617Z\", \"duration\": \"0:01:46\", \"iteration\": \"25\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, LightGBM\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.75215588, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_26\", \"run_number\": 151, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:10:12.071033Z\", \"end_time\": \"2021-07-19T03:11:27.113112Z\", \"created_time\": \"2021-07-19T03:08:44.173627Z\", \"created_time_dt\": \"2021-07-19T03:08:44.173627Z\", \"duration\": \"0:02:42\", \"iteration\": \"26\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LogisticRegression\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.84713202, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_27\", \"run_number\": 152, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:10:42.898657Z\", \"end_time\": \"2021-07-19T03:11:22.227496Z\", \"created_time\": \"2021-07-19T03:09:38.205634Z\", \"created_time_dt\": \"2021-07-19T03:09:38.205634Z\", \"duration\": \"0:01:44\", \"iteration\": \"27\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.83070191, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_28\", \"run_number\": 153, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:11:16.409217Z\", \"end_time\": \"2021-07-19T03:12:02.402346Z\", \"created_time\": \"2021-07-19T03:09:58.199658Z\", \"created_time_dt\": \"2021-07-19T03:09:58.199658Z\", \"duration\": \"0:02:04\", \"iteration\": \"28\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.85860872, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_29\", \"run_number\": 154, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:11:32.541668Z\", \"end_time\": \"2021-07-19T03:12:29.990707Z\", \"created_time\": \"2021-07-19T03:10:29.484624Z\", \"created_time_dt\": \"2021-07-19T03:10:29.484624Z\", \"duration\": \"0:02:00\", \"iteration\": \"29\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.8662377, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_30\", \"run_number\": 155, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:11:39.24429Z\", \"end_time\": \"2021-07-19T03:12:18.207449Z\", \"created_time\": \"2021-07-19T03:11:06.382009Z\", \"created_time_dt\": \"2021-07-19T03:11:06.382009Z\", \"duration\": \"0:01:11\", \"iteration\": \"30\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, LightGBM\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.78919531, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_31\", \"run_number\": 156, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:12:18.184395Z\", \"end_time\": \"2021-07-19T03:14:33.763307Z\", \"created_time\": \"2021-07-19T03:11:24.086745Z\", \"created_time_dt\": \"2021-07-19T03:11:24.086745Z\", \"duration\": \"0:03:09\", \"iteration\": \"31\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='max'\", \"primary_metric\": 0.86628203, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_32\", \"run_number\": 157, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:12:32.414036Z\", \"end_time\": \"2021-07-19T03:13:11.363077Z\", \"created_time\": \"2021-07-19T03:11:28.935867Z\", \"created_time_dt\": \"2021-07-19T03:11:28.935867Z\", \"duration\": \"0:01:42\", \"iteration\": \"32\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, XGBoostClassifier\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=False\\n\", \"primary_metric\": 0.85060377, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_33\", \"run_number\": 158, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:12:44.089706Z\", \"end_time\": \"2021-07-19T03:13:23.05476Z\", \"created_time\": \"2021-07-19T03:12:04.913626Z\", \"created_time_dt\": \"2021-07-19T03:12:04.913626Z\", \"duration\": \"0:01:18\", \"iteration\": \"33\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, LightGBM\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=False\\n\", \"primary_metric\": 0.76984638, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_34\", \"run_number\": 159, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:13:25.593436Z\", \"end_time\": \"2021-07-19T03:14:19.931308Z\", \"created_time\": \"2021-07-19T03:12:20.163702Z\", \"created_time_dt\": \"2021-07-19T03:12:20.163702Z\", \"duration\": \"0:01:59\", \"iteration\": \"34\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, ExtremeRandomTrees\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.78134498, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_35\", \"run_number\": 160, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:13:38.835028Z\", \"end_time\": \"2021-07-19T03:14:25.710193Z\", \"created_time\": \"2021-07-19T03:12:32.937765Z\", \"created_time_dt\": \"2021-07-19T03:12:32.937765Z\", \"duration\": \"0:01:52\", \"iteration\": \"35\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, LightGBM\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=True\\n\", \"primary_metric\": 0.84764059, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_36\", \"run_number\": 161, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:14:35.355113Z\", \"end_time\": \"2021-07-19T03:15:51.299147Z\", \"created_time\": \"2021-07-19T03:13:13.209227Z\", \"created_time_dt\": \"2021-07-19T03:13:13.209227Z\", \"duration\": \"0:02:38\", \"iteration\": \"36\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.86718863, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_37\", \"run_number\": 162, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:14:42.120619Z\", \"end_time\": \"2021-07-19T03:15:31.237983Z\", \"created_time\": \"2021-07-19T03:13:26.104601Z\", \"created_time_dt\": \"2021-07-19T03:13:26.104601Z\", \"duration\": \"0:02:05\", \"iteration\": \"37\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='max'\", \"primary_metric\": 0.86287653, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_38\", \"run_number\": 163, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:14:48.16613Z\", \"end_time\": \"2021-07-19T03:15:28.347609Z\", \"created_time\": \"2021-07-19T03:14:22.089303Z\", \"created_time_dt\": \"2021-07-19T03:14:22.089303Z\", \"duration\": \"0:01:06\", \"iteration\": \"38\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.84396978, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_39\", \"run_number\": 164, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:15:46.407338Z\", \"end_time\": \"2021-07-19T03:17:19.195298Z\", \"created_time\": \"2021-07-19T03:14:27.704219Z\", \"created_time_dt\": \"2021-07-19T03:14:27.704219Z\", \"duration\": \"0:02:51\", \"iteration\": \"39\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.86431388, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_40\", \"run_number\": 165, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:15:45.944229Z\", \"end_time\": \"2021-07-19T03:16:33.570232Z\", \"created_time\": \"2021-07-19T03:14:36.861682Z\", \"created_time_dt\": \"2021-07-19T03:14:36.861682Z\", \"duration\": \"0:01:56\", \"iteration\": \"40\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.84673394, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_41\", \"run_number\": 166, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:16:25.708852Z\", \"end_time\": \"2021-07-19T03:17:55.876595Z\", \"created_time\": \"2021-07-19T03:15:30.34408Z\", \"created_time_dt\": \"2021-07-19T03:15:30.34408Z\", \"duration\": \"0:02:25\", \"iteration\": \"41\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.866282, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_42\", \"run_number\": 167, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:16:50.802614Z\", \"end_time\": \"2021-07-19T03:18:22.073316Z\", \"created_time\": \"2021-07-19T03:15:34.776125Z\", \"created_time_dt\": \"2021-07-19T03:15:34.776125Z\", \"duration\": \"0:02:47\", \"iteration\": \"42\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, LogisticRegression\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=True\\n\", \"primary_metric\": 0.84722048, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_43\", \"run_number\": 168, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:17:32.475389Z\", \"end_time\": \"2021-07-19T03:18:18.623633Z\", \"created_time\": \"2021-07-19T03:15:53.379521Z\", \"created_time_dt\": \"2021-07-19T03:15:53.379521Z\", \"duration\": \"0:02:25\", \"iteration\": \"43\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, XGBoostClassifier\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=False\\n\", \"primary_metric\": 0.86855968, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_44\", \"run_number\": 169, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:18:10.854511Z\", \"end_time\": \"2021-07-19T03:19:22.290379Z\", \"created_time\": \"2021-07-19T03:16:35.597277Z\", \"created_time_dt\": \"2021-07-19T03:16:35.597277Z\", \"duration\": \"0:02:46\", \"iteration\": \"44\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.86643677, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_45\", \"run_number\": 170, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:18:37.110434Z\", \"end_time\": \"2021-07-19T03:19:18.491755Z\", \"created_time\": \"2021-07-19T03:17:22.20461Z\", \"created_time_dt\": \"2021-07-19T03:17:22.20461Z\", \"duration\": \"0:01:56\", \"iteration\": \"45\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, LightGBM\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.85902885, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_46\", \"run_number\": 171, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:18:38.284848Z\", \"end_time\": \"2021-07-19T03:19:25.726061Z\", \"created_time\": \"2021-07-19T03:17:57.701468Z\", \"created_time_dt\": \"2021-07-19T03:17:57.701468Z\", \"duration\": \"0:01:28\", \"iteration\": \"46\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LogisticRegression\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.80673125, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_47\", \"run_number\": 172, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:19:36.185577Z\", \"end_time\": \"2021-07-19T03:22:01.803145Z\", \"created_time\": \"2021-07-19T03:18:20.538468Z\", \"created_time_dt\": \"2021-07-19T03:18:20.538468Z\", \"duration\": \"0:03:41\", \"iteration\": \"47\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='max'\", \"primary_metric\": 0.8638717, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_48\", \"run_number\": 173, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:19:36.427675Z\", \"end_time\": \"2021-07-19T03:22:05.554031Z\", \"created_time\": \"2021-07-19T03:18:24.664466Z\", \"created_time_dt\": \"2021-07-19T03:18:24.664466Z\", \"duration\": \"0:03:40\", \"iteration\": \"48\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='max'\", \"primary_metric\": 0.86756452, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_49\", \"run_number\": 174, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:19:41.711373Z\", \"end_time\": \"2021-07-19T03:21:23.54833Z\", \"created_time\": \"2021-07-19T03:19:20.704297Z\", \"created_time_dt\": \"2021-07-19T03:19:20.704297Z\", \"duration\": \"0:02:02\", \"iteration\": \"49\", \"goal\": \"accuracy_max\", \"run_name\": \"StandardScalerWrapper, XGBoostClassifier\", \"run_properties\": \"\\n    copy=True,\\n    with_mean=False,\\n    with_std=False\\n\", \"primary_metric\": 0.86968741, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_50\", \"run_number\": 175, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:21:38.850292Z\", \"end_time\": \"2021-07-19T03:22:27.125009Z\", \"created_time\": \"2021-07-19T03:19:27.017129Z\", \"created_time_dt\": \"2021-07-19T03:19:27.017129Z\", \"duration\": \"0:03:00\", \"iteration\": \"50\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, LightGBM\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.8619699, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_51\", \"run_number\": 176, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:22:21.001584Z\", \"end_time\": \"2021-07-19T03:23:50.683708Z\", \"created_time\": \"2021-07-19T03:19:30.422355Z\", \"created_time_dt\": \"2021-07-19T03:19:30.422355Z\", \"duration\": \"0:04:20\", \"iteration\": \"51\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.86519842, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_52\", \"run_number\": 177, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:22:18.888271Z\", \"end_time\": \"2021-07-19T03:25:08.955656Z\", \"created_time\": \"2021-07-19T03:21:25.925329Z\", \"created_time_dt\": \"2021-07-19T03:21:25.925329Z\", \"duration\": \"0:03:43\", \"iteration\": \"52\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.86703388, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_53\", \"run_number\": 178, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:22:39.785953Z\", \"end_time\": \"2021-07-19T03:23:49.630299Z\", \"created_time\": \"2021-07-19T03:22:03.662108Z\", \"created_time_dt\": \"2021-07-19T03:22:03.662108Z\", \"duration\": \"0:01:45\", \"iteration\": \"53\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, LightGBM\", \"run_properties\": \"copy=True, norm='max'\", \"primary_metric\": 0.85847606, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_54\", \"run_number\": 179, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:24:04.350093Z\", \"end_time\": \"2021-07-19T03:25:17.801233Z\", \"created_time\": \"2021-07-19T03:22:07.724745Z\", \"created_time_dt\": \"2021-07-19T03:22:07.724745Z\", \"duration\": \"0:03:10\", \"iteration\": \"54\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.86625979, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_55\", \"run_number\": 180, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:24:09.720012Z\", \"end_time\": \"2021-07-19T03:25:00.14954Z\", \"created_time\": \"2021-07-19T03:22:30.643954Z\", \"created_time_dt\": \"2021-07-19T03:22:30.643954Z\", \"duration\": \"0:02:29\", \"iteration\": \"55\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, LightGBM\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.83981247, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_56\", \"run_number\": 181, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:25:13.980683Z\", \"end_time\": \"2021-07-19T03:26:21.52908Z\", \"created_time\": \"2021-07-19T03:23:51.667911Z\", \"created_time_dt\": \"2021-07-19T03:23:51.667911Z\", \"duration\": \"0:02:29\", \"iteration\": \"56\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.85920575, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_57\", \"run_number\": 182, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:25:23.496984Z\", \"end_time\": \"2021-07-19T03:27:00.461681Z\", \"created_time\": \"2021-07-19T03:23:54.988013Z\", \"created_time_dt\": \"2021-07-19T03:23:54.988013Z\", \"duration\": \"0:03:05\", \"iteration\": \"57\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l1'\", \"primary_metric\": 0.84175842, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_58\", \"run_number\": 183, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:25:28.112153Z\", \"end_time\": \"2021-07-19T03:26:30.541573Z\", \"created_time\": \"2021-07-19T03:25:02.202629Z\", \"created_time_dt\": \"2021-07-19T03:25:02.202629Z\", \"duration\": \"0:01:28\", \"iteration\": \"58\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='max'\", \"primary_metric\": 0.8630534, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_59\", \"run_number\": 184, \"metric\": null, \"status\": \"Canceled\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:26:38.870045Z\", \"end_time\": \"2021-07-19T03:29:16.144924Z\", \"created_time\": \"2021-07-19T03:25:10.852739Z\", \"created_time_dt\": \"2021-07-19T03:25:10.852739Z\", \"duration\": \"0:04:05\", \"iteration\": \"59\", \"goal\": null, \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": null}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_60\", \"run_number\": 185, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:26:45.668227Z\", \"end_time\": \"2021-07-19T03:27:25.219788Z\", \"created_time\": \"2021-07-19T03:25:20.857025Z\", \"created_time_dt\": \"2021-07-19T03:25:20.857025Z\", \"duration\": \"0:02:04\", \"iteration\": \"60\", \"goal\": \"accuracy_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.75215588, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_61\", \"run_number\": 186, \"metric\": null, \"status\": \"Canceled\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:27:15.409739Z\", \"end_time\": \"2021-07-19T03:29:16.050703Z\", \"created_time\": \"2021-07-19T03:26:23.641443Z\", \"created_time_dt\": \"2021-07-19T03:26:23.641443Z\", \"duration\": \"0:02:52\", \"iteration\": \"61\", \"goal\": null, \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": null}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_62\", \"run_number\": 187, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:27:38.221502Z\", \"end_time\": \"2021-07-19T03:29:09.548848Z\", \"created_time\": \"2021-07-19T03:26:32.46862Z\", \"created_time_dt\": \"2021-07-19T03:26:32.46862Z\", \"duration\": \"0:02:37\", \"iteration\": \"62\", \"goal\": \"accuracy_max\", \"run_name\": \"SparseNormalizer, XGBoostClassifier\", \"run_properties\": \"copy=True, norm='l2'\", \"primary_metric\": 0.86687911, \"best_metric\": 0.86979796}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_63\", \"run_number\": 188, \"metric\": null, \"status\": \"Canceled\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:27:02.403037Z\", \"end_time\": \"2021-07-19T03:29:16.203349Z\", \"created_time\": \"2021-07-19T03:27:02.403037Z\", \"created_time_dt\": \"2021-07-19T03:27:02.403037Z\", \"duration\": \"0:02:13\", \"iteration\": \"63\", \"goal\": null, \"run_name\": \"Canceled\", \"run_properties\": null}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_64\", \"run_number\": 189, \"metric\": null, \"status\": \"Canceled\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:27:27.347494Z\", \"end_time\": \"2021-07-19T03:29:16.049887Z\", \"created_time\": \"2021-07-19T03:27:27.347494Z\", \"created_time_dt\": \"2021-07-19T03:27:27.347494Z\", \"duration\": \"0:01:48\", \"iteration\": \"64\", \"goal\": null, \"run_name\": \"Canceled\", \"run_properties\": null}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_65\", \"run_number\": 190, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:29:26.970705Z\", \"end_time\": \"2021-07-19T03:31:04.845039Z\", \"created_time\": \"2021-07-19T03:29:17.148926Z\", \"created_time_dt\": \"2021-07-19T03:29:17.148926Z\", \"duration\": \"0:01:47\", \"iteration\": \"65\", \"goal\": \"accuracy_max\", \"run_name\": \"VotingEnsemble\", \"run_properties\": \"\\n    estimators=[('0', Pipeline(memory=None,\\n             steps=[('maxabsscaler', MaxAbsScaler(copy=True\", \"primary_metric\": 0.87081517, \"best_metric\": 0.87081517}, {\"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_66\", \"run_number\": 191, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-19T03:29:25.759697Z\", \"end_time\": \"2021-07-19T03:31:14.743447Z\", \"created_time\": \"2021-07-19T03:29:17.176274Z\", \"created_time_dt\": \"2021-07-19T03:29:17.176274Z\", \"duration\": \"0:01:57\", \"iteration\": \"66\", \"goal\": \"accuracy_max\", \"run_name\": \"StackEnsemble\", \"run_properties\": \"\\n    base_learners=[('0', Pipeline(memory=None,\\n             steps=[('maxabsscaler', MaxAbsScaler(copy=True\", \"primary_metric\": 0.86999698, \"best_metric\": 0.87081517}], \"children_metrics\": {\"categories\": [0], \"series\": {\"accuracy\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"accuracy\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.861748880053025, 0.8347709973401948, 0.7967587855601348, 0.745323092141631, 0.7329178839206103, 0.8673654749496901, 0.8650657543282654, 0.8673654798394874, 0.8577905450388238, 0.8625669260459705, 0.841183631696547, 0.8154438212397641, 0.8105124018709343, 0.8469329919276779, 0.8144266284675693, 0.8274512444412172, 0.8406749020634701, 0.8221218933588972, 0.8230285327013759, 0.8086550905602705, 0.8185617174337658, 0.8513113067519056, 0.8603777637440592, 0.8198664694122391, 0.7521558823407167, 0.8471320213517893, 0.8307019059696847, 0.8586087157216031, 0.866237704298792, 0.7891953080437901, 0.8662820327572419, 0.850603765290702, 0.7698463796795666, 0.7813449827866907, 0.847640587176653, 0.8671886256466452, 0.8628765284589877, 0.8439697820299455, 0.8643138819637134, 0.8467339356096808, 0.8662819960837613, 0.8472204826767923, 0.8685596832780419, 0.866436772841283, 0.8590288471153495, 0.8067312462211035, 0.8638717049183295, 0.8675645214880925, 0.8696874099207633, 0.8619699037859012, 0.8651984169769854, 0.8670338782279081, 0.8584760579626807, 0.8662597890688091, 0.8398124713794045, 0.8592057502061661, 0.8417584249375756, 0.8630534046559184, 0.7521558823407167, 0.866879106360184, 0.8708151732369652, 0.8699969829949961]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"accuracy_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8708151732369652, 0.8708151732369652]}], \"matthews_correlation\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"matthews_correlation\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.6353202455207431, 0.6050902531055435, 0.513829187666907, 0.3541756497457329, 0.49443874264473797, 0.48044053106146, 0.624726764987515, 0.6168362511160635, 0.6255300363076675, 0.5910053792468755, 0.6085799645252489, 0.5405420164406515, 0.4507913772720321, 0.4202170886901354, 0.5677361979846574, 0.44514247624284753, 0.4850670369374357, 0.5326959098889654, 0.4664508496636442, 0.48578664909924407, 0.4151255968885682, 0.46649925918882096, 0.5718777099130584, 0.6015316235566203, 0.4707172208170401, 0.0, 0.5685438264364386, 0.5095007345503222, 0.5941561609367555, 0.6226382794720241, 0.3292417486726204, 0.6258556110593217, 0.5713081847872644, 0.2330771276485601, 0.2893368496332728, 0.5643933475626377, 0.6256134080906575, 0.6092732416333241, 0.5533369801702951, 0.6167428676233021, 0.5635053559595327, 0.6242092652190349, 0.5687890917031257, 0.6303271629495013, 0.6236454433760781, 0.5966109224470683, 0.5722948947422951, 0.6196079445517263, 0.629459427020225, 0.635637206578914, 0.6130420838180549, 0.6222953919079093, 0.6269577151574807, 0.5986269353270881, 0.6248339487094575, 0.5403652401234583, 0.6052810641339051, 0.5581471981076296, 0.6106777807395821, 0.0, 0.625476480524292, 0.6377094958625198, 0.6358477854773277]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"matthews_correlation_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.6353202455207431, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.635637206578914, 0.6377094958625198, 0.6377094958625198]}], \"AUC_weighted\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"AUC_weighted\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9274889336889851, 0.9198681527105746, 0.8910080620214991, 0.8572818916353782, 0.8803481642518625, 0.8666794938301614, 0.9234328112937437, 0.9212446905392436, 0.9232109904740303, 0.9117609695952196, 0.9181889572845678, 0.8979299263535226, 0.8496704907717263, 0.8607520430362383, 0.9037850235980998, 0.8520979116231258, 0.8849731960134426, 0.8973670406394494, 0.8838588806516352, 0.8699603379075459, 0.8595056293929091, 0.8621831112178677, 0.9004244656083087, 0.9158045373034698, 0.8547724939213562, 0.8826047313560522, 0.9040135316429205, 0.8842498733431418, 0.9137603718167838, 0.9230507980831162, 0.8650204278964096, 0.9234728119794131, 0.9084072848812481, 0.8836832961810511, 0.8665273129278713, 0.9042612166875118, 0.9243141326351871, 0.9178495135579621, 0.9013052153600161, 0.9225355610334297, 0.9049853720879547, 0.9245445559813321, 0.9040086570069915, 0.9264051452549438, 0.9227996079958485, 0.917018529238752, 0.903996076770009, 0.9210202369278397, 0.9258434035995098, 0.9278588667617738, 0.9207587216436917, 0.9231773590903828, 0.9249403384121633, 0.9145899316886821, 0.9226320417429343, 0.8951091782801033, 0.9158364635118292, 0.8992181871976485, 0.9185837550230207, 0.8627287993601515, 0.9234333123679885, 0.9280465516671436, 0.9281984183979756]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"AUC_weighted_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9278588667617738, 0.9280465516671436, 0.9281984183979756]}], \"precision_score_weighted\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"precision_score_weighted\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8655067207486846, 0.8566907003679635, 0.8274294735595433, 0.791736519836884, 0.8280629560299065, 0.8247017131373037, 0.8626306125936736, 0.8601630484354921, 0.8626613156301979, 0.8528535042455815, 0.8574866325158998, 0.8336497655604258, 0.803477664793674, 0.8165208729921627, 0.8406261714853415, 0.8024327760063128, 0.8229909703122711, 0.835268264251056, 0.8153790548454077, 0.8125023313949293, 0.7997020975399163, 0.8069657021141745, 0.845184821287364, 0.8551049823229958, 0.8085243234194971, 0.565750145941529, 0.8408797331554677, 0.8213765760326874, 0.8535608291350048, 0.8614603831010206, 0.8001391328458854, 0.8618341621551299, 0.8441598101245852, 0.8214433763994966, 0.7958329223480145, 0.8408130529181663, 0.8624752602138329, 0.8578622557220402, 0.8366761118783714, 0.859346634396748, 0.8398938811895821, 0.86159601679482, 0.8409721111337521, 0.8640282238454153, 0.8616779814682175, 0.8537155027281124, 0.8485982064554467, 0.8593629012387873, 0.8631834323270953, 0.8654666964610269, 0.8571397668553372, 0.8606024741082372, 0.8624702984885617, 0.8529017702842857, 0.8616818991628437, 0.8319727114297667, 0.8541999943486113, 0.8361836972906284, 0.8579605604429317, 0.565750145941529, 0.8621885032250498, 0.8665346318873457, 0.8657288621938729]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"precision_score_weighted_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8655067207486846, 0.8665346318873457, 0.8665346318873457]}], \"average_precision_score_weighted\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"average_precision_score_weighted\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9390440746669853, 0.9331021556844338, 0.9055157835917973, 0.8734985400584611, 0.898521694376272, 0.8852187103214213, 0.9359193379076164, 0.9338545263959734, 0.9355789308825146, 0.9263877059929639, 0.9319215948798287, 0.9130913088197354, 0.8524194812698143, 0.8752133158025324, 0.9164677480050442, 0.8684833044793038, 0.9015302377935364, 0.9125646741617205, 0.8986454904313608, 0.8897253597770209, 0.8761693644115625, 0.8767782772432519, 0.9180669180153895, 0.930057390725902, 0.8695723014788431, 0.9027789053499603, 0.91697547452892, 0.8981022934887564, 0.9278738558476988, 0.9352524633922819, 0.8833912939062223, 0.9358125872026923, 0.922650971618228, 0.8994428051814587, 0.8841802157922167, 0.9180618636294003, 0.9364000241013217, 0.9316848156895933, 0.9134425180925403, 0.9347821409072262, 0.916602955237264, 0.9365969778813575, 0.9169878408969231, 0.938248610510682, 0.9350253257585027, 0.9307209951728052, 0.9166385915997022, 0.9339759372418323, 0.937647613255091, 0.9393490377269409, 0.9333830788939925, 0.935206656915956, 0.9369859063760513, 0.9292411798035198, 0.9348773389899027, 0.9105884679368652, 0.92961758373067, 0.9145403624112671, 0.9321880874305494, 0.8782733469507752, 0.9357308661120449, 0.9395023546455479, 0.9396209107948428]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"average_precision_score_weighted_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9390440746669853, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9393490377269409, 0.9395023546455479, 0.9396209107948428]}], \"f1_score_weighted\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"f1_score_weighted\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8659221752333192, 0.8545252831335584, 0.8201567483754397, 0.7536881324616427, 0.7620775068609343, 0.7507600003323054, 0.8619521268119124, 0.8589994245230826, 0.8622926825052233, 0.8488890950419676, 0.855911126129655, 0.8311903778797589, 0.7984762195123289, 0.7732780672007505, 0.8415600611448639, 0.7960254573574747, 0.806431264211206, 0.8261949723119342, 0.8004136856818007, 0.812177051021912, 0.7808349604279912, 0.8049337749084312, 0.8423440242410448, 0.853322168927557, 0.8064225489673591, 0.6457670552932678, 0.8418480601505731, 0.8205354177371355, 0.8502104003303523, 0.8612730266518819, 0.7334971171458271, 0.8624776235353192, 0.8424720164771047, 0.6856414546665894, 0.7168041175771533, 0.8402327080120091, 0.8623762050261696, 0.8561201636147919, 0.8362974632826636, 0.8591426518610836, 0.8400342446960124, 0.8619093189073741, 0.841942137722541, 0.8641168205800189, 0.8616848572128173, 0.851408894369435, 0.8169380461961003, 0.8602056117258536, 0.8637956172279461, 0.8660401500696062, 0.8578555573286893, 0.861200717647321, 0.8629044559043691, 0.8526151707521216, 0.8621044690743946, 0.8316644182503478, 0.8550437129593623, 0.8377909613865953, 0.8567560234059233, 0.6457670552932678, 0.8623661897501556, 0.8667841743933025, 0.8660992887810076]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"f1_score_weighted_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8659221752333192, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8660401500696062, 0.8667841743933025, 0.8667841743933025]}], \"precision_score_macro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"precision_score_macro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8372032804339561, 0.8361462778756132, 0.8075036382581497, 0.7822395028988136, 0.7154220339629989, 0.7087407701495405, 0.8390616414651401, 0.8376358159481363, 0.8377158968640843, 0.8355011525565802, 0.8355026724460007, 0.8070823026059925, 0.7723231679770169, 0.8257932950777747, 0.8046363165944683, 0.773037207993109, 0.8130523668870759, 0.8210070739583009, 0.8010076657055272, 0.7750271710771566, 0.7827980695355649, 0.7717939127276532, 0.8231325859743792, 0.8330832133136582, 0.7740386536511261, 0.37607794117035837, 0.8047051369469903, 0.7876514355888624, 0.8350769926297449, 0.8354444416147423, 0.8144323268340934, 0.8312912273696658, 0.81886475265719, 0.8780062490328883, 0.8130781947271604, 0.8112957477686862, 0.8364012323935576, 0.8364532943567589, 0.8055212408958619, 0.8329430130935865, 0.807697925193079, 0.83325291474362, 0.8048367098359887, 0.8372992637032617, 0.8349458067488078, 0.8327507427197706, 0.7569333386614968, 0.8269334116554505, 0.8332067739483099, 0.8361600124485593, 0.8253897322400364, 0.8302300359307463, 0.8335994853711105, 0.8253465687761622, 0.8325664144369449, 0.7994765455586389, 0.8211645001378178, 0.7934352993475873, 0.8349412045958186, 0.37607794117035837, 0.8347469038361253, 0.8394515939624739, 0.8376441004501292]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"precision_score_macro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8372032804339561, 0.8372032804339561, 0.8372032804339561, 0.8372032804339561, 0.8372032804339561, 0.8372032804339561, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8390616414651401, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883, 0.8780062490328883]}], \"f1_score_macro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"f1_score_macro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8153371110609997, 0.7962450703537736, 0.7422450667646949, 0.6268155205952584, 0.7164262626368443, 0.7054625719768023, 0.8082742828406257, 0.8035649688894247, 0.80911205033402, 0.7868768359773, 0.7987669888914525, 0.7619185245344953, 0.7106365406004013, 0.65820756347025, 0.7808865327294008, 0.7059193361156133, 0.717606872896089, 0.7506175010602834, 0.708846181490352, 0.7353659560854654, 0.6766201555703276, 0.7227204776605329, 0.778010660476185, 0.7948322903068608, 0.7248958546656968, 0.42927235469408276, 0.7813731776486825, 0.7473492481293496, 0.7891962963460089, 0.8078619976796565, 0.5887160597368336, 0.8108059344842673, 0.7790585486167488, 0.5008419752072601, 0.5588647942260991, 0.7768313098957039, 0.8095096978413195, 0.7989327053261649, 0.7712577087613118, 0.8047637301730376, 0.7773434056756855, 0.809379620812664, 0.7815004292570726, 0.812239343076364, 0.8086367713965119, 0.7916426586250183, 0.7722278397174036, 0.8079074138293165, 0.8126109431921232, 0.815753944537744, 0.80423919197258, 0.8088659820139726, 0.810998878561308, 0.7951854850195706, 0.8099113564330394, 0.7644918937810663, 0.8004118467082597, 0.7774888122792384, 0.8003056901659459, 0.42927235469408276, 0.8098272362577594, 0.8163162415206591, 0.8155563861696354]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"f1_score_macro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.8153371110609997, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.815753944537744, 0.8163162415206591, 0.8163162415206591]}], \"norm_macro_recall\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"norm_macro_recall\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.5985302138855063, 0.5446420269557863, 0.4297844785103636, 0.23525800795644317, 0.5674297905200295, 0.552911850892718, 0.575549212164779, 0.5634814291055636, 0.5793641267583663, 0.5205919236261745, 0.5519908311567301, 0.47584160839798634, 0.37321327509324675, 0.2711416454751659, 0.5290670752243665, 0.3629296498842821, 0.3760764270827876, 0.4420234667218752, 0.36146369453561616, 0.4290965840391204, 0.3047268574355574, 0.40037622626194, 0.5060860401641347, 0.5432057017767982, 0.4043158667071272, 0.0, 0.5304596488528869, 0.45125351398451885, 0.5268255639022513, 0.5778938895801022, 0.17246987231873248, 0.5911980365668235, 0.511850396869654, 0.07186626962743894, 0.1368186340297751, 0.5116795541987071, 0.5817577239443119, 0.5517027974758982, 0.501123526633715, 0.5712604294574493, 0.5160172566244784, 0.584617074013468, 0.5306826126883453, 0.5889959732389739, 0.5806075228045868, 0.534884756216538, 0.637377510532658, 0.5871754116882117, 0.5945728697691876, 0.6009780747378961, 0.577520702603931, 0.5863608937355507, 0.589160449237276, 0.5507559806816197, 0.5870115670460763, 0.48755213480457077, 0.5703819910555167, 0.530858866709502, 0.5567376112596969, 0.0, 0.5843685340125656, 0.5990469630653633, 0.5987537852609122]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"norm_macro_recall_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.5985302138855063, 0.637377510532658, 0.637377510532658, 0.637377510532658, 0.637377510532658, 0.637377510532658, 0.637377510532658, 0.637377510532658, 0.637377510532658, 0.637377510532658, 0.637377510532658, 0.637377510532658, 0.637377510532658, 0.637377510532658, 0.637377510532658, 0.637377510532658, 0.637377510532658, 0.637377510532658]}], \"precision_score_micro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"precision_score_micro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.861748880053025, 0.8347709973401948, 0.7967587855601348, 0.745323092141631, 0.7329178839206103, 0.8673654749496901, 0.8650657543282654, 0.8673654798394874, 0.8577905450388238, 0.8625669260459705, 0.841183631696547, 0.8154438212397641, 0.8105124018709343, 0.8469329919276779, 0.8144266284675693, 0.8274512444412172, 0.8406749020634701, 0.8221218933588972, 0.8230285327013759, 0.8086550905602705, 0.8185617174337658, 0.8513113067519056, 0.8603777637440592, 0.8198664694122391, 0.7521558823407167, 0.8471320213517893, 0.8307019059696847, 0.8586087157216031, 0.866237704298792, 0.7891953080437901, 0.8662820327572419, 0.850603765290702, 0.7698463796795666, 0.7813449827866907, 0.847640587176653, 0.8671886256466452, 0.8628765284589877, 0.8439697820299455, 0.8643138819637134, 0.8467339356096808, 0.8662819960837613, 0.8472204826767923, 0.8685596832780419, 0.866436772841283, 0.8590288471153495, 0.8067312462211035, 0.8638717049183295, 0.8675645214880925, 0.8696874099207633, 0.8619699037859012, 0.8651984169769854, 0.8670338782279081, 0.8584760579626807, 0.8662597890688091, 0.8398124713794045, 0.8592057502061661, 0.8417584249375756, 0.8630534046559184, 0.7521558823407167, 0.866879106360184, 0.8708151732369652, 0.8699969829949961]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"precision_score_micro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8708151732369652, 0.8708151732369652]}], \"recall_score_macro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"recall_score_macro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.7992651069427531, 0.7723210134778931, 0.7148922392551817, 0.6176290039782215, 0.7837148952600147, 0.776455925446359, 0.7877746060823896, 0.7817407145527818, 0.7896820633791831, 0.7602959618130872, 0.7759954155783649, 0.7379208041989932, 0.6866066375466234, 0.6355708227375829, 0.7645335376121832, 0.6814648249421411, 0.6880382135413938, 0.7210117333609376, 0.6807318472678081, 0.7145482920195602, 0.6523634287177786, 0.70018811313097, 0.7530430200820675, 0.7716028508883991, 0.7021579333535636, 0.5, 0.7652298244264435, 0.7256267569922594, 0.7634127819511256, 0.7889469447900511, 0.5862349361593662, 0.7955990182834117, 0.755925198434827, 0.5359331348137195, 0.5684093170148876, 0.7558397770993536, 0.7908788619721558, 0.7758513987379491, 0.7505617633168574, 0.7856302147287246, 0.7580086283122391, 0.7923085370067339, 0.7653413063441725, 0.794497986619487, 0.7903037614022935, 0.767442378108269, 0.818688755266329, 0.7935877058441059, 0.7972864348845938, 0.800489037368948, 0.7887603513019654, 0.7931804468677753, 0.794580224618638, 0.7753779903408098, 0.7935057835230381, 0.7437760674022854, 0.7851909955277584, 0.765429433354751, 0.7783688056298483, 0.5, 0.7921842670062829, 0.7995234815326817, 0.7993768926304561]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"recall_score_macro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329]}], \"weighted_accuracy\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"weighted_accuracy\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.911716660903056, 0.9148887323854231, 0.9059586570203247, 0.9031672551022701, 0.7225041245858733, 0.707031865457715, 0.9146744160690439, 0.9145882843528307, 0.9135387373333496, 0.9157225634655196, 0.9140239192661642, 0.9025756378161012, 0.8919972473685609, 0.9144827965438278, 0.8959153368307196, 0.8934286895205282, 0.9103153231127911, 0.9118035424611282, 0.9061808425384446, 0.8874980792609058, 0.901550852378619, 0.8889281648680875, 0.9097048964297002, 0.9131316037663602, 0.8898120761692052, 0.9020238243834158, 0.8958173645888883, 0.8931595053058359, 0.9151733341569134, 0.9121839463921806, 0.9098411656315795, 0.9082951129763652, 0.9068671516276403, 0.9088736647241253, 0.9079147539521066, 0.9022057734340583, 0.9125459286521943, 0.9145953865196645, 0.899489628924633, 0.9110862740441465, 0.8994663327120238, 0.9102509922082949, 0.8958899333305863, 0.9125677135825813, 0.9116844932179784, 0.9134525653758858, 0.7996296213825372, 0.9056404891753468, 0.9093367659105782, 0.910806459160673, 0.9054863972898228, 0.9080075818843296, 0.9101023013871152, 0.9078633552523684, 0.9095078981153811, 0.8968771961222759, 0.9032009370067134, 0.8871396482586867, 0.913394411407614, 0.9020238243834158, 0.9112721983256208, 0.9131850705583517, 0.9119705460950419]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"weighted_accuracy_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.911716660903056, 0.9148887323854231, 0.9148887323854231, 0.9148887323854231, 0.9148887323854231, 0.9148887323854231, 0.9148887323854231, 0.9148887323854231, 0.9148887323854231, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196, 0.9157225634655196]}], \"f1_score_micro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"f1_score_micro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.861748880053025, 0.8347709973401948, 0.7967587855601348, 0.745323092141631, 0.7329178839206103, 0.8673654749496901, 0.8650657543282654, 0.8673654798394876, 0.8577905450388238, 0.8625669260459705, 0.841183631696547, 0.8154438212397641, 0.8105124018709343, 0.8469329919276779, 0.8144266284675693, 0.8274512444412172, 0.8406749020634698, 0.8221218933588972, 0.8230285327013759, 0.8086550905602706, 0.8185617174337658, 0.8513113067519056, 0.8603777637440592, 0.8198664694122391, 0.7521558823407167, 0.8471320213517893, 0.8307019059696847, 0.8586087157216034, 0.866237704298792, 0.7891953080437901, 0.8662820327572419, 0.850603765290702, 0.7698463796795666, 0.7813449827866907, 0.847640587176653, 0.8671886256466452, 0.8628765284589877, 0.8439697820299455, 0.8643138819637134, 0.8467339356096808, 0.8662819960837613, 0.8472204826767923, 0.8685596832780419, 0.866436772841283, 0.8590288471153495, 0.8067312462211035, 0.8638717049183295, 0.8675645214880925, 0.8696874099207633, 0.8619699037859011, 0.8651984169769854, 0.8670338782279081, 0.8584760579626807, 0.8662597890688091, 0.8398124713794045, 0.8592057502061661, 0.8417584249375756, 0.8630534046559184, 0.7521558823407167, 0.866879106360184, 0.8708151732369652, 0.8699969829949961]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"f1_score_micro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8708151732369652, 0.8708151732369652]}], \"balanced_accuracy\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"balanced_accuracy\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.7992651069427531, 0.7723210134778931, 0.7148922392551817, 0.6176290039782215, 0.7837148952600147, 0.776455925446359, 0.7877746060823896, 0.7817407145527818, 0.7896820633791831, 0.7602959618130872, 0.7759954155783649, 0.7379208041989932, 0.6866066375466234, 0.6355708227375829, 0.7645335376121832, 0.6814648249421411, 0.6880382135413938, 0.7210117333609376, 0.6807318472678081, 0.7145482920195602, 0.6523634287177786, 0.70018811313097, 0.7530430200820675, 0.7716028508883991, 0.7021579333535636, 0.5, 0.7652298244264435, 0.7256267569922594, 0.7634127819511256, 0.7889469447900511, 0.5862349361593662, 0.7955990182834117, 0.755925198434827, 0.5359331348137195, 0.5684093170148876, 0.7558397770993536, 0.7908788619721558, 0.7758513987379491, 0.7505617633168574, 0.7856302147287246, 0.7580086283122391, 0.7923085370067339, 0.7653413063441725, 0.794497986619487, 0.7903037614022935, 0.767442378108269, 0.818688755266329, 0.7935877058441059, 0.7972864348845938, 0.800489037368948, 0.7887603513019654, 0.7931804468677753, 0.794580224618638, 0.7753779903408098, 0.7935057835230381, 0.7437760674022854, 0.7851909955277584, 0.765429433354751, 0.7783688056298483, 0.5, 0.7921842670062829, 0.7995234815326817, 0.7993768926304561]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"balanced_accuracy_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.7992651069427531, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329, 0.818688755266329]}], \"recall_score_weighted\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"recall_score_weighted\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.861748880053025, 0.8347709973401948, 0.7967587855601348, 0.745323092141631, 0.7329178839206103, 0.8673654749496901, 0.8650657543282654, 0.8673654798394874, 0.8577905450388238, 0.8625669260459705, 0.841183631696547, 0.8154438212397641, 0.8105124018709343, 0.8469329919276779, 0.8144266284675693, 0.8274512444412172, 0.8406749020634701, 0.8221218933588972, 0.8230285327013759, 0.8086550905602705, 0.8185617174337658, 0.8513113067519056, 0.8603777637440592, 0.8198664694122391, 0.7521558823407167, 0.8471320213517893, 0.8307019059696847, 0.8586087157216031, 0.866237704298792, 0.7891953080437901, 0.8662820327572419, 0.850603765290702, 0.7698463796795666, 0.7813449827866907, 0.847640587176653, 0.8671886256466452, 0.8628765284589877, 0.8439697820299455, 0.8643138819637134, 0.8467339356096808, 0.8662819960837613, 0.8472204826767923, 0.8685596832780419, 0.866436772841283, 0.8590288471153495, 0.8067312462211035, 0.8638717049183295, 0.8675645214880925, 0.8696874099207633, 0.8619699037859012, 0.8651984169769854, 0.8670338782279081, 0.8584760579626807, 0.8662597890688091, 0.8398124713794045, 0.8592057502061661, 0.8417584249375756, 0.8630534046559184, 0.7521558823407167, 0.866879106360184, 0.8708151732369652, 0.8699969829949961]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"recall_score_weighted_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8708151732369652, 0.8708151732369652]}], \"average_precision_score_micro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"average_precision_score_micro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9521538878137544, 0.9471828494064807, 0.9222157942159571, 0.8969476017125224, 0.8751452952219576, 0.8634112860012909, 0.9493902059982068, 0.9476744978825883, 0.9492044014103485, 0.9414035869944183, 0.9460469952629763, 0.9301593274859126, 0.890359169665774, 0.89885413129719, 0.9350518114119405, 0.9005574631652411, 0.9158055245238688, 0.9288886730697467, 0.9151203773921708, 0.9126811778288706, 0.9007558004670937, 0.9078299550912703, 0.9343816994351988, 0.9446746020267718, 0.9031841159014375, 0.9008270158037218, 0.9351872190677814, 0.9216357198410986, 0.942549690678159, 0.9489520009689276, 0.8963788145725552, 0.9495596458930435, 0.939063575214405, 0.9023819020937562, 0.8970759025525041, 0.9360886375509014, 0.9498822777649997, 0.9459013955146551, 0.9332328631977553, 0.9485573614571157, 0.9356199138637349, 0.950128064496834, 0.9352204788142677, 0.9514210558707352, 0.9487654500112935, 0.9450039819785679, 0.9038510177241136, 0.9479461925298555, 0.9509238897516001, 0.952405170970208, 0.9476862571448279, 0.949060391133942, 0.95044109461305, 0.9440345754343754, 0.9487901967067323, 0.929167025333227, 0.9445153868986491, 0.9329812923960062, 0.9463897446157408, 0.894116340008595, 0.9493208624196428, 0.9524790796804752, 0.9526419746400949]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"average_precision_score_micro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.9521538878137544, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.952405170970208, 0.9524790796804752, 0.9526419746400949]}], \"AUC_micro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"AUC_micro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9502846739450476, 0.9451870817634556, 0.9196864500471049, 0.8925561233577641, 0.8673093619728963, 0.855321751847371, 0.9477386372369411, 0.9463537070187373, 0.9475517949117458, 0.9403996742992977, 0.9444299637974674, 0.927907689251934, 0.8977125352953698, 0.905830794571038, 0.9328701570800245, 0.8969708344338188, 0.913078151581001, 0.9271724930535011, 0.9113913808224912, 0.9096550942135387, 0.8967856431735053, 0.905359892616017, 0.9331118161972431, 0.9431797926469334, 0.8998818723249732, 0.8947901968920202, 0.9332065141219325, 0.9187976608004436, 0.9413587972745459, 0.9472693348868129, 0.8907096558048035, 0.9477723468560061, 0.9369851030699408, 0.8963616993026292, 0.8912071840687688, 0.9336460899503743, 0.9482514907932396, 0.9442617671919127, 0.9308211926167225, 0.9468471446598562, 0.9333046244980974, 0.9483712132694316, 0.933182475241912, 0.9495257437646168, 0.9471220016243278, 0.9431650536558159, 0.9009212737252476, 0.9461595872604356, 0.949169356240829, 0.950469956393569, 0.9456054115320942, 0.947232995153452, 0.9487402036741341, 0.9421636117916121, 0.9468849955589095, 0.9265434996970561, 0.942521614862413, 0.9301281643297145, 0.9446913927881215, 0.887380899861063, 0.947703865347834, 0.9506238465213214, 0.9507137007677995]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"AUC_micro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.9502846739450476, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.950469956393569, 0.9506238465213214, 0.9507137007677995]}], \"average_precision_score_macro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"average_precision_score_macro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9031958892227223, 0.8940978845437929, 0.8492590840683427, 0.7971452161403134, 0.8388513427465117, 0.8186508987021093, 0.8987750954911504, 0.8958268673866095, 0.8981803663583495, 0.8849115312385043, 0.8929316064848516, 0.8617821179778231, 0.7677083567065647, 0.8109870984651781, 0.8661281722321377, 0.788649309512418, 0.843789631237368, 0.8621149695619345, 0.837184829544927, 0.8249567864366869, 0.801552360465484, 0.8024018288306827, 0.8724624557178245, 0.8901690020125816, 0.7897927289273098, 0.8470698911402875, 0.86731154629333, 0.8360650514841603, 0.8868267736873345, 0.8974777580072244, 0.8138728603233769, 0.898493894476885, 0.8773473326902202, 0.8393532909429771, 0.8148731189229595, 0.8691662614922502, 0.8994100992094017, 0.8925743465410308, 0.8607482901564376, 0.8966852093532927, 0.8657589155169276, 0.8995561176593523, 0.8672376454715067, 0.9019341295349952, 0.8971858867913605, 0.890539065331312, 0.8664897820687578, 0.8957125855930208, 0.9011424145130631, 0.9035391718139092, 0.8941537355674238, 0.8971807800806151, 0.9003044892450708, 0.8885160506949061, 0.8966380389223497, 0.8573418669907097, 0.8886771700749515, 0.8637670727886156, 0.8931582968989696, 0.8037855649903435, 0.8984405236218078, 0.9039035779066011, 0.9040303868834425]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"average_precision_score_macro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9031958892227223, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9035391718139092, 0.9039035779066011, 0.9040303868834425]}], \"AUC_macro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"AUC_macro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9274889336889851, 0.9198681527105748, 0.8910080620214991, 0.8572818916353782, 0.8803481642518622, 0.8666794938301614, 0.923432811339947, 0.9212446923067432, 0.9232109888689504, 0.9117609728434518, 0.9181889589437876, 0.8979299263535226, 0.8496704907717263, 0.8607520430362383, 0.9037850235980995, 0.8520979116231258, 0.8849731960134426, 0.8973670406394494, 0.8838588806516352, 0.8699603379075459, 0.8595056293929091, 0.862183111217868, 0.9004244656083085, 0.9158045356357232, 0.8547724939213562, 0.8826047313560522, 0.9040135316429208, 0.8842498733431418, 0.9137603718167838, 0.9230507980831162, 0.8650204278964099, 0.9234728103201931, 0.9084072848812482, 0.8836832961810511, 0.8665273129278713, 0.9042612166875118, 0.9243141294250273, 0.9178495119338459, 0.9013052153600162, 0.9225355643714959, 0.9049853720879548, 0.9245445543572159, 0.9040086570069915, 0.9264051452549438, 0.9227996063907685, 0.9170185292387523, 0.903996076770009, 0.9210202352053629, 0.9258434035995098, 0.9278588650478238, 0.9207587216436917, 0.9231773573302293, 0.9249403384121633, 0.9145899316886821, 0.9226320417429346, 0.8951091782801033, 0.9158364619067495, 0.8992181921572577, 0.9185837565573027, 0.8627287993601515, 0.9234333123679888, 0.9280465516671436, 0.9281984183979757]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"AUC_macro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9274889336889851, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9278588650478238, 0.9280465516671436, 0.9281984183979757]}], \"log_loss\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"log_loss\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.28275920092224316, 0.2993455196460976, 0.37096142587069525, 0.42123457875079795, 0.48608712026289663, 0.5015506367056852, 0.29125058943791216, 0.30952412558985276, 0.2914830144767442, 0.40627983365101494, 0.30157352330205517, 0.34865658139458994, 0.3962422421136738, 0.46047770283587175, 0.32746378371143425, 0.407689946088165, 0.3922413438300889, 0.3520785054443838, 0.39457065308252953, 0.3819084415628577, 0.416218256366543, 0.38823922718787823, 0.3472630171811474, 0.31752220720492697, 0.3999416472073599, 0.5179601118424125, 0.3270580599035989, 0.3618595196484336, 0.32539501434163326, 0.2921051217103498, 0.44154720044281337, 0.2910856215146304, 0.3223622088229411, 0.4424501739239256, 0.42576710180272104, 0.326269083542711, 0.2890461497538142, 0.30182487513616485, 0.3330661475211599, 0.29462838433904315, 0.3267484680808665, 0.28840452144764017, 0.3269834664312364, 0.2855719877557131, 0.29230523011153875, 0.3060190564452737, 0.3952266225446659, 0.2957151864415294, 0.2860269396189872, 0.28192824191741606, 0.2955338310709662, 0.29134857085015714, 0.28733354701695896, 0.30555631339270634, 0.2923401051902764, 0.3467952455556989, 0.30488804436811606, 0.34205373935182565, 0.30019354803612086, 0.5594573049800822, 0.2906067229193754, 0.2820322945955324, 0.2983373205917036]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"log_loss_min\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28275920092224316, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606, 0.28192824191741606]}], \"recall_score_micro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"markers\", \"name\": \"recall_score_micro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.861748880053025, 0.8347709973401948, 0.7967587855601348, 0.745323092141631, 0.7329178839206103, 0.8673654749496901, 0.8650657543282654, 0.8673654798394874, 0.8577905450388238, 0.8625669260459705, 0.841183631696547, 0.8154438212397641, 0.8105124018709343, 0.8469329919276779, 0.8144266284675693, 0.8274512444412172, 0.8406749020634701, 0.8221218933588972, 0.8230285327013759, 0.8086550905602705, 0.8185617174337658, 0.8513113067519056, 0.8603777637440592, 0.8198664694122391, 0.7521558823407167, 0.8471320213517893, 0.8307019059696847, 0.8586087157216031, 0.866237704298792, 0.7891953080437901, 0.8662820327572419, 0.850603765290702, 0.7698463796795666, 0.7813449827866907, 0.847640587176653, 0.8671886256466452, 0.8628765284589877, 0.8439697820299455, 0.8643138819637134, 0.8467339356096808, 0.8662819960837613, 0.8472204826767923, 0.8685596832780419, 0.866436772841283, 0.8590288471153495, 0.8067312462211035, 0.8638717049183295, 0.8675645214880925, 0.8696874099207633, 0.8619699037859012, 0.8651984169769854, 0.8670338782279081, 0.8584760579626807, 0.8662597890688091, 0.8398124713794045, 0.8592057502061661, 0.8417584249375756, 0.8630534046559184, 0.7521558823407167, 0.866879106360184, 0.8708151732369652, 0.8699969829949961]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"62\", \"65\", \"66\"], \"mode\": \"lines\", \"name\": \"recall_score_micro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8697979633504793, 0.8708151732369652, 0.8708151732369652]}]}, \"metricName\": null, \"primaryMetricName\": \"accuracy\", \"showLegend\": false}, \"run_metrics\": [{\"name\": \"experiment_status\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], \"series\": [{\"data\": [\"DatasetEvaluation\", \"FeaturesGeneration\", \"DatasetFeaturization\", \"DatasetFeaturizationCompleted\", \"DatasetCrossValidationSplit\", \"ModelSelection\", \"BestRunExplainModel\", \"ModelExplanationDataSetSetup\", \"PickSurrogateModel\", \"EngineeredFeatureExplanations\", \"EngineeredFeatureExplanations\", \"RawFeaturesExplanations\", \"RawFeaturesExplanations\", \"BestRunExplainModel\"]}]}, {\"name\": \"experiment_status_description\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], \"series\": [{\"data\": [\"Gathering dataset statistics.\", \"Generating features for the dataset.\", \"Beginning to fit featurizers and featurize the dataset.\", \"Completed fit featurizers and featurizing the dataset.\", \"Generating individually featurized CV splits.\", \"Beginning model selection.\", \"Best run model explanations started\", \"Model explanations data setup completed\", \"Choosing LightGBM as the surrogate model for explanations\", \"Computation of engineered features started\", \"Computation of engineered features completed\", \"Computation of raw features started\", \"Computation of raw features completed\", \"Best run model explanations completed\"]}]}, {\"name\": \"precision_score_weighted\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.8665346318873457]}]}, {\"name\": \"balanced_accuracy\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.7995234815326817]}]}, {\"name\": \"weighted_accuracy\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.9131850705583517]}]}, {\"name\": \"accuracy\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.8708151732369652]}]}, {\"name\": \"recall_score_micro\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.8708151732369652]}]}, {\"name\": \"AUC_micro\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.9506238465213214]}]}, {\"name\": \"matthews_correlation\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.6377094958625198]}]}, {\"name\": \"AUC_weighted\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.9280465516671436]}]}, {\"name\": \"average_precision_score_weighted\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.9395023546455479]}]}, {\"name\": \"average_precision_score_macro\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.9039035779066011]}]}, {\"name\": \"f1_score_weighted\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.8667841743933025]}]}, {\"name\": \"average_precision_score_micro\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.9524790796804752]}]}, {\"name\": \"recall_score_macro\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.7995234815326817]}]}, {\"name\": \"precision_score_macro\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.8394515939624739]}]}, {\"name\": \"recall_score_weighted\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.8708151732369652]}]}, {\"name\": \"AUC_macro\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.9280465516671436]}]}, {\"name\": \"norm_macro_recall\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.5990469630653633]}]}, {\"name\": \"precision_score_micro\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.8708151732369652]}]}, {\"name\": \"log_loss\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.2820322945955324]}]}, {\"name\": \"f1_score_macro\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.8163162415206591]}]}, {\"name\": \"f1_score_micro\", \"run_id\": \"AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420\", \"categories\": [0], \"series\": [{\"data\": [0.8708151732369652]}]}], \"run_logs\": \"\\nRun is completed.\", \"graph\": {}, \"widget_settings\": {\"childWidgetDisplay\": \"popup\", \"send_telemetry\": false, \"log_level\": \"INFO\", \"sdk_version\": \"1.31.0\"}, \"loading\": false}"
          },
          "metadata": {}
        }
      ],
      "execution_count": 7,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1626665506341
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "automl_run.wait_for_completion(show_output=True)"
      ],
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<IPython.core.display.HTML object>",
            "text/html": "<table style=\"width:100%\"><tr><th>Experiment</th><th>Id</th><th>Type</th><th>Status</th><th>Details Page</th><th>Docs Page</th></tr><tr><td>capstone</td><td>AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420</td><td>automl</td><td>Completed</td><td><a href=\"https://ml.azure.com/runs/AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420?wsid=/subscriptions/653662f1-95de-4498-b876-1fd625bf5d18/resourcegroups/udacitycapstone/workspaces/udacityws&amp;tid=60e63508-9cfd-4013-9a1f-7610707b07ce\" target=\"_blank\" rel=\"noopener\">Link to Azure Machine Learning studio</a></td><td><a href=\"https://docs.microsoft.com/en-us/python/api/overview/azure/ml/intro?view=azure-ml-py\" target=\"_blank\" rel=\"noopener\">Link to Documentation</a></td></tr></table>"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "\n",
            "****************************************************************************************************\n",
            "DATA GUARDRAILS: \n",
            "\n",
            "TYPE:         Class balancing detection\n",
            "STATUS:       PASSED\n",
            "DESCRIPTION:  Your inputs were analyzed, and all classes are balanced in your training data.\n",
            "              Learn more about imbalanced data: https://aka.ms/AutomatedMLImbalancedData\n",
            "\n",
            "****************************************************************************************************\n",
            "\n",
            "TYPE:         Missing feature values imputation\n",
            "STATUS:       PASSED\n",
            "DESCRIPTION:  No feature missing values were detected in the training data.\n",
            "              Learn more about missing value imputation: https://aka.ms/AutomatedMLFeaturization\n",
            "\n",
            "****************************************************************************************************\n",
            "\n",
            "TYPE:         High cardinality feature detection\n",
            "STATUS:       PASSED\n",
            "DESCRIPTION:  Your inputs were analyzed, and no high cardinality features were detected.\n",
            "              Learn more about high cardinality feature handling: https://aka.ms/AutomatedMLFeaturization\n",
            "\n",
            "****************************************************************************************************\n",
            "\n",
            "****************************************************************************************************\n",
            "ITERATION: The iteration being evaluated.\n",
            "PIPELINE: A summary description of the pipeline being evaluated.\n",
            "DURATION: Time taken for the current iteration.\n",
            "METRIC: The result of computing score on the fitted pipeline.\n",
            "BEST: The best observed score thus far.\n",
            "****************************************************************************************************\n",
            "\n",
            " ITERATION   PIPELINE                                       DURATION      METRIC      BEST\n",
            "         0   MaxAbsScaler LightGBM                          0:00:41       0.8698    0.8698\n",
            "         1   MaxAbsScaler XGBoostClassifier                 0:01:38       0.8617    0.8698\n",
            "         2   MaxAbsScaler RandomForest                      0:00:54       0.8348    0.8698\n",
            "         3   MaxAbsScaler RandomForest                      0:00:37       0.7968    0.8698\n",
            "         4   MaxAbsScaler RandomForest                      0:01:37       0.7453    0.8698\n",
            "         5   MaxAbsScaler RandomForest                      0:00:41       0.7329    0.8698\n",
            "         6   SparseNormalizer XGBoostClassifier             0:00:56       0.8674    0.8698\n",
            "         7   SparseNormalizer XGBoostClassifier             0:00:54       0.8651    0.8698\n",
            "         8   SparseNormalizer XGBoostClassifier             0:01:06       0.8674    0.8698\n",
            "         9   SparseNormalizer XGBoostClassifier             0:00:42       0.8578    0.8698\n",
            "        10   SparseNormalizer XGBoostClassifier             0:00:52       0.8626    0.8698\n",
            "        11   StandardScalerWrapper RandomForest             0:01:10       0.8412    0.8698\n",
            "        12   MaxAbsScaler RandomForest                      0:00:41       0.8154    0.8698\n",
            "        13   SparseNormalizer XGBoostClassifier             0:00:39       0.8105    0.8698\n",
            "        14   MaxAbsScaler LogisticRegression                0:00:36       0.8469    0.8698\n",
            "        15   MaxAbsScaler ExtremeRandomTrees                0:01:41       0.8144    0.8698\n",
            "        16   MaxAbsScaler LightGBM                          0:00:38       0.8275    0.8698\n",
            "        17   StandardScalerWrapper LightGBM                 0:00:36       0.8407    0.8698\n",
            "        18   MaxAbsScaler LightGBM                          0:00:40       0.8221    0.8698\n",
            "        19   SparseNormalizer LightGBM                      0:00:39       0.8230    0.8698\n",
            "        20   MaxAbsScaler LightGBM                          0:01:01       0.8087    0.8698\n",
            "        21   MaxAbsScaler LightGBM                          0:00:47       0.8186    0.8698\n",
            "        22   SparseNormalizer XGBoostClassifier             0:01:21       0.8513    0.8698\n",
            "        23   TruncatedSVDWrapper XGBoostClassifier          0:01:05       0.8604    0.8698\n",
            "        24   MaxAbsScaler ExtremeRandomTrees                0:02:12       0.8199    0.8698\n",
            "        25   SparseNormalizer LightGBM                      0:00:37       0.7522    0.8698\n",
            "        26   MaxAbsScaler LogisticRegression                0:01:15       0.8471    0.8698\n",
            "        27   MaxAbsScaler LightGBM                          0:00:39       0.8307    0.8698\n",
            "        28   SparseNormalizer XGBoostClassifier             0:00:46       0.8586    0.8698\n",
            "        29   SparseNormalizer XGBoostClassifier             0:00:57       0.8662    0.8698\n",
            "        30   SparseNormalizer LightGBM                      0:00:39       0.7892    0.8698\n",
            "        31   SparseNormalizer XGBoostClassifier             0:02:16       0.8663    0.8698\n",
            "        32   StandardScalerWrapper XGBoostClassifier        0:00:39       0.8506    0.8698\n",
            "        33   StandardScalerWrapper LightGBM                 0:00:39       0.7698    0.8698\n",
            "        34   MaxAbsScaler ExtremeRandomTrees                0:00:54       0.7813    0.8698\n",
            "        35   StandardScalerWrapper LightGBM                 0:00:47       0.8476    0.8698\n",
            "        36   SparseNormalizer XGBoostClassifier             0:01:16       0.8672    0.8698\n",
            "        37   SparseNormalizer XGBoostClassifier             0:00:49       0.8629    0.8698\n",
            "        38   MaxAbsScaler LightGBM                          0:00:40       0.8440    0.8698\n",
            "        39   SparseNormalizer XGBoostClassifier             0:01:33       0.8643    0.8698\n",
            "        40   MaxAbsScaler LightGBM                          0:00:48       0.8467    0.8698\n",
            "        41   SparseNormalizer XGBoostClassifier             0:01:30       0.8663    0.8698\n",
            "        42   StandardScalerWrapper LogisticRegression       0:01:31       0.8472    0.8698\n",
            "        43   StandardScalerWrapper XGBoostClassifier        0:00:46       0.8686    0.8698\n",
            "        44   SparseNormalizer XGBoostClassifier             0:01:11       0.8664    0.8698\n",
            "        45   SparseNormalizer LightGBM                      0:00:41       0.8590    0.8698\n",
            "        46   MaxAbsScaler LogisticRegression                0:00:47       0.8067    0.8698\n",
            "        47   SparseNormalizer XGBoostClassifier             0:02:26       0.8639    0.8698\n",
            "        48   SparseNormalizer XGBoostClassifier             0:02:29       0.8676    0.8698\n",
            "        49   StandardScalerWrapper XGBoostClassifier        0:01:42       0.8697    0.8698\n",
            "        50   SparseNormalizer LightGBM                      0:00:48       0.8620    0.8698\n",
            "        51   SparseNormalizer XGBoostClassifier             0:01:30       0.8652    0.8698\n",
            "        52   SparseNormalizer XGBoostClassifier             0:02:50       0.8670    0.8698\n",
            "        53   SparseNormalizer LightGBM                      0:01:10       0.8585    0.8698\n",
            "        54   SparseNormalizer XGBoostClassifier             0:01:13       0.8663    0.8698\n",
            "        55   SparseNormalizer LightGBM                      0:00:50       0.8398    0.8698\n",
            "        56   SparseNormalizer XGBoostClassifier             0:01:08       0.8592    0.8698\n",
            "        57   SparseNormalizer XGBoostClassifier             0:01:37       0.8418    0.8698\n",
            "        58   SparseNormalizer XGBoostClassifier             0:01:02       0.8631    0.8698\n",
            "        59   SparseNormalizer XGBoostClassifier             0:02:37          nan    0.8698\n",
            "ERROR: {\n",
            "    \"additional_properties\": {},\n",
            "    \"error\": {\n",
            "        \"additional_properties\": {\n",
            "            \"debugInfo\": null\n",
            "        },\n",
            "        \"code\": \"UserError\",\n",
            "        \"severity\": null,\n",
            "        \"message\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_format\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_parameters\": {},\n",
            "        \"reference_code\": null,\n",
            "        \"details_uri\": null,\n",
            "        \"target\": null,\n",
            "        \"details\": [],\n",
            "        \"inner_error\": {\n",
            "            \"additional_properties\": {},\n",
            "            \"code\": \"ResourceExhausted\",\n",
            "            \"inner_error\": {\n",
            "                \"additional_properties\": {},\n",
            "                \"code\": \"Timeout\",\n",
            "                \"inner_error\": {\n",
            "                    \"additional_properties\": {},\n",
            "                    \"code\": \"ExperimentTimeoutForIterations\",\n",
            "                    \"inner_error\": null\n",
            "                }\n",
            "            }\n",
            "        },\n",
            "        \"additional_info\": null\n",
            "    },\n",
            "    \"correlation\": null,\n",
            "    \"environment\": null,\n",
            "    \"location\": null,\n",
            "    \"time\": {},\n",
            "    \"component_name\": null\n",
            "}\n",
            "        60   MaxAbsScaler LightGBM                          0:00:40       0.7522    0.8698\n",
            "        61   SparseNormalizer XGBoostClassifier             0:02:01          nan    0.8698\n",
            "ERROR: {\n",
            "    \"additional_properties\": {},\n",
            "    \"error\": {\n",
            "        \"additional_properties\": {\n",
            "            \"debugInfo\": null\n",
            "        },\n",
            "        \"code\": \"UserError\",\n",
            "        \"severity\": null,\n",
            "        \"message\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_format\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_parameters\": {},\n",
            "        \"reference_code\": null,\n",
            "        \"details_uri\": null,\n",
            "        \"target\": null,\n",
            "        \"details\": [],\n",
            "        \"inner_error\": {\n",
            "            \"additional_properties\": {},\n",
            "            \"code\": \"ResourceExhausted\",\n",
            "            \"inner_error\": {\n",
            "                \"additional_properties\": {},\n",
            "                \"code\": \"Timeout\",\n",
            "                \"inner_error\": {\n",
            "                    \"additional_properties\": {},\n",
            "                    \"code\": \"ExperimentTimeoutForIterations\",\n",
            "                    \"inner_error\": null\n",
            "                }\n",
            "            }\n",
            "        },\n",
            "        \"additional_info\": null\n",
            "    },\n",
            "    \"correlation\": null,\n",
            "    \"environment\": null,\n",
            "    \"location\": null,\n",
            "    \"time\": {},\n",
            "    \"component_name\": null\n",
            "}\n",
            "        62   SparseNormalizer XGBoostClassifier             0:01:31       0.8669    0.8698\n",
            "        63                                                  0:02:14          nan    0.8698\n",
            "ERROR: {\n",
            "    \"additional_properties\": {},\n",
            "    \"error\": {\n",
            "        \"additional_properties\": {\n",
            "            \"debugInfo\": null\n",
            "        },\n",
            "        \"code\": \"UserError\",\n",
            "        \"severity\": null,\n",
            "        \"message\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_format\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_parameters\": {},\n",
            "        \"reference_code\": null,\n",
            "        \"details_uri\": null,\n",
            "        \"target\": null,\n",
            "        \"details\": [],\n",
            "        \"inner_error\": {\n",
            "            \"additional_properties\": {},\n",
            "            \"code\": \"ResourceExhausted\",\n",
            "            \"inner_error\": {\n",
            "                \"additional_properties\": {},\n",
            "                \"code\": \"Timeout\",\n",
            "                \"inner_error\": {\n",
            "                    \"additional_properties\": {},\n",
            "                    \"code\": \"ExperimentTimeoutForIterations\",\n",
            "                    \"inner_error\": null\n",
            "                }\n",
            "            }\n",
            "        },\n",
            "        \"additional_info\": null\n",
            "    },\n",
            "    \"correlation\": null,\n",
            "    \"environment\": null,\n",
            "    \"location\": null,\n",
            "    \"time\": {},\n",
            "    \"component_name\": null\n",
            "}\n",
            "        64                                                  0:01:49          nan    0.8698\n",
            "ERROR: {\n",
            "    \"additional_properties\": {},\n",
            "    \"error\": {\n",
            "        \"additional_properties\": {\n",
            "            \"debugInfo\": null\n",
            "        },\n",
            "        \"code\": \"UserError\",\n",
            "        \"severity\": null,\n",
            "        \"message\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_format\": \"Experiment timeout reached, please consider increasing your experiment timeout.\",\n",
            "        \"message_parameters\": {},\n",
            "        \"reference_code\": null,\n",
            "        \"details_uri\": null,\n",
            "        \"target\": null,\n",
            "        \"details\": [],\n",
            "        \"inner_error\": {\n",
            "            \"additional_properties\": {},\n",
            "            \"code\": \"ResourceExhausted\",\n",
            "            \"inner_error\": {\n",
            "                \"additional_properties\": {},\n",
            "                \"code\": \"Timeout\",\n",
            "                \"inner_error\": {\n",
            "                    \"additional_properties\": {},\n",
            "                    \"code\": \"ExperimentTimeoutForIterations\",\n",
            "                    \"inner_error\": null\n",
            "                }\n",
            "            }\n",
            "        },\n",
            "        \"additional_info\": null\n",
            "    },\n",
            "    \"correlation\": null,\n",
            "    \"environment\": null,\n",
            "    \"location\": null,\n",
            "    \"time\": {},\n",
            "    \"component_name\": null\n",
            "}\n",
            "        65    VotingEnsemble                                0:01:38       0.8708    0.8708\n",
            "        66    StackEnsemble                                 0:01:49       0.8700    0.8708\n"
          ]
        },
        {
          "output_type": "execute_result",
          "execution_count": 8,
          "data": {
            "text/plain": "{'runId': 'AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420',\n 'target': 'cpu-cluster',\n 'status': 'Completed',\n 'startTimeUtc': '2021-07-19T02:50:22.817563Z',\n 'endTimeUtc': '2021-07-19T03:31:16.886912Z',\n 'properties': {'num_iterations': '1000',\n  'training_type': 'TrainFull',\n  'acquisition_function': 'EI',\n  'primary_metric': 'accuracy',\n  'train_split': '0',\n  'acquisition_parameter': '0',\n  'num_cross_validation': '5',\n  'target': 'cpu-cluster',\n  'AMLSettingsJsonString': '{\"path\":null,\"name\":\"capstone\",\"subscription_id\":\"653662f1-95de-4498-b876-1fd625bf5d18\",\"resource_group\":\"udacitycapstone\",\"workspace_name\":\"udacityws\",\"region\":\"japaneast\",\"compute_target\":\"cpu-cluster\",\"spark_service\":null,\"azure_service\":\"remote\",\"many_models\":false,\"pipeline_fetch_max_batch_size\":1,\"enable_batch_run\":false,\"enable_run_restructure\":false,\"start_auxiliary_runs_before_parent_complete\":false,\"enable_code_generation\":false,\"iterations\":1000,\"primary_metric\":\"accuracy\",\"task_type\":\"classification\",\"data_script\":null,\"test_size\":0.0,\"validation_size\":0.0,\"n_cross_validations\":5,\"y_min\":null,\"y_max\":null,\"num_classes\":null,\"featurization\":\"auto\",\"_ignore_package_version_incompatibilities\":false,\"is_timeseries\":false,\"max_cores_per_iteration\":1,\"max_concurrent_iterations\":5,\"iteration_timeout_minutes\":null,\"mem_in_mb\":null,\"enforce_time_on_windows\":false,\"experiment_timeout_minutes\":30,\"experiment_exit_score\":null,\"whitelist_models\":null,\"blacklist_algos\":[\"TensorFlowLinearClassifier\",\"TensorFlowDNN\"],\"supported_models\":[\"TensorFlowLinearClassifier\",\"TensorFlowDNN\",\"KNN\",\"LogisticRegression\",\"GradientBoosting\",\"MultinomialNaiveBayes\",\"BernoulliNaiveBayes\",\"RandomForest\",\"SVM\",\"LinearSVM\",\"LightGBM\",\"XGBoostClassifier\",\"AveragedPerceptronClassifier\",\"SGD\",\"DecisionTree\",\"ExtremeRandomTrees\"],\"private_models\":[],\"auto_blacklist\":true,\"blacklist_samples_reached\":false,\"exclude_nan_labels\":true,\"verbosity\":20,\"_debug_log\":\"azureml_automl.log\",\"show_warnings\":false,\"model_explainability\":true,\"service_url\":null,\"sdk_url\":null,\"sdk_packages\":null,\"enable_onnx_compatible_models\":false,\"enable_split_onnx_featurizer_estimator_models\":false,\"vm_type\":\"STANDARD_D2_V2\",\"telemetry_verbosity\":20,\"send_telemetry\":true,\"enable_dnn\":false,\"scenario\":\"SDK-1.13.0\",\"environment_label\":null,\"save_mlflow\":false,\"force_text_dnn\":false,\"enable_feature_sweeping\":true,\"enable_early_stopping\":false,\"early_stopping_n_iters\":10,\"metrics\":null,\"enable_metric_confidence\":false,\"enable_ensembling\":true,\"enable_stack_ensembling\":true,\"ensemble_iterations\":15,\"enable_tf\":false,\"enable_subsampling\":null,\"subsample_seed\":null,\"enable_nimbusml\":false,\"enable_streaming\":false,\"force_streaming\":false,\"track_child_runs\":true,\"allowed_private_models\":[],\"label_column_name\":\"income\",\"weight_column_name\":null,\"cv_split_column_names\":null,\"enable_local_managed\":false,\"_local_managed_run_id\":null,\"cost_mode\":1,\"lag_length\":0,\"metric_operation\":\"maximize\",\"preprocess\":true}',\n  'DataPrepJsonString': '{\\\\\"training_data\\\\\": {\\\\\"datasetId\\\\\": \\\\\"fa0687fd-3726-4831-863a-18a8ccfd8f14\\\\\"}, \\\\\"datasets\\\\\": 0}',\n  'EnableSubsampling': None,\n  'runTemplate': 'AutoML',\n  'azureml.runsource': 'automl',\n  'display_task_type': 'classification',\n  'dependencies_versions': '{\"azureml-widgets\": \"1.31.0\", \"azureml-train\": \"1.31.0\", \"azureml-train-restclients-hyperdrive\": \"1.31.0\", \"azureml-train-core\": \"1.31.0\", \"azureml-train-automl\": \"1.31.0\", \"azureml-train-automl-runtime\": \"1.31.0\", \"azureml-train-automl-client\": \"1.31.0\", \"azureml-tensorboard\": \"1.31.0\", \"azureml-telemetry\": \"1.31.0\", \"azureml-sdk\": \"1.31.0\", \"azureml-samples\": \"0+unknown\", \"azureml-responsibleai\": \"1.31.0\", \"azureml-pipeline\": \"1.31.0\", \"azureml-pipeline-steps\": \"1.31.0\", \"azureml-pipeline-core\": \"1.31.0\", \"azureml-opendatasets\": \"1.31.0\", \"azureml-model-management-sdk\": \"1.0.1b6.post1\", \"azureml-mlflow\": \"1.31.0\", \"azureml-interpret\": \"1.31.0\", \"azureml-explain-model\": \"1.31.0\", \"azureml-defaults\": \"1.31.0\", \"azureml-dataset-runtime\": \"1.31.0\", \"azureml-dataprep\": \"2.18.0\", \"azureml-dataprep-rslex\": \"1.16.1\", \"azureml-dataprep-native\": \"36.0.0\", \"azureml-datadrift\": \"1.31.0\", \"azureml-core\": \"1.31.0\", \"azureml-contrib-services\": \"1.31.0\", \"azureml-contrib-server\": \"1.31.0\", \"azureml-contrib-reinforcementlearning\": \"1.31.0\", \"azureml-contrib-pipeline-steps\": \"1.31.0\", \"azureml-contrib-notebook\": \"1.31.0\", \"azureml-contrib-fairness\": \"1.31.0\", \"azureml-contrib-dataset\": \"1.31.0\", \"azureml-cli-common\": \"1.31.0\", \"azureml-automl-runtime\": \"1.31.0\", \"azureml-automl-dnn-nlp\": \"1.31.0\", \"azureml-automl-core\": \"1.31.0\", \"azureml-accel-models\": \"1.31.0\"}',\n  '_aml_system_scenario_identification': 'Remote.Parent',\n  'ClientType': 'SDK',\n  'environment_cpu_name': 'AzureML-AutoML',\n  'environment_cpu_label': 'prod',\n  'environment_gpu_name': 'AzureML-AutoML-GPU',\n  'environment_gpu_label': 'prod',\n  'root_attribution': 'automl',\n  'attribution': 'AutoML',\n  'Orchestrator': 'AutoML',\n  'CancelUri': 'https://japaneast.api.azureml.ms/jasmine/v1.0/subscriptions/653662f1-95de-4498-b876-1fd625bf5d18/resourceGroups/udacitycapstone/providers/Microsoft.MachineLearningServices/workspaces/udacityws/experimentids/71e58e51-6b4e-48f1-9863-62022f60b877/cancel/AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420',\n  'ClientSdkVersion': '1.32.0',\n  'snapshotId': '00000000-0000-0000-0000-000000000000',\n  'SetupRunId': 'AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_setup',\n  'SetupRunContainerId': 'dcid.AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_setup',\n  'FeaturizationRunJsonPath': 'featurizer_container.json',\n  'FeaturizationRunId': 'AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_featurize',\n  'ProblemInfoJsonString': '{\"dataset_num_categorical\": 0, \"is_sparse\": true, \"subsampling\": false, \"has_extra_col\": true, \"dataset_classes\": 2, \"dataset_features\": 102, \"dataset_samples\": 45222, \"single_frequency_class_detected\": false}',\n  'ModelExplainRunId': 'AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_ModelExplain',\n  'azureml.git.repository_uri': 'https://github.com/HajimeK/nd00333-capstone',\n  'mlflow.source.git.repoURL': 'https://github.com/HajimeK/nd00333-capstone',\n  'azureml.git.branch': 'master',\n  'mlflow.source.git.branch': 'master',\n  'azureml.git.commit': 'bb8bb394f2d1a40e23f582b5c1b308628e329b33',\n  'mlflow.source.git.commit': 'bb8bb394f2d1a40e23f582b5c1b308628e329b33',\n  'azureml.git.dirty': 'True'},\n 'inputDatasets': [{'dataset': {'id': 'fa0687fd-3726-4831-863a-18a8ccfd8f14'}, 'consumptionDetails': {'type': 'RunInput', 'inputName': 'training_data', 'mechanism': 'Direct'}}],\n 'outputDatasets': [],\n 'logFiles': {},\n 'submittedBy': '創 川田'}"
          },
          "metadata": {}
        }
      ],
      "execution_count": 8,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1626665905499
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Run Details\n",
        "\n",
        "OPTIONAL: Write about the different models trained and their performance. Why do you think some models did better than others?\n",
        "\n",
        "TODO: In the cell below, use the `RunDetails` widget to show the different experiments."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "best_automl_run, fitted_automl_model = automl_run.get_output()\r\n",
        "\r\n",
        "print(fitted_automl_model)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:root:The version of the SDK does not match the version the model was trained on.\n",
            "WARNING:root:The consistency in the result may not be guaranteed.\n",
            "WARNING:root:Package:azureml-automl-core, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-automl-runtime, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-core, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-dataset-runtime, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-defaults, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-interpret, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-mlflow, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-pipeline-core, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-telemetry, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-train-automl-client, training version:1.32.0, current version:1.31.0\n",
            "Package:azureml-train-automl-runtime, training version:1.32.0, current version:1.31.0\n",
            "WARNING:root:Please ensure the version of your local conda dependencies match the version on which your model was trained in order to properly retrieve your model.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Pipeline(memory=None,\n",
            "         steps=[('datatransformer',\n",
            "                 DataTransformer(enable_dnn=False, enable_feature_sweeping=True, feature_sweeping_config={}, feature_sweeping_timeout=86400, featurization_config=None, force_text_dnn=False, is_cross_validation=True, is_onnx_compatible=False, observer=None, task='classification', working_dir='/mnt/batch/tasks/shared/LS_root/mount...\n",
            "    enable_streaming=None,\n",
            "    timeseries_param_dict=None,\n",
            "    gpu_training_param_dict={'processing_unit_type': 'cpu'}\n",
            "), random_state=0, reg_alpha=0, reg_lambda=1.9791666666666667, subsample=0.8, tree_method='auto'))], verbose=False))], flatten_transform=None, weights=[0.5555555555555556, 0.1111111111111111, 0.1111111111111111, 0.1111111111111111, 0.1111111111111111]))],\n",
            "         verbose=False)\n",
            "Y_transformer(['LabelEncoder', LabelEncoder()])\n"
          ]
        }
      ],
      "execution_count": 20,
      "metadata": {
        "gather": {
          "logged": 1626668087239
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "fitted_automl_model._final_estimator"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 21,
          "data": {
            "text/plain": "PreFittedSoftVotingClassifier(\n    estimators=[('0', Pipeline(memory=None,\n             steps=[('maxabsscaler', MaxAbsScaler(copy=True)),\n                    ('lightgbmclassifier',\n                     LightGBMClassifier(min_data_in_leaf=20, n_jobs=1, problem_info=ProblemInfo(\n        dataset_samples=45222,\n        dataset_features=102,\n        dataset_classes=None,\n        dataset_num_categorical=0,\n        dataset_categoricals=None,\n        pipeline_categoricals=None,\n        dataset_y_std=None,\n        dataset_uid=None,\n        subsamp...\n        subsampling_schedule='hyperband_clip',\n        cost_mode_param=None,\n        iteration_timeout_mode=0,\n        iteration_timeout_param=None,\n        feature_column_names=None,\n        label_column_name=None,\n        weight_column_name=None,\n        cv_split_column_names=None,\n        enable_streaming=None,\n        timeseries_param_dict=None,\n        gpu_training_param_dict={'processing_unit_type': 'cpu'}\n    ), random_state=None))],\n             verbose=False)), ('49', Pipeline(memory=None,\n             steps=[('standardscalerwrapper',\n                     StandardScalerWrapper(\n        copy=True,\n        with_mean=False,\n        with_std=False\n    )),\n                    ('xgboostclassifier',\n                     XGBoostClassifier(booster='gbtree', colsample_bytree=0.8, eta=0.3, max_depth=4, max_leaves=0, n_estimators=600, n_jobs=1, objective='reg:logistic', problem_info=ProblemInfo(\n        dataset_samples=45222,\n        dataset_features=102,\n        dat...\n        iteration_timeout_mode=0,\n        iteration_timeout_param=None,\n        feature_column_names=None,\n        label_column_name=None,\n        weight_column_name=None,\n        cv_split_column_names=None,\n        enable_streaming=None,\n        timeseries_param_dict=None,\n        gpu_training_param_dict={'processing_unit_type': 'cpu'}\n    ), random_state=0, reg_alpha=2.1875, reg_lambda=2.0833333333333335, subsample=0.8, tree_method='auto'))],\n             verbose=False)), ('43', Pipeline(memory=None,\n             steps=[('standardscalerwrapper',\n                     StandardScalerWrapper(\n        copy=True,\n        with_mean=False,\n        with_std=False\n    )),\n                    ('xgboostclassifier',\n                     XGBoostClassifier(booster='gbtree', colsample_bytree=0.7, eta=0.05, gamma=1, grow_policy='lossguide', max_bin=63, max_depth=6, max_leaves=0, n_estimators=100, n_jobs=1, objective='reg:logistic', problem_info=ProblemInfo(\n        da...\n        iteration_timeout_mode=0,\n        iteration_timeout_param=None,\n        feature_column_names=None,\n        label_column_name=None,\n        weight_column_name=None,\n        cv_split_column_names=None,\n        enable_streaming=None,\n        timeseries_param_dict=None,\n        gpu_training_param_dict={'processing_unit_type': 'cpu'}\n    ), random_state=0, reg_alpha=1.5625, reg_lambda=1.0416666666666667, subsample=0.7, tree_method='hist'))],\n             verbose=False)), ('48', Pipeline(memory=None,\n             steps=[('sparsenormalizer', Normalizer(copy=True, norm='max')),\n                    ('xgboostclassifier',\n                     XGBoostClassifier(booster='gbtree', colsample_bytree=0.5, eta=0.3, gamma=5, max_depth=10, max_leaves=1023, n_estimators=400, n_jobs=1, objective='reg:logistic', problem_info=ProblemInfo(\n        dataset_samples=45222,\n        dataset_features=102,\n        dataset_classes=None,\n        datase...\n        iteration_timeout_mode=0,\n        iteration_timeout_param=None,\n        feature_column_names=None,\n        label_column_name=None,\n        weight_column_name=None,\n        cv_split_column_names=None,\n        enable_streaming=None,\n        timeseries_param_dict=None,\n        gpu_training_param_dict={'processing_unit_type': 'cpu'}\n    ), random_state=0, reg_alpha=0.3125, reg_lambda=1.3541666666666667, subsample=0.8, tree_method='auto'))],\n             verbose=False)), ('8', Pipeline(memory=None,\n             steps=[('sparsenormalizer', Normalizer(copy=True, norm='max')),\n                    ('xgboostclassifier',\n                     XGBoostClassifier(booster='gbtree', colsample_bytree=0.8, eta=0.2, gamma=0, max_depth=6, max_leaves=0, n_estimators=100, n_jobs=1, objective='reg:logistic', problem_info=ProblemInfo(\n        dataset_samples=45222,\n        dataset_features=102,\n        dataset_classes=None,\n        dataset_nu...\n        iteration_timeout_mode=0,\n        iteration_timeout_param=None,\n        feature_column_names=None,\n        label_column_name=None,\n        weight_column_name=None,\n        cv_split_column_names=None,\n        enable_streaming=None,\n        timeseries_param_dict=None,\n        gpu_training_param_dict={'processing_unit_type': 'cpu'}\n    ), random_state=0, reg_alpha=0, reg_lambda=1.9791666666666667, subsample=0.8, tree_method='auto'))],\n             verbose=False))],\n    weights=[0.5555555555555556, 0.1111111111111111, 0.1111111111111111, 0.1111111111111111, 0.1111111111111111],\n    flatten_transform=None,\n    classification_labels=array([0, 1])\n)"
          },
          "metadata": {}
        }
      ],
      "execution_count": 21,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1626668101982
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Best Model\n",
        "\n",
        "TODO: In the cell below, get the best model from the automl experiments and display all the properties of the model.\n",
        "\n"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "print(best_automl_run)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Run(Experiment: capstone,\n",
            "Id: AutoML_9c72d322-9be6-4e20-9c48-f5b7fdfa4420_65,\n",
            "Type: azureml.scriptrun,\n",
            "Status: Completed)\n"
          ]
        }
      ],
      "execution_count": 10,
      "metadata": {
        "gather": {
          "logged": 1626665956427
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#TODO: Save the best model\r\n",
        "import joblib\r\n",
        "joblib.dump(fitted_automl_model, './automl_best_model.joblib', compress = 3)"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 11,
          "data": {
            "text/plain": "['./automl_best_model.joblib']"
          },
          "metadata": {}
        }
      ],
      "execution_count": 11,
      "metadata": {
        "gather": {
          "logged": 1626665956947
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Model Deployment\n",
        "\n",
        "Remember you have to deploy only one of the two models you trained.. Perform the steps in the rest of this notebook only if you wish to deploy this model.\n",
        "\n",
        "TODO: In the cell below, register the model, create an inference config and deploy the model as a web service."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.core.model import InferenceConfig\r\n",
        "from azureml.core.environment import Environment\r\n",
        "\r\n",
        "# Register the model to deploy\r\n",
        "model = automl_run.register_model(description = 'Census Income Data Set')\r\n",
        "print(f'model ID {automl_run.model_id}')\r\n",
        "# Combine scoring script & environment in Inference configuration\r\n",
        "env = best_automl_run.get_environment().save_to_directory(path='environments')\r\n",
        "script_file= 'score.py'\r\n",
        "best_automl_run.download_file('outputs/scoring_file_v_1_0_0.py', script_file)\r\n",
        "inference_config = InferenceConfig(entry_script=script_file, environment=env)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "model ID AutoML9c72d322965\n"
          ]
        }
      ],
      "execution_count": 13,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1626666132136
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.core.webservice import AciWebservice, Webservice\r\n",
        "\r\n",
        "# Set deployment configuration\r\n",
        "deployment_config = AciWebservice.deploy_configuration(cpu_cores = 1, memory_gb = 1)"
      ],
      "outputs": [],
      "execution_count": 22,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1626668713123
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.core.model import Model\r\n",
        "# Define the model, inference, & deployment configuration and web service name and location to deploy\r\n",
        "service = Model.deploy(\r\n",
        "    workspace = workspace,\r\n",
        "    name = \"capstone-model\",\r\n",
        "    models = [model],\r\n",
        "    inference_config = inference_config,\r\n",
        "    deployment_config = deployment_config,\r\n",
        "    overwrite = True)\r\n",
        "service.wait_for_deployment(show_output=True)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Tips: You can try get_logs(): https://aka.ms/debugimage#dockerlog or local deployment: https://aka.ms/debugimage#debug-locally to debug if deployment takes longer than 10 minutes.\n",
            "Running\n",
            "2021-07-19 04:25:27+00:00 Creating Container Registry if not exists.\n",
            "2021-07-19 04:25:29+00:00 Use the existing image.\n",
            "2021-07-19 04:25:30+00:00 Generating deployment configuration.\n",
            "2021-07-19 04:25:31+00:00 Submitting deployment to compute..\n",
            "2021-07-19 04:25:38+00:00 Checking the status of deployment capstone-model..\n",
            "2021-07-19 04:26:03+00:00 Checking the status of inference endpoint capstone-model.\n",
            "Succeeded\n",
            "ACI service creation operation finished, operation \"Succeeded\"\n"
          ]
        }
      ],
      "execution_count": 23,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1626668766462
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(service.state)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Healthy\n"
          ]
        }
      ],
      "execution_count": 25,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1626668958752
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "TODO: In the cell below, send a request to the web service you deployed to test it."
      ],
      "metadata": {
        "collapsed": true,
        "gather": {
          "logged": 1598431657736
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import json\r\n",
        "\r\n",
        "input_payload = json.dumps({\r\n",
        "    'data': json.loads(df.drop('income', axis = 1)[10:13].to_json(orient='records'))\r\n",
        "})\r\n",
        "print(f'input : f{input_payload}')\r\n",
        "print(f\"expected: {df['income'][10:13]}\")\r\n",
        "output = service.run(input_payload)\r\n",
        "\r\n",
        "print(f'output: {output}')"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "input : f{\"data\": [{\"age\": 37, \"workclass\": \" Private\", \"education_level\": \" Some-college\", \"education-num\": 10.0, \"marital-status\": \" Married-civ-spouse\", \"occupation\": \" Exec-managerial\", \"relationship\": \" Husband\", \"race\": \" Black\", \"sex\": \" Male\", \"capital-gain\": 0.0, \"capital-loss\": 0.0, \"hours-per-week\": 80.0, \"native-country\": \" United-States\"}, {\"age\": 30, \"workclass\": \" State-gov\", \"education_level\": \" Bachelors\", \"education-num\": 13.0, \"marital-status\": \" Married-civ-spouse\", \"occupation\": \" Prof-specialty\", \"relationship\": \" Husband\", \"race\": \" Asian-Pac-Islander\", \"sex\": \" Male\", \"capital-gain\": 0.0, \"capital-loss\": 0.0, \"hours-per-week\": 40.0, \"native-country\": \" India\"}, {\"age\": 23, \"workclass\": \" Private\", \"education_level\": \" Bachelors\", \"education-num\": 13.0, \"marital-status\": \" Never-married\", \"occupation\": \" Adm-clerical\", \"relationship\": \" Own-child\", \"race\": \" White\", \"sex\": \" Female\", \"capital-gain\": 0.0, \"capital-loss\": 0.0, \"hours-per-week\": 30.0, \"native-country\": \" United-States\"}]}\n",
            "expected: 10     >50K\n",
            "11     >50K\n",
            "12    <=50K\n",
            "Name: income, dtype: object\n",
            "output: {\"result\": [\">50K\", \">50K\", \"<=50K\"]}\n"
          ]
        }
      ],
      "execution_count": 34,
      "metadata": {
        "gather": {
          "logged": 1626669320824
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "service.get_logs()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 18,
          "data": {
            "text/plain": "'2021-07-19T03:51:13,846754200+00:00 - rsyslog/run \\n2021-07-19T03:51:13,847021400+00:00 - gunicorn/run \\n2021-07-19T03:51:13,845901000+00:00 - iot-server/run \\nDynamic Python package installation is disabled.\\nStarting HTTP server\\n2021-07-19T03:51:13,920598800+00:00 - nginx/run \\nrsyslogd: /azureml-envs/azureml_fc92eee9a5613508afa12283dd0b27d8/lib/libuuid.so.1: no version information available (required by rsyslogd)\\nEdgeHubConnectionString and IOTEDGE_IOTHUBHOSTNAME are not set. Exiting...\\n2021-07-19T03:51:14,295570800+00:00 - iot-server/finish 1 0\\n2021-07-19T03:51:14,303021400+00:00 - Exit code 1 is normal. Not restarting iot-server.\\nStarting gunicorn 20.1.0\\nListening at: http://127.0.0.1:31311 (64)\\nUsing worker: sync\\nworker timeout is set to 300\\nBooting worker with pid: 92\\nSPARK_HOME not set. Skipping PySpark Initialization.\\nGenerating new fontManager, this may take some time...\\nInitializing logger\\n2021-07-19 03:51:17,171 | root | INFO | Starting up app insights client\\nlogging socket was found. logging is available.\\nlogging socket was found. logging is available.\\n2021-07-19 03:51:17,172 | root | INFO | Starting up request id generator\\n2021-07-19 03:51:17,172 | root | INFO | Starting up app insight hooks\\n2021-07-19 03:51:17,173 | root | INFO | Invoking user\\'s init function\\n2021-07-19 03:51:22,167 | azureml.core | WARNING | Failure while loading azureml_run_type_providers. Failed to load entrypoint automl = azureml.train.automl.run:AutoMLRun._from_run_dto with exception cannot import name \\'RunType\\'.\\nFailure while loading azureml_run_type_providers. Failed to load entrypoint automl = azureml.train.automl.run:AutoMLRun._from_run_dto with exception cannot import name \\'RunType\\'.\\n2021-07-19 03:51:22,745 | root | INFO | Users\\'s init has completed successfully\\n2021-07-19 03:51:22,754 | root | INFO | Skipping middleware: dbg_model_info as it\\'s not enabled.\\n2021-07-19 03:51:22,790 | root | INFO | Skipping middleware: dbg_resource_usage as it\\'s not enabled.\\nGenerating swagger file: /tmp/tmpfum1a6ws\\n2021-07-19 03:51:22,795 | root | INFO | Scoring timeout is found from os.environ: 60000 ms\\n2021-07-19 03:51:39,793 | root | INFO | 200\\n127.0.0.1 - - [19/Jul/2021:03:51:39 +0000] \"GET /swagger.json HTTP/1.0\" 200 3058 \"-\" \"Go-http-client/1.1\"\\n2021-07-19 03:51:44,732 | root | INFO | 200\\n127.0.0.1 - - [19/Jul/2021:03:51:44 +0000] \"GET /swagger.json HTTP/1.0\" 200 3058 \"-\" \"Go-http-client/1.1\"\\n2021-07-19 03:51:45,125 | root | INFO | Validation Request Content-Type\\n2021-07-19 03:51:45,126 | root | INFO | Scoring Timer is set to 60.0 seconds\\n2021-07-19 03:51:45,265 | root | INFO | 200\\n127.0.0.1 - - [19/Jul/2021:03:51:45 +0000] \"POST /score HTTP/1.0\" 200 123 \"-\" \"python-requests/2.25.1\"\\n'"
          },
          "metadata": {}
        }
      ],
      "execution_count": 18,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1626666706887
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "TODO: In the cell below, print the logs of the web service and delete the service"
      ],
      "metadata": {
        "collapsed": true,
        "gather": {
          "logged": 1598432765711
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "service.delete()"
      ],
      "outputs": [],
      "execution_count": 19,
      "metadata": {
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1626666865452
        }
      }
    }
  ],
  "metadata": {
    "kernel_info": {
      "name": "python3"
    },
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python",
      "version": "3.6.9",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "nteract": {
      "version": "nteract-front-end@1.0.0"
    },
    "microsoft": {
      "host": {
        "AzureML": {
          "notebookHasBeenCompleted": true
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}